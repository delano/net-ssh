var search_data = {"index":{"searchIndex":["authentication","methods","common","testabstract","testhostbased","testkeyboardinteractive","testpassword","testpublickey","testagent","mocksocket","testkeymanager","testsession","configtable","boolitem","execitem","item","metaconfigenvironment","packageselectionitem","pathitem","programitem","selectitem","connection","testchannel","mockconnection","testsession","mocksocket","enumerable","errno","enotempty","file","fileoperations","hookscriptapi","installer","shebang","mocktransport","blockverifier","net","ssh","authentication","agent","comment","agenterror","agentnotavailable","constants","keymanager","keymanagererror","methods","abstract","hostbased","keyboardinteractive","password","publickey","pageant","socket","win","session","authenticationfailed","buffer","bufferedio","channelopenfailed","channelrequestfailed","config","connection","channel","constants","session","nilchannel","term","disconnect","exception","hostkeymismatch","keyfactory","knownhosts","loggable","packet","promptmethods","clear","highline","termios","proxy","connecterror","error","http","socks4","socks5","unauthorizederror","service","forward","test","channel","extensions","bufferedio","channel","io","classmethods","packetstream","kex","localpacket","packet","remotepacket","script","socket","transport","algorithms","cipherfactory","constants","hmac","abstract","md5","md5_96","none","sha1","sha1_96","identitycipher","kex","diffiehellmangroup1sha1","diffiehellmangroupexchangesha1","packetstream","serverversion","session","state","verifiers","lenient","null","strict","version","object","openssl","bn","pkey","dh","dsa","pkey","rsa","setuperror","string","testbuffer","testbufferedio","testconfig","testkeyfactory","toplevelinstaller","toplevelinstallermulti","transport","hmac","testmd5","testmd5_96","testnone","testsha1","testsha1_96","kex","testdiffiehellmangroup1sha1","testdiffiehellmangroupexchangesha1","testalgorithms","testcipherfactory","testhmac","testidentitycipher","testpacketstream","testserverversion","testsession","teststate","<=>()","==()","p()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]=()","[]=()","[]=()","accept_kexinit()","active?()","active_locals()","active_remotes()","add()","add()","add()","add()","add_bool_config()","add_config()","add_key_data()","add_path_config()","agent()","agent()","allow?()","allowed_packet?()","append()","assert_scripted()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate()","available()","available()","available_for_read?()","binread()","block_size()","bool_config?()","busy?()","cancel_local()","cancel_remote()","clean_dir_bin()","clean_dir_conf()","clean_dir_data()","clean_dir_ext()","clean_dir_lib()","clean_dir_man()","cleanup()","cleanup()","clear!()","clear!()","client_name()","close()","close()","close()","close()","close()","closed?()","closed?()","closed?()","closing?()","command()","compress()","compression?()","compressor()","config()","config()","config?()","config_dir_bin()","config_dir_conf()","config_dir_data()","config_dir_ext()","config_dir_lib()","config_dir_man()","config_names()","config_type()","config_type()","config_type()","config_type()","config_type()","config_type()","configuration_for()","configure_client()","configure_client()","configure_server()","configure_server()","connect()","connect!()","connection()","consume!()","curr_objdir()","curr_srcdir()","debug()","declare_packages()","decompress()","decompressor()","decrypt()","default_files()","diff?()","digest()","digest()","digest_class()","digest_class()","dir?()","directories_of()","distclean_dir_bin()","distclean_dir_conf()","distclean_dir_data()","distclean_dir_ext()","distclean_dir_lib()","distclean_dir_man()","dive_into()","dllext()","do_close()","do_eof()","do_extended_data()","do_failure()","do_open_failed()","do_success()","each()","each_identity()","each_selected_installers()","empty?()","encrypt()","enqueue()","enqueue_message()","enqueue_message()","enqueue_packet()","enqueue_packet()","env()","eof!()","eof?()","eof?()","error()","evaluate()","exchange_keys()","exchange_keys()","exec()","exec()","exec!()","exec_clean()","exec_clean()","exec_clean()","exec_config()","exec_config()","exec_config()","exec_distclean()","exec_distclean()","exec_distclean()","exec_install()","exec_install()","exec_install()","exec_setup()","exec_setup()","exec_setup()","exec_show()","exec_task_traverse()","exec_test()","exec_test()","exec_test()","existfiles()","expect()","expect()","expect()","expect!()","expect_message()","extconf()","extdir?()","extended()","extract_selection()","fatal()","files_of()","fill()","final()","final_cipher()","fingerprint()","fingerprint()","finish()","fixup()","for()","force_remove_file()","forward()","from()","get()","get()","get()","get_config()","get_lengths()","getbyte()","getpeername()","gets()","gets_channel_close()","gets_channel_data()","gets_channel_eof()","gets_channel_request()","gets_close()","gets_data()","gets_eof()","gets_exit_status()","glob_reject()","glob_select()","globs2re()","help_opt()","help_opt()","hint()","hint()","hookfiles()","host()","host()","host_as_string()","hostfiles()","identities()","idle!()","if_needs_rekey?()","if_supported?()","increment()","info()","init_installers()","init_installers()","initialize_ssh()","initialized?()","inject_remote_delay!()","inspect()","inspect()","install()","install_dir_bin()","install_dir_conf()","install_dir_data()","install_dir_ext()","install_dir_lib()","install_dir_man()","install_files()","instantiate!()","invoke()","invoke()","ip()","iv=()","iv_len()","key()","key=()","key?()","key_length()","key_length()","key_length()","keys_for()","length()","libfiles()","listen_to()","load()","load()","load_data_private_key()","load_data_public_key()","load_multipackage_entries()","load_private_key()","load_public_key()","load_rbconfig()","load_savefile()","load_script()","load_standard_entries()","local()","local?()","local?()","local_id()","lookup()","loop()","loop()","loop_forever()","loop_forever()","lwarn()","mac_length()","mac_length()","make()","mapdir()","method_missing()","mkdir_p()","move_file()","multipackage?()","name()","names()","needs_rekey?()","negotiate!()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_shebang()","next()","next_message()","next_message()","next_message()","next_packet()","no_harm?()","no_harm?()","no_harm?()","noop()","objdir_root()","objdir_root()","on_close()","on_data()","on_eof()","on_extended_data()","on_global_request()","on_open_channel()","on_open_failed()","on_process()","on_request()","open()","open()","open()","open()","open()","open_atomic_writer()","open_channel()","opens_channel()","packages()","packages=()","parse()","parse_opt()","parsearg_clean()","parsearg_config()","parsearg_distclean()","parsearg_global()","parsearg_install()","parsearg_no_options()","parsearg_setup()","parsearg_show()","parsearg_test()","path_config?()","peer()","peer_ip()","pending?()","pending_write?()","poll_message()","poll_message()","poll_next_packet()","port()","postprocess()","preprocess()","print_usage()","print_usage()","process()","process()","process()","process()","process()","prompt()","prompt()","prompt()","push()","read()","read()","read()","read()","read!()","read_available()","read_bignum()","read_bool()","read_buffer()","read_byte()","read_int64()","read_key()","read_keyblob()","read_long()","read_string()","read_to()","recv()","register()","rekey!()","rekey!()","rekey_as_needed()","relpath()","relpath()","remainder_as_buffer()","remember_host!()","remote()","remote?()","remote?()","remote_id()","remote_to()","remove()","remove_config()","remove_file()","remove_tree()","remove_tree0()","request_pty()","reset()","reset!()","reset!()","resolve()","resolve()","return()","return()","rm_f()","rm_rf()","ruby()","rubyextentions()","run_hook()","run_hook()","run_metaconfigs()","run_metaconfigs()","save()","savefile()","search_for()","search_in()","select_for_read?()","select_for_test()","send()","send()","send_channel_request()","send_data()","send_data_for_test()","send_global_request()","send_message()","send_message()","send_message()","send_message()","send_message()","send_packet()","send_pending()","send_query()","sends()","sends_channel_close()","sends_channel_data()","sends_channel_eof()","sends_channel_request()","sends_close()","sends_data()","sends_eof()","sends_exec()","sends_subsystem()","service_request()","session_id()","set()","set()","set_config()","set_config_default()","setup()","setup()","setup()","setup_dir_bin()","setup_dir_conf()","setup_dir_data()","setup_dir_ext()","setup_dir_lib()","setup_dir_man()","setup_rb_error()","shutdown!()","shutdown!()","sign()","sign()","socket()","srcdir_root()","srcdir_root()","srcdirectories()","srcdirectory?()","srcentries()","srcexist?()","srcfile()","srcfile?()","srcfiles()","ssh_do_sign()","ssh_do_sign()","ssh_do_verify()","ssh_do_verify()","ssh_type()","ssh_type()","start()","stop_listening_to()","story()","subsystem()","supported?()","targetfiles()","teardown()","teardown()","teardown()","test!()","test_1_99_server_version_should_be_acceptible()","test_2_0_server_version_should_be_acceptible()","test_3des_cbc_for_decryption()","test_3des_cbc_for_encryption()","test_active_should_be_false_when_channel_is_not_in_channel_list()","test_active_should_be_true_when_channel_appears_in_channel_list()","test_add_ensures_list_is_unique()","test_aes128_cbc_for_decryption()","test_aes128_cbc_for_encryption()","test_aes192_cbc_for_decryption()","test_aes192_cbc_for_encryption()","test_aes256_cbc_for_decryption()","test_aes256_cbc_for_encryption()","test_allow_when_not_pending_should_be_true_for_all_packets()","test_allow_when_pending_should_be_true_only_for_packets_valid_during_key_exchange()","test_allowed_packets()","test_append_should_append_argument_without_changing_position_and_should_return_self()","test_assume_agent_is_available_by_default()","test_authenticate_should_be_false_if_given_password_is_not_accepted()","test_authenticate_should_be_false_when_server_does_not_support_this_method()","test_authenticate_should_be_true_if_given_password_is_accepted()","test_authenticate_should_duplicate_password_as_needed_to_fill_request()","test_authenticate_should_prompt_for_input_when_password_is_not_given()","test_authenticate_should_raise_error_if_service_request_fails()","test_authenticate_should_return_false_if_all_auth_methods_fail()","test_authenticate_should_return_false_if_no_keys_can_authenticate()","test_authenticate_should_return_false_if_no_keys_can_authenticate()","test_authenticate_should_return_false_if_password_change_request_is_received()","test_authenticate_should_return_false_if_signature_exchange_fails()","test_authenticate_should_return_false_when_key_manager_has_no_keys()","test_authenticate_should_return_false_when_key_manager_has_no_keys()","test_authenticate_should_return_false_when_no_key_manager_has_been_set()","test_authenticate_should_return_false_when_no_key_manager_has_been_set()","test_authenticate_should_return_true_if_any_key_can_authenticate()","test_authenticate_should_return_true_if_any_key_can_authenticate()","test_authenticate_when_password_is_acceptible_should_return_true()","test_authenticate_when_password_is_unacceptible_should_return_false()","test_available_for_read?()","test_available_for_read_should_return_nontrue_when_select_fails()","test_available_for_read_should_return_nontrue_when_self_is_not_ready()","test_available_for_read_should_return_true_when_self_is_ready()","test_available_should_return_length_after_position_to_end_of_string()","test_block_size_should_be_8()","test_blowfish_cbc_for_decryption()","test_blowfish_cbc_for_encryption()","test_cast128_cbc_for_decryption()","test_cast128_cbc_for_encryption()","test_channel_close_packet_should_be_routed_to_corresponding_channel_and_channel_should_be_closed_and_removed()","test_channel_data_packet_should_be_routed_to_corresponding_channel()","test_channel_eof_packet_should_be_routed_to_corresponding_channel()","test_channel_extended_data_packet_should_be_routed_to_corresponding_channel()","test_channel_failure_packet_should_be_routed_to_corresponding_channel()","test_channel_open_confirmation_packet_should_be_routed_to_corresponding_channel()","test_channel_open_failure_should_remove_channel_and_tell_channel_that_open_failed()","test_channel_open_packet_with_corresponding_handler_should_result_in_channel_open_confirmation_when_handler_succeeds()","test_channel_open_packet_with_corresponding_handler_should_result_in_channel_open_failure_when_handler_returns_an_error()","test_channel_open_packet_without_corresponding_channel_open_handler_should_result_in_channel_open_failure()","test_channel_properties()","test_channel_request_for_nonexistant_channel_should_be_ignored()","test_channel_request_packet_should_be_routed_to_corresponding_channel()","test_channel_success_packet_should_be_routed_to_corresponding_channel()","test_channel_window_adjust_packet_should_be_routed_to_corresponding_channel()","test_cleanup_should_delegate_cleanup_to_client_and_server_states()","test_clear_bang_should_reset_buffer_contents_and_counters()","test_client_name_when_getnameinfo_and_gethostbyname_all_fail()","test_client_name_when_getnameinfo_fails_but_gethostbyname_works()","test_client_name_when_getnameinfo_fails_first_and_then_works()","test_client_name_when_getnameinfo_works()","test_close_before_channel_has_been_confirmed_should_do_nothing()","test_close_should_cleanup_and_close_socket()","test_close_should_close_socket()","test_close_should_set_closing_and_send_message()","test_close_while_closing_should_do_nothing()","test_compress_when_compression_is_delayed_and_auth_hint_is_set_should_return_compressed_text()","test_compress_when_compression_is_delayed_and_no_auth_hint_is_set_should_return_text()","test_compress_when_compression_is_enabled_should_return_compressed_text()","test_compress_when_no_compression_is_active_returns_text()","test_compressor_defaults_to_default_zlib_compression()","test_compressor_uses_compression_level_when_given()","test_configure_client_should_pass_options_to_socket_client_state()","test_configure_server_should_pass_options_to_socket_server_state()","test_connect_should_raise_error_if_connection_could_not_be_established()","test_connect_should_use_agent_factory_to_determine_connection_type()","test_constructor_defaults()","test_constructor_should_build_default_list_of_preferred_algorithms()","test_constructor_should_honor_options()","test_constructor_should_initialize_all_values()","test_constructor_should_initialize_buffer_to_empty_by_default()","test_constructor_should_set_client_and_server_prefs_identically()","test_constructor_should_set_defaults()","test_constructor_should_set_defaults()","test_constructor_should_set_defaults()","test_constructor_should_set_defaults()","test_constructor_with_general_preferred_compression_should_put_none_last()","test_constructor_with_known_hosts_reporting_known_host_key_should_use_that_host_key_type()","test_constructor_with_multiple_preferred_compression_should_put_all_preferred_compression_first()","test_constructor_with_multiple_preferred_encryption_should_put_all_preferred_encryption_first()","test_constructor_with_multiple_preferred_hmac_should_put_all_preferred_hmac_first()","test_constructor_with_preferred_compression_should_put_preferred_compression_first()","test_constructor_with_preferred_encryption_should_put_preferred_encryption_first()","test_constructor_with_preferred_hmac_should_put_preferred_hmac_first()","test_constructor_with_preferred_host_key_type_should_put_preferred_host_key_type_first()","test_constructor_with_preferred_kex_should_put_preferred_kex_first()","test_constructor_with_string_should_initialize_buffer_to_the_string()","test_constructor_with_unrecognized_compression_should_raise_exception()","test_constructor_with_unrecognized_encryption_should_raise_exception()","test_constructor_with_unrecognized_hmac_should_raise_exception()","test_constructor_with_unrecognized_host_key_type_should_raise_exception()","test_constructor_with_unrecognized_kex_should_raise_exception()","test_consume_with_argument_should_resize_buffer_starting_at_n()","test_consume_without_argument_should_resize_buffer_to_start_at_position()","test_decompress_when_compression_is_delayed_and_auth_hint_is_set_should_return_decompressed_text()","test_decompress_when_compression_is_delayed_and_no_auth_hint_is_set_should_return_text()","test_decompress_when_compression_is_enabled_should_return_decompressed_text()","test_decompress_when_no_compression_is_active_returns_text()","test_decrypt_should_return_self()","test_do_data_should_update_local_window_size()","test_do_data_when_local_window_size_drops_below_threshold_should_trigger_window_adjust_message()","test_do_extended_data_should_update_local_window_size()","test_do_failure_should_grab_next_pending_request_and_call_it()","test_do_open_confirmation_should_call_open_confirmation_callback()","test_do_open_confirmation_should_set_remote_parameters()","test_do_open_confirmation_with_non_session_channel_should_not_invoke_agent_forwarding_even_if_agent_forwarding_requested()","test_do_open_confirmation_with_session_channel_should_invoke_agent_forwarding_if_agent_forwarding_requested()","test_do_request_for_handled_request_should_invoke_callback_and_do_nothing_if_fails_and_not_wants_reply()","test_do_request_for_handled_request_should_invoke_callback_and_do_nothing_if_returns_true_and_not_wants_reply()","test_do_request_for_handled_request_should_invoke_callback_and_send_channel_failure_if_returns_false_and_wants_reply()","test_do_request_for_handled_request_should_invoke_callback_and_send_channel_success_if_returns_true_and_wants_reply()","test_do_request_for_unhandled_request_should_do_nothing_if_not_wants_reply()","test_do_request_for_unhandled_request_should_send_channel_failure_if_wants_reply()","test_do_success_should_grab_next_pending_request_and_call_it()","test_do_window_adjust_should_adjust_remote_window_size_by_the_given_amount()","test_each_identity_should_load_from_key_files()","test_encrypt_should_return_self()","test_enqueue_message_should_delegate_to_socket()","test_enqueue_packet()","test_enqueue_pending_output_should_have_no_effect_if_channel_has_not_been_confirmed()","test_enqueue_pending_output_should_have_no_effect_if_there_is_no_output()","test_enqueue_pending_output_should_not_enqueue_more_than_max_packet_length_at_once()","test_enqueue_pending_output_should_not_enqueue_more_than_max_window_size()","test_enqueue_pending_output_should_not_enqueue_more_than_output_length()","test_enqueue_short_packet_should_ensure_packet_is_at_least_16_bytes_long()","test_enqueue_should_not_write_to_underlying_io()","test_eof_bang_should_not_send_eof_if_eof_was_already_declared()","test_eof_bang_should_send_eof_to_server()","test_eof_q_should_return_true_if_eof_declared()","test_exchange_keys_should_pass_expected_parameters_to_host_key_verifier()","test_exchange_keys_should_return_expected_results_when_successful()","test_exchange_keys_when_server_signature_could_not_be_verified_should_raise_exception()","test_exchange_keys_with_host_key_type_mismatch_should_raise_exception()","test_exchange_keys_with_signature_key_type_mismatch_should_raise_exception()","test_exchange_keys_with_unverifiable_host_should_raise_exception()","test_exchange_with_fewer_than_maximum_bits_uses_need_bits()","test_exchange_with_fewer_than_minimum_bits_uses_minimum_bits()","test_exchange_with_more_than_maximum_bits_uses_maximum_bits()","test_exchange_with_zlib_at_openssh_dot_com_compression_enabled_sets_compression_to_delayed()","test_exchange_with_zlib_compression_enabled_sets_compression_to_standard()","test_exec_bang_should_block_until_command_finishes()","test_exec_bang_without_block_should_return_data_as_string()","test_exec_should_be_syntactic_sugar_for_a_channel_request()","test_exec_should_open_channel_and_configure_default_callbacks()","test_exec_without_block_should_use_print_to_display_result()","test_expect_message_should_raise_exception_if_next_packet_is_not_expected_type()","test_expect_message_should_return_packet_if_next_packet_is_expected_type()","test_expected_digest()","test_expected_digest()","test_expected_digest()","test_expected_digest()","test_expected_digest()","test_expected_digest_class()","test_expected_digest_class()","test_expected_digest_class()","test_expected_key_length()","test_expected_key_length()","test_expected_key_length()","test_expected_mac_length()","test_expected_mac_length()","test_expected_mac_length()","test_expected_mac_length()","test_expected_mac_length()","test_fill_should_pull_from_underlying_io()","test_final_should_return_empty_string()","test_for_should_load_all_files_and_translate_to_net_ssh_options()","test_forward_should_create_and_cache_instance_of_forward_service()","test_from_should_build_new_buffer_from_definition()","test_from_should_require_an_even_number_of_arguments()","test_from_with_array_argument_should_write_multiple_of_the_given_type()","test_get_with_unrecognized_hmac_raises_argument_error()","test_global_request_handler_returning_false_should_trigger_failure_auto_reply()","test_global_request_handler_returning_other_value_should_raise_error()","test_global_request_handler_returning_sent_should_not_trigger_auto_reply()","test_global_request_handler_returning_true_should_trigger_success_auto_reply()","test_global_request_handler_should_not_trigger_auto_reply_if_no_reply_is_wanted()","test_global_request_packets_should_be_auto_replied_to_even_if_no_handler_exists()","test_global_request_packets_should_be_silently_handled_if_no_handler_exists_for_them()","test_header_lines_should_be_accumulated()","test_hint_should_set_hint_on_socket()","test_host_as_string_should_return_host_and_ip_when_port_is_default()","test_host_as_string_should_return_host_and_ip_with_port_when_port_is_not_default()","test_host_as_string_should_return_only_host_and_port_when_host_is_ip_and_port_is_not_default()","test_host_as_string_should_return_only_host_when_host_is_ip()","test_idea_cbc_for_decryption()","test_idea_cbc_for_encryption()","test_identities_should_augment_identities_with_comment_field()","test_identities_should_fail_if_ssh2_agent_failure_recieved()","test_identities_should_fail_if_ssh_agent_failure_recieved()","test_identities_should_fail_if_ssh_com_agent2_failure_recieved()","test_identities_should_fail_if_response_is_not_ssh2_agent_identities_answer()","test_identities_should_load_from_agent()","test_if_needs_rekey_should_not_yield_if_neither_client_nor_server_states_need_rekey()","test_if_needs_rekey_should_yield_and_cleanup_if_both_need_rekey()","test_if_needs_rekey_should_yield_and_cleanup_if_client_needs_rekey()","test_if_needs_rekey_should_yield_and_cleanup_if_server_needs_rekey()","test_increment_should_increment_counters()","test_initial_state_should_be_neither_pending_nor_initialized()","test_key_exchange_when_initiated_by_client()","test_key_exchange_when_initiated_by_server()","test_key_exchange_when_server_does_not_support_any_preferred_kex_should_raise_error()","test_key_exchange_when_server_does_not_support_preferred_kex_should_fallback_to_secondary()","test_key_files_and_known_identities_are_empty_by_default()","test_key_length_with_unrecognized_hmac_raises_argument_error()","test_key_should_be_truncated_to_required_length()","test_lengths_for_3des_cbc()","test_lengths_for_aes128_cbc()","test_lengths_for_aes192_cbc()","test_lengths_for_aes256_cbc()","test_lengths_for_blowfish_cbc()","test_lengths_for_cast128_cbc()","test_lengths_for_idea_cbc()","test_lengths_for_none()","test_lengths_for_rijndael_cbc()","test_listen_to_should_add_argument_to_listeners_list_if_block_is_given()","test_listen_to_without_callback_should_add_argument_as_listener()","test_load_encrypted_private_dsa_key_should_prompt_for_password_and_return_key()","test_load_encrypted_private_dsa_key_with_password_should_not_prompt_and_return_key()","test_load_encrypted_private_rsa_key_should_prompt_for_password_and_return_key()","test_load_encrypted_private_rsa_key_with_password_should_not_prompt_and_return_key()","test_load_encrypted_private_key_should_give_three_tries_for_the_password_and_then_raise_exception()","test_load_for_non_existant_file_should_return_empty_hash()","test_load_public_rsa_key_should_return_key()","test_load_should_expand_path()","test_load_should_parse_equal_sign_delimiters()","test_load_unencrypted_private_dsa_key_should_return_key()","test_load_unencrypted_private_rsa_key_should_return_key()","test_load_with_exact_host_match_should_load_that_section()","test_load_with_wild_card_matches_should_load_all_matches_with_first_match_taking_precedence()","test_loop_should_call_process_until_process_returns_false()","test_multiple_pending_dispatches_should_be_dispatched_together()","test_name_should_be_identity()","test_needs_rekey_should_be_true_if_blocks_exceeds_max_blocks()","test_needs_rekey_should_be_true_if_packets_exceeds_max_packets()","test_negotiate_should_be_successful_with_expected_response()","test_negotiate_should_raise_error_if_response_was_unexpected()","test_negotiate_should_raise_error_if_ssh2_agent_response_recieved()","test_next_message_should_block_until_next_message_is_available()","test_next_message_should_raise_error_on_unrecognized_packet_types()","test_next_message_should_silently_handle_userauth_banner_packets()","test_next_message_should_understand_userauth_failure()","test_next_message_should_understand_userauth_success()","test_next_packet_fails_with_invalid_argument()","test_next_packet_should_block_when_requested_until_entire_packet_is_available()","test_next_packet_should_eventually_return_packet_when_non_blocking_and_partial_read()","test_next_packet_should_not_block_by_default()","test_next_packet_should_return_nil_when_non_blocking_and_not_ready()","test_next_packet_should_return_nil_when_non_blocking_and_partial_read()","test_next_packet_should_return_packet_when_non_blocking_and_full_read()","test_next_packet_when_blocking_should_fail_when_fill_could_not_read_any_data()","test_none_for_decryption()","test_none_for_encryption()","test_on_close_with_block_should_set_callback()","test_on_data_with_block_should_set_callback()","test_on_eof_with_block_should_set_callback()","test_on_extended_data_with_block_should_set_callback()","test_on_open_channel_should_register_block_with_given_channel_type()","test_on_process_with_block_should_set_callback()","test_open_channel_defaults_should_use_session_channel()","test_open_channel_with_extras_should_append_extras_to_packet()","test_open_channel_with_type_should_use_type()","test_paranoid_false_uses_null_verifier()","test_paranoid_true_uses_lenient_verifier()","test_paranoid_value_responding_to_verify_should_pass_muster()","test_paranoid_very_uses_strict_verifier()","test_peer_ip_should_query_socket_for_info_about_peer()","test_peer_should_return_hash_of_info_about_peer()","test_poll_message_should_default_to_non_blocking()","test_poll_message_should_enqueue_packets_when_algorithm_disallows_packet()","test_poll_message_should_not_read_from_queue_when_consume_queue_is_false()","test_poll_message_should_not_read_from_queue_when_next_in_queue_is_not_allowed()","test_poll_message_should_query_next_packet_using_the_given_blocking_parameter()","test_poll_message_should_read_from_queue_when_next_in_queue_is_allowed_and_consume_queue_is_true()","test_poll_message_should_return_other_packets()","test_poll_message_should_silently_handle_debug_packets_with_always_display()","test_poll_message_should_silently_handle_debug_packets_without_always_display()","test_poll_message_should_silently_handle_disconnect_packets()","test_poll_message_should_silently_handle_ignore_packets()","test_poll_message_should_silently_handle_kexinit_packets()","test_poll_message_should_silently_handle_unimplemented_packets()","test_poll_next_packet()","test_process_should_call_rekey_as_needed()","test_process_should_exit_after_processing_if_block_is_true_then_false()","test_process_should_exit_immediately_if_block_is_false()","test_process_should_not_process_channels_that_are_closing()","test_process_when_process_callback_is_not_set_should_just_enqueue_data()","test_process_when_process_callback_is_set_should_yield_self_before_enqueuing_data()","test_push_should_enqueue_packet()","test_read_at_eof_should_return_empty_string()","test_read_bang_should_read_and_consume_and_return_read_portion()","test_read_bignum_should_read_openssl_formatted_bignum()","test_read_bignum_should_return_nil_if_length_cannot_be_read()","test_read_bool_should_return_false_if_zero_byte_is_read()","test_read_bool_should_return_nil_at_eof()","test_read_bool_should_return_true_if_non_zero_byte_is_read()","test_read_buffer_should_read_a_string_and_return_it_wrapped_in_a_buffer()","test_read_byte_should_return_nil_at_eof()","test_read_byte_should_return_single_byte_integer()","test_read_int64_should_return_8_byte_integer()","test_read_int64_should_return_nil_on_partial_read()","test_read_key_blob_should_read_dsa_keys()","test_read_key_blob_should_read_rsa_keys()","test_read_key_should_read_dsa_key_type_and_keyblob()","test_read_key_should_read_rsa_key_type_and_keyblob()","test_read_long_should_return_4_byte_integer()","test_read_long_should_return_nil_on_partial_read()","test_read_string_should_read_length_and_data_from_buffer()","test_read_string_should_return_nil_if_4_byte_length_cannot_be_read()","test_read_to_should_grok_fixnum_patterns()","test_read_to_should_grok_regex_patterns()","test_read_to_should_grok_string_patterns()","test_read_to_should_return_nil_if_pattern_does_not_exist_in_buffer()","test_read_with_argument_that_is_less_than_length_should_read_that_many_bytes()","test_read_with_argument_that_is_more_than_length_should_read_no_more_than_length()","test_read_without_argument_should_read_to_end()","test_ready_readers_should_be_filled()","test_ready_readers_that_are_registered_with_a_block_should_call_block_instead_of_fill()","test_ready_readers_that_cant_be_filled_should_be_removed()","test_ready_writers_should_call_send_pending()","test_rekey_as_needed_when_kex_is_pending_should_do_nothing()","test_rekey_as_needed_when_no_kex_is_pending_and_no_rekey_is_needed_should_do_nothing()","test_rekey_as_needed_when_no_kex_is_pending_and_rekey_is_needed_should_initiate_rekey_and_block()","test_rekey_when_kex_is_pending_should_do_nothing()","test_rekey_when_no_kex_is_pending_should_initiate_rekey_and_block_until_it_completes()","test_remainder_as_buffer_should_return_a_new_buffer_filled_with_the_text_after_the_current_position()","test_request_failure_packets_should_invoke_next_pending_request_with_false()","test_request_pty_with_invalid_option_should_raise_error()","test_request_pty_with_options_should_honor_options()","test_request_pty_without_options_should_use_defaults()","test_request_success_packets_should_invoke_next_pending_request_with_true()","test_reset_bang_should_reset_position_to_0()","test_reset_should_reset_counters_and_fix_defaults_for_maximums()","test_rijndael_cbc_for_decryption()","test_rijndael_cbc_for_encryption()","test_send_channel_request_with_callback_should_want_reply()","test_send_channel_request_without_callback_should_not_want_reply()","test_send_data_should_append_to_channels_output_buffer()","test_send_data_should_raise_exception_if_eof_declared()","test_send_global_request_with_callback_should_expect_reply()","test_send_global_request_with_extras_should_append_extras_to_packet()","test_send_global_request_without_callback_should_not_expect_reply()","test_send_message_should_delegate_to_socket()","test_send_message_should_delegate_to_transport()","test_send_message_should_enqueue_message_at_transport_layer()","test_send_packet_should_enqueue_and_send_data_immediately()","test_send_pending_should_not_fail_when_no_writes_are_pending()","test_send_pending_with_pending_writes_should_write_to_underlying_io()","test_server_disconnect_should_raise_exception()","test_service_request_should_return_buffer()","test_session_id_should_query_session_id_from_key_exchange()","test_set_should_set_variables_and_reset_counters()","test_set_with_max_blocks_should_respect_max_blocks_setting()","test_set_with_max_packets_should_respect_max_packets_setting()","test_set_with_rekey_limit_should_include_rekey_limit_in_computation_of_max_blocks()","test_sign_should_fail_if_response_is_ssh2_agent_failure()","test_sign_should_fail_if_response_is_ssh_agent_failure()","test_sign_should_fail_if_response_is_ssh_com_agent2_failure()","test_sign_should_fail_if_response_is_not_ssh2_agent_sign_response()","test_sign_should_return_signed_data_from_agent()","test_sign_with_agent_originated_key_should_request_signature_from_agent()","test_sign_with_file_originated_key_should_load_private_key_and_sign_with_it()","test_stop_listening_to_should_remove_argument_from_listeners()","test_subsystem_should_be_syntactic_sugar_for_a_channel_request()","test_that_p_and_g_are_provided_by_the_server()","test_trailing_whitespace_should_be_preserved()","test_translate_should_correctly_translate_from_openssh_to_net_ssh_names()","test_unacceptible_server_version_should_raise_exception()","test_unknown_paranoid_value_raises_exception_if_value_does_not_respond_to_verify()","test_update_should_return_argument()","test_use_agent_should_be_set_to_false_if_agent_could_not_be_found()","test_userauth_request_should_build_well_formed_userauth_packet()","test_userauth_request_should_translate_extra_booleans_onto_end()","test_userauth_request_should_translate_extra_strings_onto_end()","test_wait_for_pending_sends_should_write_multiple_times_if_first_write_was_partial()","test_wait_for_pending_sends_should_write_only_once_if_all_can_be_written_at_once()","test_wait_should_block_while_channel_is_active?()","test_wait_should_enqueue_packets()","test_wait_should_not_consume_queue_on_reads()","test_wait_with_block_should_return_immediately_if_block_returns_truth()","test_wait_without_block_should_return_after_first_read()","test_write_bignum_should_write_arguments_as_ssh_formatted_bignum_values_to_end_of_buffer()","test_write_bool_should_write_arguments_as_1_byte_boolean_values_to_end_of_buffer()","test_write_byte_should_write_arguments_as_1_byte_integers_to_end_of_buffer()","test_write_dss_key_should_write_argument_to_end_of_buffer()","test_write_int64_should_write_arguments_as_8_byte_integers_to_end_of_buffer()","test_write_long_should_write_arguments_as_4_byte_integers_to_end_of_buffer()","test_write_rsa_key_should_write_argument_to_end_of_buffer()","test_write_should_write_arguments_directly_to_end_buffer()","test_writers_with_pending_writes_should_be_considered_for_select()","test_writers_without_pending_writes_should_not_be_considered_for_select()","to_blob()","to_blob()","to_i()","to_s()","to_s()","to_s()","to_s()","to_ssh()","translate()","transport()","traverse()","types()","update()","update_cipher()","update_shebang_line()","use_agent=()","use_agent?()","userauth_request()","valid?()","valid_task?()","valid_task_re()","value()","value?()","value?()","value_config?()","value_config?()","verbose?()","verbose?()","verbose?()","verbose_off()","verifier()","verify()","verify()","verify()","verify()","wait()","wait()","wait_for_pending_sends()","write()","write()","write_bignum()","write_bool()","write_byte()","write_int64()","write_key()","write_long()","write_string()","changelog.rdoc","manifest","readme.rdoc","rakefile","thanks.rdoc","ssh.rb","agent.rb","constants.rb","key_manager.rb","abstract.rb","hostbased.rb","keyboard_interactive.rb","password.rb","publickey.rb","pageant.rb","session.rb","buffer.rb","buffered_io.rb","config.rb","channel.rb","constants.rb","session.rb","term.rb","errors.rb","key_factory.rb","known_hosts.rb","loggable.rb","packet.rb","prompt.rb","errors.rb","http.rb","socks4.rb","socks5.rb","ruby_compat.rb","forward.rb","test.rb","channel.rb","extensions.rb","kex.rb","local_packet.rb","packet.rb","remote_packet.rb","script.rb","socket.rb","algorithms.rb","cipher_factory.rb","constants.rb","hmac.rb","abstract.rb","md5.rb","md5_96.rb","none.rb","sha1.rb","sha1_96.rb","identity_cipher.rb","kex.rb","diffie_hellman_group1_sha1.rb","diffie_hellman_group_exchange_sha1.rb","openssl.rb","packet_stream.rb","server_version.rb","session.rb","state.rb","lenient.rb","null.rb","strict.rb","version.rb","setup.rb","common.rb","test_abstract.rb","test_hostbased.rb","test_keyboard_interactive.rb","test_password.rb","test_publickey.rb","test_agent.rb","test_key_manager.rb","test_session.rb","common.rb","eqsign","exact_match","wild_cards","test_channel.rb","test_session.rb","test_all.rb","test_buffer.rb","test_buffered_io.rb","test_config.rb","test_key_factory.rb","test_md5.rb","test_md5_96.rb","test_none.rb","test_sha1.rb","test_sha1_96.rb","test_diffie_hellman_group1_sha1.rb","test_diffie_hellman_group_exchange_sha1.rb","test_algorithms.rb","test_cipher_factory.rb","test_hmac.rb","test_identity_cipher.rb","test_packet_stream.rb","test_server_version.rb","test_session.rb","test_state.rb"],"longSearchIndex":["test_session.rb","authentication","methods","methods","methods","methods","methods","methods","authentication","testagent","authentication","authentication","setup.rb","configtable","configtable","configtable","configtable","configtable","configtable","configtable","configtable","test_session.rb","connection","testchannel","connection","testsession","setup.rb","setup.rb","errno","setup.rb","setup.rb","setup.rb","setup.rb","installer","common.rb","mocktransport","version.rb","net","ssh","authentication","agent","authentication","authentication","authentication","authentication","authentication","authentication","methods","methods","methods","methods","methods","authentication","pageant","pageant","authentication","ssh","ssh","ssh","ssh","ssh","ssh","ssh","connection","connection","connection","session","connection","ssh","ssh","ssh","ssh","ssh","ssh","ssh","ssh","promptmethods","promptmethods","promptmethods","ssh","proxy","proxy","proxy","proxy","proxy","proxy","ssh","service","ssh","test","test","extensions","extensions","extensions","io","extensions","test","test","test","test","test","test","ssh","transport","transport","transport","transport","hmac","hmac","hmac","hmac","hmac","hmac","transport","transport","kex","kex","transport","transport","transport","transport","ssh","verifiers","verifiers","verifiers","ssh","setup.rb","openssl.rb","openssl","openssl","pkey","pkey","pkey","pkey","setup.rb","ruby_compat.rb","test_buffer.rb","test_buffered_io.rb","test_config.rb","test_key_factory.rb","setup.rb","setup.rb","test_state.rb","transport","hmac","hmac","hmac","hmac","hmac","transport","kex","kex","transport","transport","transport","transport","transport","transport","transport","transport","version","buffer","object","configtable","channel","session","hostkeymismatch","packet","algorithms","version","configtable","channel","session","algorithms","channel","forward","forward","configtable","keymanager","knownhosts","knownhosts","metaconfigenvironment","metaconfigenvironment","keymanager","metaconfigenvironment","keymanager","forward","algorithms","algorithms","buffer","test","hostbased","keyboardinteractive","password","publickey","session","buffer","bufferedio","packetstream","file","identitycipher","metaconfigenvironment","session","forward","forward","installer","installer","installer","installer","installer","installer","packetstream","state","keymanager","buffer","packetstream","agent","socket","channel","session","session","socket","session","session","channel","fileoperations","state","state","state","hookscriptapi","toplevelinstaller","metaconfigenvironment","installer","installer","installer","installer","installer","installer","metaconfigenvironment","boolitem","execitem","packageselectionitem","pathitem","programitem","selectitem","ssh","mocktransport","session","mocktransport","session","agent","agent","test","buffer","hookscriptapi","hookscriptapi","loggable","metaconfigenvironment","state","state","identitycipher","config","fileoperations","abstract","none","abstract","abstract","file","fileoperations","installer","installer","installer","installer","installer","installer","installer","configtable","channel","channel","channel","channel","channel","channel","configtable","keymanager","toplevelinstallermulti","buffer","identitycipher","bufferedio","mocktransport","session","mocksocket","packetstream","channel","channel","buffer","channel","loggable","execitem","kex","diffiehellmangroup1sha1","channel","session","session","installer","toplevelinstaller","toplevelinstallermulti","installer","toplevelinstaller","toplevelinstallermulti","installer","toplevelinstaller","toplevelinstallermulti","installer","toplevelinstaller","toplevelinstallermulti","installer","toplevelinstaller","toplevelinstallermulti","toplevelinstaller","installer","installer","toplevelinstaller","toplevelinstallermulti","installer","mocksocket","mockconnection","mocktransport","mocktransport","session","installer","fileoperations","packetstream","toplevelinstallermulti","loggable","fileoperations","bufferedio","identitycipher","state","hostkeymismatch","pkey","keymanager","configtable","config","fileoperations","session","buffer","keyfactory","cipherfactory","hmac","hookscriptapi","cipherfactory","string","socket","script","script","script","script","script","channel","channel","channel","channel","installer","installer","installer","boolitem","item","mocktransport","session","installer","session","hostkeymismatch","session","knownhosts","agent","packetstream","packetstream","testcipherfactory","state","loggable","toplevelinstaller","toplevelinstallermulti","packetstream","algorithms","channel","installer","toplevelinstaller","fileoperations","installer","installer","installer","installer","installer","installer","installer","packet","toplevelinstaller","toplevelinstaller","hostkeymismatch","identitycipher","identitycipher","hostkeymismatch","abstract","configtable","hmac","abstract","abstract","knownhosts","buffer","installer","session","shebang","config","keyfactory","keyfactory","configtable","keyfactory","keyfactory","toplevelinstaller","configtable","configtable","configtable","forward","localpacket","packet","channel","configtable","mockconnection","session","mockconnection","session","loggable","abstract","abstract","fileoperations","installer","nilchannel","fileoperations","fileoperations","toplevelinstaller","identitycipher","configtable","state","agent","mocksocket","configtable","execitem","item","metaconfigenvironment","packageselectionitem","selectitem","mockconnection","installer","shebang","mocktransport","blockverifier","agent","keymanager","abstract","socket","session","buffer","channelopenfailed","channel","session","nilchannel","knownhosts","packet","http","socks4","socks5","forward","channel","kex","localpacket","packet","script","socket","algorithms","abstract","diffiehellmangroup1sha1","serverversion","session","state","version","toplevelinstaller","toplevelinstallermulti","installer","script","mocktransport","session","session","packetstream","configtable","installer","toplevelinstallermulti","installer","installer","toplevelinstaller","channel","channel","channel","channel","session","session","channel","channel","channel","socket","http","socks4","socks5","socket","installer","session","script","metaconfigenvironment","toplevelinstallermulti","shebang","configtable","toplevelinstaller","toplevelinstaller","toplevelinstaller","toplevelinstaller","toplevelinstaller","toplevelinstaller","toplevelinstaller","toplevelinstaller","toplevelinstaller","metaconfigenvironment","session","packetstream","algorithms","bufferedio","mocktransport","session","packetstream","hostkeymismatch","session","session","toplevelinstaller","toplevelinstallermulti","channel","session","localpacket","remotepacket","script","clear","highline","termios","session","mocksocket","file","socket","buffer","buffer","bufferedio","buffer","buffer","buffer","buffer","buffer","buffer","buffer","buffer","buffer","buffer","socket","packet","algorithms","session","session","installer","toplevelinstaller","buffer","hostkeymismatch","forward","packet","remotepacket","channel","forward","configtable","metaconfigenvironment","fileoperations","fileoperations","fileoperations","channel","identitycipher","buffer","state","execitem","item","mocksocket","mocktransport","fileoperations","fileoperations","fileoperations","installer","installer","toplevelinstallermulti","toplevelinstaller","toplevelinstallermulti","configtable","configtable","knownhosts","knownhosts","bufferedio","classmethods","mocksocket","socket","channel","channel","channel","session","mockconnection","mocktransport","abstract","session","session","packetstream","bufferedio","socket","script","script","script","script","script","channel","channel","channel","channel","channel","session","abstract","item","state","hookscriptapi","metaconfigenvironment","testagent","testdiffiehellmangroup1sha1","teststate","installer","installer","installer","installer","installer","installer","object","session","session","agent","keymanager","test","installer","toplevelinstaller","hookscriptapi","hookscriptapi","hookscriptapi","hookscriptapi","hookscriptapi","hookscriptapi","hookscriptapi","dsa","rsa","dsa","rsa","dsa","rsa","ssh","session","test","channel","cipherfactory","installer","testagent","testchannel","teststate","mockconnection","testserverversion","testserverversion","testcipherfactory","testcipherfactory","testchannel","testchannel","testkeymanager","testcipherfactory","testcipherfactory","testcipherfactory","testcipherfactory","testcipherfactory","testcipherfactory","testalgorithms","testalgorithms","testalgorithms","testbuffer","testkeymanager","testkeyboardinteractive","testkeyboardinteractive","testkeyboardinteractive","testkeyboardinteractive","testkeyboardinteractive","testsession","testsession","testhostbased","testpublickey","testpassword","testpublickey","testhostbased","testpublickey","testhostbased","testpublickey","testhostbased","testpublickey","testpassword","testpassword","packetstream","testpacketstream","testpacketstream","testpacketstream","testbuffer","testidentitycipher","testcipherfactory","testcipherfactory","testcipherfactory","testcipherfactory","testsession","testsession","testsession","testsession","testsession","testsession","testsession","testsession","testsession","testsession","testchannel","testsession","testsession","testsession","testsession","testpacketstream","testbuffer","testpacketstream","testpacketstream","testpacketstream","testpacketstream","testchannel","testsession","testagent","testchannel","testchannel","teststate","teststate","teststate","teststate","teststate","teststate","testsession","testsession","testagent","testagent","testsession","testalgorithms","testabstract","teststate","testbuffer","testalgorithms","testabstract","testsession","testchannel","testsession","testalgorithms","testalgorithms","testalgorithms","testalgorithms","testalgorithms","testalgorithms","testalgorithms","testalgorithms","testalgorithms","testalgorithms","testbuffer","testalgorithms","testalgorithms","testalgorithms","testalgorithms","testalgorithms","testbuffer","testbuffer","teststate","teststate","teststate","teststate","testidentitycipher","testchannel","testchannel","testchannel","testchannel","testchannel","testchannel","testchannel","testchannel","testchannel","testchannel","testchannel","testchannel","testchannel","testchannel","testchannel","testchannel","testkeymanager","testidentitycipher","testsession","packetstream","testchannel","testchannel","testchannel","testchannel","testchannel","testpacketstream","testbufferedio","testchannel","testchannel","testchannel","testdiffiehellmangroup1sha1","testdiffiehellmangroup1sha1","testdiffiehellmangroup1sha1","testdiffiehellmangroup1sha1","testdiffiehellmangroup1sha1","testdiffiehellmangroup1sha1","testdiffiehellmangroupexchangesha1","testdiffiehellmangroupexchangesha1","testdiffiehellmangroupexchangesha1","testalgorithms","testalgorithms","testsession","testsession","testchannel","testsession","testsession","testsession","testsession","testmd5","testmd5_96","testnone","testsha1","testsha1_96","testmd5","testnone","testsha1","testmd5","testnone","testsha1","testmd5","testmd5_96","testnone","testsha1","testsha1_96","testbufferedio","testidentitycipher","testconfig","testsession","testbuffer","testbuffer","testbuffer","testhmac","testsession","testsession","testsession","testsession","testsession","testsession","testsession","testserverversion","testsession","testsession","testsession","testsession","testsession","testcipherfactory","testcipherfactory","testagent","testagent","testagent","testagent","testagent","testkeymanager","testpacketstream","testpacketstream","testpacketstream","testpacketstream","teststate","testalgorithms","testalgorithms","testalgorithms","testalgorithms","testalgorithms","testkeymanager","testhmac","testmd5","testcipherfactory","testcipherfactory","testcipherfactory","testcipherfactory","testcipherfactory","testcipherfactory","testcipherfactory","testcipherfactory","testcipherfactory","testsession","testsession","testkeyfactory","testkeyfactory","testkeyfactory","testkeyfactory","testkeyfactory","testconfig","testkeyfactory","testconfig","testconfig","testkeyfactory","testkeyfactory","testconfig","testconfig","testsession","testsession","testidentitycipher","teststate","teststate","testagent","testagent","testagent","testsession","testsession","testsession","testsession","testsession","testpacketstream","testpacketstream","testpacketstream","testpacketstream","testpacketstream","testpacketstream","testpacketstream","testpacketstream","testcipherfactory","testcipherfactory","testchannel","testchannel","testchannel","testchannel","testsession","testchannel","testsession","testsession","testsession","testsession","testsession","testsession","testsession","testpacketstream","testsession","testsession","testsession","testsession","testsession","testsession","testsession","testsession","testsession","testsession","testsession","testsession","testsession","testsession","packetstream","testsession","testsession","testsession","testsession","testchannel","testchannel","testsession","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testsession","testsession","testsession","testsession","testsession","testsession","testsession","testsession","testsession","testbuffer","testsession","testchannel","testchannel","testchannel","testsession","testbuffer","teststate","testcipherfactory","testcipherfactory","testchannel","testchannel","testchannel","testchannel","testsession","testsession","testsession","testsession","testabstract","testsession","testpacketstream","testbufferedio","testbufferedio","testserverversion","testsession","testabstract","teststate","teststate","teststate","teststate","testagent","testagent","testagent","testagent","testagent","testkeymanager","testkeymanager","testsession","testchannel","testdiffiehellmangroupexchangesha1","testserverversion","testconfig","testserverversion","testsession","testidentitycipher","testkeymanager","testabstract","testabstract","testabstract","testbufferedio","testbufferedio","testchannel","testsession","testsession","testsession","testsession","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testbuffer","testsession","testsession","dsa","rsa","version","shebang","buffer","remotepacket","version","bn","config","test","installer","packet","identitycipher","state","installer","keymanager","keymanager","abstract","dh","toplevelinstaller","toplevelinstaller","item","execitem","item","configtable","metaconfigenvironment","configtable","installer","toplevelinstallermulti","installer","mocktransport","blockverifier","lenient","null","strict","channel","session","bufferedio","buffer","socket","buffer","buffer","buffer","buffer","buffer","buffer","buffer","files\/changelog_rdoc.html","files\/manifest.html","files\/readme_rdoc.html","files\/rakefile.html","files\/thanks_rdoc.html","files\/lib\/net\/ssh_rb.html","files\/lib\/net\/ssh\/authentication\/agent_rb.html","files\/lib\/net\/ssh\/authentication\/constants_rb.html","files\/lib\/net\/ssh\/authentication\/key_manager_rb.html","files\/lib\/net\/ssh\/authentication\/methods\/abstract_rb.html","files\/lib\/net\/ssh\/authentication\/methods\/hostbased_rb.html","files\/lib\/net\/ssh\/authentication\/methods\/keyboard_interactive_rb.html","files\/lib\/net\/ssh\/authentication\/methods\/password_rb.html","files\/lib\/net\/ssh\/authentication\/methods\/publickey_rb.html","files\/lib\/net\/ssh\/authentication\/pageant_rb.html","files\/lib\/net\/ssh\/authentication\/session_rb.html","files\/lib\/net\/ssh\/buffer_rb.html","files\/lib\/net\/ssh\/buffered_io_rb.html","files\/lib\/net\/ssh\/config_rb.html","files\/lib\/net\/ssh\/connection\/channel_rb.html","files\/lib\/net\/ssh\/connection\/constants_rb.html","files\/lib\/net\/ssh\/connection\/session_rb.html","files\/lib\/net\/ssh\/connection\/term_rb.html","files\/lib\/net\/ssh\/errors_rb.html","files\/lib\/net\/ssh\/key_factory_rb.html","files\/lib\/net\/ssh\/known_hosts_rb.html","files\/lib\/net\/ssh\/loggable_rb.html","files\/lib\/net\/ssh\/packet_rb.html","files\/lib\/net\/ssh\/prompt_rb.html","files\/lib\/net\/ssh\/proxy\/errors_rb.html","files\/lib\/net\/ssh\/proxy\/http_rb.html","files\/lib\/net\/ssh\/proxy\/socks4_rb.html","files\/lib\/net\/ssh\/proxy\/socks5_rb.html","files\/lib\/net\/ssh\/ruby_compat_rb.html","files\/lib\/net\/ssh\/service\/forward_rb.html","files\/lib\/net\/ssh\/test_rb.html","files\/lib\/net\/ssh\/test\/channel_rb.html","files\/lib\/net\/ssh\/test\/extensions_rb.html","files\/lib\/net\/ssh\/test\/kex_rb.html","files\/lib\/net\/ssh\/test\/local_packet_rb.html","files\/lib\/net\/ssh\/test\/packet_rb.html","files\/lib\/net\/ssh\/test\/remote_packet_rb.html","files\/lib\/net\/ssh\/test\/script_rb.html","files\/lib\/net\/ssh\/test\/socket_rb.html","files\/lib\/net\/ssh\/transport\/algorithms_rb.html","files\/lib\/net\/ssh\/transport\/cipher_factory_rb.html","files\/lib\/net\/ssh\/transport\/constants_rb.html","files\/lib\/net\/ssh\/transport\/hmac_rb.html","files\/lib\/net\/ssh\/transport\/hmac\/abstract_rb.html","files\/lib\/net\/ssh\/transport\/hmac\/md5_rb.html","files\/lib\/net\/ssh\/transport\/hmac\/md5_96_rb.html","files\/lib\/net\/ssh\/transport\/hmac\/none_rb.html","files\/lib\/net\/ssh\/transport\/hmac\/sha1_rb.html","files\/lib\/net\/ssh\/transport\/hmac\/sha1_96_rb.html","files\/lib\/net\/ssh\/transport\/identity_cipher_rb.html","files\/lib\/net\/ssh\/transport\/kex_rb.html","files\/lib\/net\/ssh\/transport\/kex\/diffie_hellman_group1_sha1_rb.html","files\/lib\/net\/ssh\/transport\/kex\/diffie_hellman_group_exchange_sha1_rb.html","files\/lib\/net\/ssh\/transport\/openssl_rb.html","files\/lib\/net\/ssh\/transport\/packet_stream_rb.html","files\/lib\/net\/ssh\/transport\/server_version_rb.html","files\/lib\/net\/ssh\/transport\/session_rb.html","files\/lib\/net\/ssh\/transport\/state_rb.html","files\/lib\/net\/ssh\/verifiers\/lenient_rb.html","files\/lib\/net\/ssh\/verifiers\/null_rb.html","files\/lib\/net\/ssh\/verifiers\/strict_rb.html","files\/lib\/net\/ssh\/version_rb.html","files\/setup_rb.html","files\/test\/authentication\/methods\/common_rb.html","files\/test\/authentication\/methods\/test_abstract_rb.html","files\/test\/authentication\/methods\/test_hostbased_rb.html","files\/test\/authentication\/methods\/test_keyboard_interactive_rb.html","files\/test\/authentication\/methods\/test_password_rb.html","files\/test\/authentication\/methods\/test_publickey_rb.html","files\/test\/authentication\/test_agent_rb.html","files\/test\/authentication\/test_key_manager_rb.html","files\/test\/authentication\/test_session_rb.html","files\/test\/common_rb.html","files\/test\/configs\/eqsign.html","files\/test\/configs\/exact_match.html","files\/test\/configs\/wild_cards.html","files\/test\/connection\/test_channel_rb.html","files\/test\/connection\/test_session_rb.html","files\/test\/test_all_rb.html","files\/test\/test_buffer_rb.html","files\/test\/test_buffered_io_rb.html","files\/test\/test_config_rb.html","files\/test\/test_key_factory_rb.html","files\/test\/transport\/hmac\/test_md5_rb.html","files\/test\/transport\/hmac\/test_md5_96_rb.html","files\/test\/transport\/hmac\/test_none_rb.html","files\/test\/transport\/hmac\/test_sha1_rb.html","files\/test\/transport\/hmac\/test_sha1_96_rb.html","files\/test\/transport\/kex\/test_diffie_hellman_group1_sha1_rb.html","files\/test\/transport\/kex\/test_diffie_hellman_group_exchange_sha1_rb.html","files\/test\/transport\/test_algorithms_rb.html","files\/test\/transport\/test_cipher_factory_rb.html","files\/test\/transport\/test_hmac_rb.html","files\/test\/transport\/test_identity_cipher_rb.html","files\/test\/transport\/test_packet_stream_rb.html","files\/test\/transport\/test_server_version_rb.html","files\/test\/transport\/test_session_rb.html","files\/test\/transport\/test_state_rb.html"],"info":[["Authentication","test\/authentication\/test_session.rb","classes\/Authentication.html","","",1],["Methods","Authentication","classes\/Authentication\/Methods.html","","",1],["Common","Authentication::Methods","classes\/Authentication\/Methods\/Common.html","","",1],["TestAbstract","Authentication::Methods","classes\/Authentication\/Methods\/TestAbstract.html"," < Test::Unit::TestCase","",1],["TestHostbased","Authentication::Methods","classes\/Authentication\/Methods\/TestHostbased.html"," < Test::Unit::TestCase","",1],["TestKeyboardInteractive","Authentication::Methods","classes\/Authentication\/Methods\/TestKeyboardInteractive.html"," < Test::Unit::TestCase","",1],["TestPassword","Authentication::Methods","classes\/Authentication\/Methods\/TestPassword.html"," < Test::Unit::TestCase","",1],["TestPublickey","Authentication::Methods","classes\/Authentication\/Methods\/TestPublickey.html"," < Test::Unit::TestCase","",1],["TestAgent","Authentication","classes\/Authentication\/TestAgent.html"," < Test::Unit::TestCase","",1],["MockSocket","Authentication::TestAgent","classes\/Authentication\/TestAgent\/MockSocket.html"," < Object","",1],["TestKeyManager","Authentication","classes\/Authentication\/TestKeyManager.html"," < Test::Unit::TestCase","",1],["TestSession","Authentication","classes\/Authentication\/TestSession.html"," < Test::Unit::TestCase","",1],["ConfigTable","setup.rb","classes\/ConfigTable.html"," < Object","",1],["BoolItem","ConfigTable","classes\/ConfigTable\/BoolItem.html"," < Item","",1],["ExecItem","ConfigTable","classes\/ConfigTable\/ExecItem.html"," < Item","",1],["Item","ConfigTable","classes\/ConfigTable\/Item.html"," < Object","",1],["MetaConfigEnvironment","ConfigTable","classes\/ConfigTable\/MetaConfigEnvironment.html"," < Object","",1],["PackageSelectionItem","ConfigTable","classes\/ConfigTable\/PackageSelectionItem.html"," < Item","",1],["PathItem","ConfigTable","classes\/ConfigTable\/PathItem.html"," < Item","",1],["ProgramItem","ConfigTable","classes\/ConfigTable\/ProgramItem.html"," < Item","",1],["SelectItem","ConfigTable","classes\/ConfigTable\/SelectItem.html"," < Item","",1],["Connection","test\/connection\/test_session.rb","classes\/Connection.html","","",1],["TestChannel","Connection","classes\/Connection\/TestChannel.html"," < Test::Unit::TestCase","",1],["MockConnection","Connection::TestChannel","classes\/Connection\/TestChannel\/MockConnection.html"," < Object","",1],["TestSession","Connection","classes\/Connection\/TestSession.html"," < Test::Unit::TestCase","",1],["MockSocket","Connection::TestSession","classes\/Connection\/TestSession\/MockSocket.html","","",1],["Enumerable","setup.rb","classes\/Enumerable.html","","",1],["Errno","setup.rb","classes\/Errno.html","","",1],["ENOTEMPTY","Errno","classes\/Errno\/ENOTEMPTY.html"," < Object","",1],["File","setup.rb","classes\/File.html"," < IO","",1],["FileOperations","setup.rb","classes\/FileOperations.html","","This module requires: #verbose?, #no_harm? ",1],["HookScriptAPI","setup.rb","classes\/HookScriptAPI.html","","This module requires: #srcdir_root, #objdir_root, #relpath ",1],["Installer","setup.rb","classes\/Installer.html"," < Object","",1],["Shebang","Installer","classes\/Installer\/Shebang.html"," < Object","",1],["MockTransport","test\/common.rb","classes\/MockTransport.html"," < Net::SSH::Transport::Session","",1],["BlockVerifier","MockTransport","classes\/MockTransport\/BlockVerifier.html"," < Object","",1],["Net","lib\/net\/ssh\/version.rb","classes\/Net.html","","",1],["SSH","Net","classes\/Net\/SSH.html","","Net::SSH is a library for interacting, programmatically, with remote processes via the SSH2 protocol.",1],["Authentication","Net::SSH","classes\/Net\/SSH\/Authentication.html","","",1],["Agent","Net::SSH::Authentication","classes\/Net\/SSH\/Authentication\/Agent.html"," < Object","This class implements a simple client for the ssh-agent protocol. It does not implement any specific",1],["Comment","Net::SSH::Authentication::Agent","classes\/Net\/SSH\/Authentication\/Agent\/Comment.html","","A simple module for extending keys, to allow comments to be specified for them. ",1],["AgentError","Net::SSH::Authentication","classes\/Net\/SSH\/Authentication\/AgentError.html"," < Net::SSH::Exception","A trivial exception class for representing agent-specific errors. ",1],["AgentNotAvailable","Net::SSH::Authentication","classes\/Net\/SSH\/Authentication\/AgentNotAvailable.html"," < AgentError","An exception for indicating that the SSH agent is not available. ",1],["Constants","Net::SSH::Authentication","classes\/Net\/SSH\/Authentication\/Constants.html","","Describes the constants used by the Net::SSH::Authentication components of the Net::SSH library. Individual",1],["KeyManager","Net::SSH::Authentication","classes\/Net\/SSH\/Authentication\/KeyManager.html"," < Object","This class encapsulates all operations done by clients on a user's private keys. In practice, the client",1],["KeyManagerError","Net::SSH::Authentication","classes\/Net\/SSH\/Authentication\/KeyManagerError.html"," < Net::SSH::Exception","A trivial exception class used to report errors in the key manager. ",1],["Methods","Net::SSH::Authentication","classes\/Net\/SSH\/Authentication\/Methods.html","","",1],["Abstract","Net::SSH::Authentication::Methods","classes\/Net\/SSH\/Authentication\/Methods\/Abstract.html"," < Object","The base class of all user authentication methods. It provides a few bits of common functionality. ",1],["Hostbased","Net::SSH::Authentication::Methods","classes\/Net\/SSH\/Authentication\/Methods\/Hostbased.html"," < Abstract","Implements the host-based SSH authentication method. ",1],["KeyboardInteractive","Net::SSH::Authentication::Methods","classes\/Net\/SSH\/Authentication\/Methods\/KeyboardInteractive.html"," < Abstract","Implements the \"keyboard-interactive\" SSH authentication method. ",1],["Password","Net::SSH::Authentication::Methods","classes\/Net\/SSH\/Authentication\/Methods\/Password.html"," < Abstract","Implements the \"password\" SSH authentication method. ",1],["Publickey","Net::SSH::Authentication::Methods","classes\/Net\/SSH\/Authentication\/Methods\/Publickey.html"," < Abstract","Implements the \"publickey\" SSH authentication method. ",1],["Pageant","Net::SSH::Authentication","classes\/Net\/SSH\/Authentication\/Pageant.html","","This module encapsulates the implementation of a socket factory that uses the PuTTY \"pageant\" utility",1],["Socket","Net::SSH::Authentication::Pageant","classes\/Net\/SSH\/Authentication\/Pageant\/Socket.html"," < Object","This is the pseudo-socket implementation that mimics the interface of a socket, translating each request",1],["Win","Net::SSH::Authentication::Pageant","classes\/Net\/SSH\/Authentication\/Pageant\/Win.html","","The definition of the Windows methods and data structures used in communicating with the pageant process.",1],["Session","Net::SSH::Authentication","classes\/Net\/SSH\/Authentication\/Session.html"," < Object","Represents an authentication session. It manages the authentication of a user over an established connection",1],["AuthenticationFailed","Net::SSH","classes\/Net\/SSH\/AuthenticationFailed.html"," < Exception","This exception is raised when authentication fails (whether it be public key authentication, password",1],["Buffer","Net::SSH","classes\/Net\/SSH\/Buffer.html"," < Object","Net::SSH::Buffer is a flexible class for building and parsing binary data packets. It provides a stream-like",1],["BufferedIo","Net::SSH","classes\/Net\/SSH\/BufferedIo.html","","This module is used to extend sockets and other IO objects, to allow them to be buffered for both read",1],["ChannelOpenFailed","Net::SSH","classes\/Net\/SSH\/ChannelOpenFailed.html"," < Exception","This is exception is primarily used internally, but if you have a channel open handler (see Net::SSH::Connection::Session#on_open_channel)",1],["ChannelRequestFailed","Net::SSH","classes\/Net\/SSH\/ChannelRequestFailed.html"," < Exception","This exception is primarily used internally, but if you have a channel request handler (see Net::SSH::Connection::Channel#on_request)",1],["Config","Net::SSH","classes\/Net\/SSH\/Config.html"," < Object","The Net::SSH::Config class is used to parse OpenSSH configuration files, and translates that syntax into",1],["Connection","Net::SSH","classes\/Net\/SSH\/Connection.html","","",1],["Channel","Net::SSH::Connection","classes\/Net\/SSH\/Connection\/Channel.html"," < Object","The channel abstraction. Multiple \"channels\" can be multiplexed onto a single SSH channel, each operating",1],["Constants","Net::SSH::Connection","classes\/Net\/SSH\/Connection\/Constants.html","","Definitions of constants that are specific to the connection layer of the SSH protocol. ",1],["Session","Net::SSH::Connection","classes\/Net\/SSH\/Connection\/Session.html"," < Object","A session class representing the connection service running on top of the SSH transport layer. It manages",1],["NilChannel","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session\/NilChannel.html"," < Object","",1],["Term","Net::SSH::Connection","classes\/Net\/SSH\/Connection\/Term.html","","These constants are used when requesting a pseudo-terminal (via Net::SSH::Connection::Channel#request_pty).",1],["Disconnect","Net::SSH","classes\/Net\/SSH\/Disconnect.html"," < Exception","This exception is raised when the remote host has disconnected unexpectedly. ",1],["Exception","Net::SSH","classes\/Net\/SSH\/Exception.html"," < ::RuntimeError","A general exception class, to act as the ancestor of all other Net::SSH exception classes. ",1],["HostKeyMismatch","Net::SSH","classes\/Net\/SSH\/HostKeyMismatch.html"," < Exception","Raised when the cached key for a particular host does not match the key given by the host, which can",1],["KeyFactory","Net::SSH","classes\/Net\/SSH\/KeyFactory.html"," < Object","A factory class for returning new Key classes. It is used for obtaining OpenSSL key instances via their",1],["KnownHosts","Net::SSH","classes\/Net\/SSH\/KnownHosts.html"," < Object","Searches an OpenSSH-style known-host file for a given host, and returns all matching keys. This is used",1],["Loggable","Net::SSH","classes\/Net\/SSH\/Loggable.html","","A simple module to make logging easier to deal with. It assumes that the logger instance (if not nil)",1],["Packet","Net::SSH","classes\/Net\/SSH\/Packet.html"," < Buffer","A specialization of Buffer that knows the format of certain common packet types. It auto-parses those",1],["PromptMethods","Net::SSH","classes\/Net\/SSH\/PromptMethods.html","","A basic prompt module that can be mixed into other objects. If HighLine is installed, it will be used",1],["Clear","Net::SSH::PromptMethods","classes\/Net\/SSH\/PromptMethods\/Clear.html","","Defines the prompt method to use when neither Highline nor Termios are installed. ",1],["Highline","Net::SSH::PromptMethods","classes\/Net\/SSH\/PromptMethods\/Highline.html","","Defines the prompt method to use if the Highline library is installed. ",1],["Termios","Net::SSH::PromptMethods","classes\/Net\/SSH\/PromptMethods\/Termios.html","","Defines the prompt method to use if the Termios library is installed. ",1],["Proxy","Net::SSH","classes\/Net\/SSH\/Proxy.html","","",1],["ConnectError","Net::SSH::Proxy","classes\/Net\/SSH\/Proxy\/ConnectError.html"," < Error","Used for reporting proxy connection errors. ",1],["Error","Net::SSH::Proxy","classes\/Net\/SSH\/Proxy\/Error.html"," < Net::SSH::Exception","A general exception class for all Proxy errors. ",1],["HTTP","Net::SSH::Proxy","classes\/Net\/SSH\/Proxy\/HTTP.html"," < Object","An implementation of an HTTP proxy. To use it, instantiate it, then pass the instantiated object via",1],["SOCKS4","Net::SSH::Proxy","classes\/Net\/SSH\/Proxy\/SOCKS4.html"," < Object","An implementation of a SOCKS4 proxy. To use it, instantiate it, then pass the instantiated object via",1],["SOCKS5","Net::SSH::Proxy","classes\/Net\/SSH\/Proxy\/SOCKS5.html"," < Object","An implementation of a SOCKS5 proxy. To use it, instantiate it, then pass the instantiated object via",1],["UnauthorizedError","Net::SSH::Proxy","classes\/Net\/SSH\/Proxy\/UnauthorizedError.html"," < Error","Used when the server doesn't recognize the user's credentials. ",1],["Service","Net::SSH","classes\/Net\/SSH\/Service.html","","",1],["Forward","Net::SSH::Service","classes\/Net\/SSH\/Service\/Forward.html"," < Object","This class implements various port forwarding services for use by Net::SSH clients. The Forward class",1],["Test","Net::SSH","classes\/Net\/SSH\/Test.html","","This module may be used in unit tests, for when you want to test that your SSH state machines are really",1],["Channel","Net::SSH::Test","classes\/Net\/SSH\/Test\/Channel.html"," < Object","A mock channel, used for scripting actions in tests. It wraps a Net::SSH::Test::Script instance, and",1],["Extensions","Net::SSH::Test","classes\/Net\/SSH\/Test\/Extensions.html","","A collection of modules used to extend\/override the default behavior of Net::SSH internals for ease of",1],["BufferedIo","Net::SSH::Test::Extensions","classes\/Net\/SSH\/Test\/Extensions\/BufferedIo.html","","An extension to Net::SSH::BufferedIo (assumes that the underlying IO is actually a StringIO). Facilitates",1],["Channel","Net::SSH::Test::Extensions","classes\/Net\/SSH\/Test\/Extensions\/Channel.html","","An extension to Net::SSH::Connection::Channel. Facilitates unit testing. ",1],["IO","Net::SSH::Test::Extensions","classes\/Net\/SSH\/Test\/Extensions\/IO.html","","An extension to the built-in ::IO class. Simply redefines IO.select so that it can be scripted in Net::SSH",1],["ClassMethods","Net::SSH::Test::Extensions::IO","classes\/Net\/SSH\/Test\/Extensions\/IO\/ClassMethods.html","","",1],["PacketStream","Net::SSH::Test::Extensions","classes\/Net\/SSH\/Test\/Extensions\/PacketStream.html","","An extension to Net::SSH::Transport::PacketStream (assumes that the underlying IO is actually a StringIO).",1],["Kex","Net::SSH::Test","classes\/Net\/SSH\/Test\/Kex.html"," < Object","An implementation of a key-exchange strategy specifically for unit tests. (This strategy would never",1],["LocalPacket","Net::SSH::Test","classes\/Net\/SSH\/Test\/LocalPacket.html"," < Packet","This is a specialization of Net::SSH::Test::Packet for representing mock packets that are sent from the",1],["Packet","Net::SSH::Test","classes\/Net\/SSH\/Test\/Packet.html"," < Object","This is an abstract class, not to be instantiated directly, subclassed by Net::SSH::Test::LocalPacket",1],["RemotePacket","Net::SSH::Test","classes\/Net\/SSH\/Test\/RemotePacket.html"," < Packet","This is a specialization of Net::SSH::Test::Packet for representing mock packets that are received by",1],["Script","Net::SSH::Test","classes\/Net\/SSH\/Test\/Script.html"," < Object","Represents a sequence of scripted events that identify the behavior that a test expects. Methods named",1],["Socket","Net::SSH::Test","classes\/Net\/SSH\/Test\/Socket.html"," < StringIO","A mock socket implementation for use in testing. It implements the minimum necessary interface for interacting",1],["Transport","Net::SSH","classes\/Net\/SSH\/Transport.html","","",1],["Algorithms","Net::SSH::Transport","classes\/Net\/SSH\/Transport\/Algorithms.html"," < Object","Implements the higher-level logic behind an SSH key-exchange. It handles both the initial exchange, as",1],["CipherFactory","Net::SSH::Transport","classes\/Net\/SSH\/Transport\/CipherFactory.html"," < Object","Implements a factory of OpenSSL cipher algorithms. ",1],["Constants","Net::SSH::Transport","classes\/Net\/SSH\/Transport\/Constants.html","","",1],["HMAC","Net::SSH::Transport","classes\/Net\/SSH\/Transport\/HMAC.html","","Implements a simple factory interface for fetching hmac implementations, or for finding the key lengths",1],["Abstract","Net::SSH::Transport::HMAC","classes\/Net\/SSH\/Transport\/HMAC\/Abstract.html"," < Object","The base class of all OpenSSL-based HMAC algorithm wrappers. ",1],["MD5","Net::SSH::Transport::HMAC","classes\/Net\/SSH\/Transport\/HMAC\/MD5.html"," < Abstract","The MD5 HMAC algorithm. ",1],["MD5_96","Net::SSH::Transport::HMAC","classes\/Net\/SSH\/Transport\/HMAC\/MD5_96.html"," < MD5","The MD5-96 HMAC algorithm. This returns only the first 12 bytes of the digest. ",1],["None","Net::SSH::Transport::HMAC","classes\/Net\/SSH\/Transport\/HMAC\/None.html"," < Abstract","The \"none\" algorithm. This has a key and mac length of 0. ",1],["SHA1","Net::SSH::Transport::HMAC","classes\/Net\/SSH\/Transport\/HMAC\/SHA1.html"," < Abstract","The SHA1 HMAC algorithm. This has a mac and key length of 20, and uses the SHA1 digest algorithm. ",1],["SHA1_96","Net::SSH::Transport::HMAC","classes\/Net\/SSH\/Transport\/HMAC\/SHA1_96.html"," < SHA1","The SHA1-96 HMAC algorithm. This returns only the first 12 bytes of the digest. ",1],["IdentityCipher","Net::SSH::Transport","classes\/Net\/SSH\/Transport\/IdentityCipher.html"," < Object","A cipher that does nothing but pass the data through, unchanged. This keeps things in the code nice and",1],["Kex","Net::SSH::Transport","classes\/Net\/SSH\/Transport\/Kex.html","","",1],["DiffieHellmanGroup1SHA1","Net::SSH::Transport::Kex","classes\/Net\/SSH\/Transport\/Kex\/DiffieHellmanGroup1SHA1.html"," < Object","A key-exchange service implementing the \"diffie-hellman-group1-sha1\" key-exchange algorithm. ",1],["DiffieHellmanGroupExchangeSHA1","Net::SSH::Transport::Kex","classes\/Net\/SSH\/Transport\/Kex\/DiffieHellmanGroupExchangeSHA1.html"," < DiffieHellmanGroup1SHA1","A key-exchange service implementing the \"diffie-hellman-group-exchange-sha1\" key-exchange algorithm.",1],["PacketStream","Net::SSH::Transport","classes\/Net\/SSH\/Transport\/PacketStream.html","","A module that builds additional functionality onto the Net::SSH::BufferedIo module. It adds SSH encryption,",1],["ServerVersion","Net::SSH::Transport","classes\/Net\/SSH\/Transport\/ServerVersion.html"," < Object","Negotiates the SSH protocol version and trades information about server and client. This is never used",1],["Session","Net::SSH::Transport","classes\/Net\/SSH\/Transport\/Session.html"," < Object","The transport layer represents the lowest level of the SSH protocol, and implements basic message exchanging",1],["State","Net::SSH::Transport","classes\/Net\/SSH\/Transport\/State.html"," < Object","Encapsulates state information about one end of an SSH connection. Such state includes the packet sequence",1],["Verifiers","Net::SSH","classes\/Net\/SSH\/Verifiers.html","","",1],["Lenient","Net::SSH::Verifiers","classes\/Net\/SSH\/Verifiers\/Lenient.html"," < Strict","Basically the same as the Strict verifier, but does not try to actually verify a connection if the server",1],["Null","Net::SSH::Verifiers","classes\/Net\/SSH\/Verifiers\/Null.html"," < Object","The Null host key verifier simply allows every key it sees, without bothering to verify. This is simple,",1],["Strict","Net::SSH::Verifiers","classes\/Net\/SSH\/Verifiers\/Strict.html"," < Object","Does a strict host verification, looking the server up in the known host files to see if a key has already",1],["Version","Net::SSH","classes\/Net\/SSH\/Version.html"," < Object","A class for describing the current version of a library. The version consists of three parts: the +major+",1],["Object","setup.rb","classes\/Object.html"," < Object","",1],["OpenSSL","lib\/net\/ssh\/transport\/openssl.rb","classes\/OpenSSL.html","","",1],["BN","OpenSSL","classes\/OpenSSL\/BN.html"," < Object","This class is originally defined in the OpenSSL module. As needed, methods have been added to it by the",1],["PKey","OpenSSL","classes\/OpenSSL\/PKey.html","","",1],["DH","OpenSSL::PKey","classes\/OpenSSL\/PKey\/DH.html"," < Object","This class is originally defined in the OpenSSL module. As needed, methods have been added to it by the",1],["DSA","OpenSSL::PKey","classes\/OpenSSL\/PKey\/DSA.html"," < Object","This class is originally defined in the OpenSSL module. As needed, methods have been added to it by the",1],["PKey","OpenSSL::PKey","classes\/OpenSSL\/PKey\/PKey.html"," < Object","",1],["RSA","OpenSSL::PKey","classes\/OpenSSL\/PKey\/RSA.html"," < Object","This class is originally defined in the OpenSSL module. As needed, methods have been added to it by the",1],["SetupError","setup.rb","classes\/SetupError.html"," < StandardError","",1],["String","lib\/net\/ssh\/ruby_compat.rb","classes\/String.html"," < Object","",1],["TestBuffer","test\/test_buffer.rb","classes\/TestBuffer.html"," < Test::Unit::TestCase","",1],["TestBufferedIo","test\/test_buffered_io.rb","classes\/TestBufferedIo.html"," < Test::Unit::TestCase","",1],["TestConfig","test\/test_config.rb","classes\/TestConfig.html"," < Test::Unit::TestCase","",1],["TestKeyFactory","test\/test_key_factory.rb","classes\/TestKeyFactory.html"," < Test::Unit::TestCase","",1],["ToplevelInstaller","setup.rb","classes\/ToplevelInstaller.html"," < Object","",1],["ToplevelInstallerMulti","setup.rb","classes\/ToplevelInstallerMulti.html"," < ToplevelInstaller","",1],["Transport","test\/transport\/test_state.rb","classes\/Transport.html","","",1],["HMAC","Transport","classes\/Transport\/HMAC.html","","",1],["TestMD5","Transport::HMAC","classes\/Transport\/HMAC\/TestMD5.html"," < Test::Unit::TestCase","",1],["TestMD5_96","Transport::HMAC","classes\/Transport\/HMAC\/TestMD5_96.html"," < TestMD5","",1],["TestNone","Transport::HMAC","classes\/Transport\/HMAC\/TestNone.html"," < Test::Unit::TestCase","",1],["TestSHA1","Transport::HMAC","classes\/Transport\/HMAC\/TestSHA1.html"," < Test::Unit::TestCase","",1],["TestSHA1_96","Transport::HMAC","classes\/Transport\/HMAC\/TestSHA1_96.html"," < TestSHA1","",1],["Kex","Transport","classes\/Transport\/Kex.html","","",1],["TestDiffieHellmanGroup1SHA1","Transport::Kex","classes\/Transport\/Kex\/TestDiffieHellmanGroup1SHA1.html"," < Test::Unit::TestCase","",1],["TestDiffieHellmanGroupExchangeSHA1","Transport::Kex","classes\/Transport\/Kex\/TestDiffieHellmanGroupExchangeSHA1.html"," < TestDiffieHellmanGroup1SHA1","",1],["TestAlgorithms","Transport","classes\/Transport\/TestAlgorithms.html"," < Test::Unit::TestCase","",1],["TestCipherFactory","Transport","classes\/Transport\/TestCipherFactory.html"," < Test::Unit::TestCase","",1],["TestHMAC","Transport","classes\/Transport\/TestHMAC.html"," < Test::Unit::TestCase","",1],["TestIdentityCipher","Transport","classes\/Transport\/TestIdentityCipher.html"," < Test::Unit::TestCase","",1],["TestPacketStream","Transport","classes\/Transport\/TestPacketStream.html"," < Test::Unit::TestCase","",1],["TestServerVersion","Transport","classes\/Transport\/TestServerVersion.html"," < Test::Unit::TestCase","",1],["TestSession","Transport","classes\/Transport\/TestSession.html"," < Test::Unit::TestCase","",1],["TestState","Transport","classes\/Transport\/TestState.html"," < Test::Unit::TestCase","",1],["<=>","Net::SSH::Version","classes\/Net\/SSH\/Version.html#M000415","(version)","Compare this version to the given +version+ object. ",2],["==","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000051","(buffer)","Compares the contents of the two buffers, returning +true+ only if they are identical in size and content.",2],["P","Object","classes\/Object.html#M000722","(*args)","",2],["[]","ConfigTable","classes\/ConfigTable.html#M000426","(key)","",2],["[]","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000102","(name)","A shortcut for accessing properties of the channel (see #properties). ",2],["[]","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000127","(key)","Retrieves a custom property from this instance. This can be used to store additional state in applications",2],["[]","Net::SSH::HostKeyMismatch","classes\/Net\/SSH\/HostKeyMismatch.html#M000165","(key)","An accessor for getting at the data that was used to look up the host (see also #fingerprint, #host,",2],["[]","Net::SSH::Packet","classes\/Net\/SSH\/Packet.html#M000209","(name)","Access one of the auto-parsed fields by name. Raises an error if no element by the given name exists.",2],["[]","Net::SSH::Transport::Algorithms","classes\/Net\/SSH\/Transport\/Algorithms.html#M000301","(key)","A convenience method for accessing the list of preferred types for a specific algorithm (see #algorithms).",2],["[]","Net::SSH::Version","classes\/Net\/SSH\/Version.html#M000413","(major, minor, tiny)","A convenience method for instantiating a new Version instance with the given +major+, +minor+, and +tiny+",2],["[]=","ConfigTable","classes\/ConfigTable.html#M000427","(key, val)","",2],["[]=","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000103","(name, value)","A shortcut for setting properties of the channel (see #properties). ",2],["[]=","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000128","(key, value)","Sets a custom property for this instance. ",2],["accept_kexinit","Net::SSH::Transport::Algorithms","classes\/Net\/SSH\/Transport\/Algorithms.html#M000300","(packet)","Called by the transport layer when a KEXINIT packet is recieved, indicating that the server wants to",2],["active?","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000109","()","Returns true if the channel exists in the channel list of the session, and false otherwise. This can",2],["active_locals","Net::SSH::Service::Forward","classes\/Net\/SSH\/Service\/Forward.html#M000223","()","Returns a list of all active locally forwarded ports. The returned value is an array of arrays, where",2],["active_remotes","Net::SSH::Service::Forward","classes\/Net\/SSH\/Service\/Forward.html#M000230","()","Returns all active forwarded remote ports. The returned value is an array of two-element tuples, where",2],["add","ConfigTable","classes\/ConfigTable.html#M000432","(item)","",2],["add","Net::SSH::Authentication::KeyManager","classes\/Net\/SSH\/Authentication\/KeyManager.html#M000009","(key_file)","Add the given key_file to the list of key files that will be used. ",2],["add","Net::SSH::KnownHosts","classes\/Net\/SSH\/KnownHosts.html#M000193","(host, key, options={})","Looks in all user known host files (see KnownHosts.hostfiles) and tries to add an entry for the given",2],["add","Net::SSH::KnownHosts","classes\/Net\/SSH\/KnownHosts.html#M000198","(host, key)","Tries to append an entry to the current source file for the given host and key. If it is unable to (because",2],["add_bool_config","ConfigTable::MetaConfigEnvironment","classes\/ConfigTable\/MetaConfigEnvironment.html#M000502","(name, default, desc)","",2],["add_config","ConfigTable::MetaConfigEnvironment","classes\/ConfigTable\/MetaConfigEnvironment.html#M000501","(item)","",2],["add_key_data","Net::SSH::Authentication::KeyManager","classes\/Net\/SSH\/Authentication\/KeyManager.html#M000010","(key_data_)","Add the given key_file to the list of keys that will be used. ",2],["add_path_config","ConfigTable::MetaConfigEnvironment","classes\/ConfigTable\/MetaConfigEnvironment.html#M000503","(name, default, desc)","",2],["agent","Net::SSH::Authentication::KeyManager","classes\/Net\/SSH\/Authentication\/KeyManager.html#M000021","()","Returns an Agent instance to use for communicating with an SSH agent process. Returns nil if use of an",2],["agent","Net::SSH::Service::Forward","classes\/Net\/SSH\/Service\/Forward.html#M000236","(channel)","Enables SSH agent forwarding on the given channel. The forwarded agent will remain active even after",2],["allow?","Net::SSH::Transport::Algorithms","classes\/Net\/SSH\/Transport\/Algorithms.html#M000303","(packet)","Returns true if no exchange is pending, and otherwise returns true or false depending on whether the",2],["allowed_packet?","Net::SSH::Transport::Algorithms","classes\/Net\/SSH\/Transport\/Algorithms.html#M000294","(packet)","Returns true if the given packet can be processed during a key-exchange. ",2],["append","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000059","(text)","Appends the given text to the end of the buffer. Does not alter the read position. Returns the buffer",2],["assert_scripted","Net::SSH::Test","classes\/Net\/SSH\/Test.html#M000292","()","First asserts that a story has been described (see #story). Then yields, and then asserts that all items",2],["authenticate","Net::SSH::Authentication::Methods::Hostbased","classes\/Net\/SSH\/Authentication\/Methods\/Hostbased.html#M000023","(next_service, username, password=nil)","Attempts to perform host-based authorization of the user by trying all known keys. ",2],["authenticate","Net::SSH::Authentication::Methods::KeyboardInteractive","classes\/Net\/SSH\/Authentication\/Methods\/KeyboardInteractive.html#M000031","(next_service, username, password=nil)","Attempt to authenticate the given user for the given service. ",2],["authenticate","Net::SSH::Authentication::Methods::Password","classes\/Net\/SSH\/Authentication\/Methods\/Password.html#M000030","(next_service, username, password=nil)","Attempt to authenticate the given user for the given service. If the password parameter is nil, this",2],["authenticate","Net::SSH::Authentication::Methods::Publickey","classes\/Net\/SSH\/Authentication\/Methods\/Publickey.html#M000032","(next_service, username, password=nil)","Attempts to perform public-key authentication for the given username, trying each identity known to the",2],["authenticate","Net::SSH::Authentication::Session","classes\/Net\/SSH\/Authentication\/Session.html#M000045","(next_service, username, password=nil)","Attempts to authenticate the given user, in preparation for the next service request. Returns true if",2],["available","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000048","()","Returns the number of bytes available to be read (e.g., how many bytes remain between the current position",2],["available","Net::SSH::BufferedIo","classes\/Net\/SSH\/BufferedIo.html#M000077","()","Returns the number of bytes available to be read from the input buffer. (See #read_available.) ",2],["available_for_read?","Net::SSH::Transport::PacketStream","classes\/Net\/SSH\/Transport\/PacketStream.html#M000366","()","Returns true if the IO is available for reading, and false otherwise. ",2],["binread","File","classes\/File.html#M000421","(fname)","",2],["block_size","Net::SSH::Transport::IdentityCipher","classes\/Net\/SSH\/Transport\/IdentityCipher.html#M000327","()","A default block size of 8 is required by the SSH2 protocol. ",2],["bool_config?","ConfigTable::MetaConfigEnvironment","classes\/ConfigTable\/MetaConfigEnvironment.html#M000498","(name)","",2],["busy?","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000134","(include_invisible=false)","Returns +true+ if there are any channels currently active on this session. By default, this will not",2],["cancel_local","Net::SSH::Service::Forward","classes\/Net\/SSH\/Service\/Forward.html#M000222","(port, bind_address=\"127.0.0.1\")","Terminates an active local forwarded port. If no such forwarded port exists, this will raise an exception.",2],["cancel_remote","Net::SSH::Service::Forward","classes\/Net\/SSH\/Service\/Forward.html#M000229","(port, host=\"127.0.0.1\")","Requests that a remote forwarded port be cancelled. The remote forwarded port on the remote host, bound",2],["clean_dir_bin","Installer","classes\/Installer.html#M000696","(rel)","Alias for #noop",2],["clean_dir_conf","Installer","classes\/Installer.html#M000699","(rel)","Alias for #noop",2],["clean_dir_data","Installer","classes\/Installer.html#M000698","(rel)","Alias for #noop",2],["clean_dir_ext","Installer","classes\/Installer.html#M000701","(rel)","",2],["clean_dir_lib","Installer","classes\/Installer.html#M000697","(rel)","Alias for #noop",2],["clean_dir_man","Installer","classes\/Installer.html#M000700","(rel)","Alias for #noop",2],["cleanup","Net::SSH::Transport::PacketStream","classes\/Net\/SSH\/Transport\/PacketStream.html#M000371","()","Performs any pending cleanup necessary on the IO and its associated state objects. (See State#cleanup).",2],["cleanup","Net::SSH::Transport::State","classes\/Net\/SSH\/Transport\/State.html#M000398","()","Closes any the compressor and\/or decompressor objects that have been instantiated. ",2],["clear!","Net::SSH::Authentication::KeyManager","classes\/Net\/SSH\/Authentication\/KeyManager.html#M000008","()","Clear all knowledge of any loaded user keys. This also clears the list of default identity files that",2],["clear!","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000055","()","Resets the buffer, making it empty. Also, resets the read position to 0. ",2],["client_name","Net::SSH::Transport::PacketStream","classes\/Net\/SSH\/Transport\/PacketStream.html#M000363","()","The name of the client (local) end of the socket, as reported by the socket. ",2],["close","Net::SSH::Authentication::Agent","classes\/Net\/SSH\/Authentication\/Agent.html#M000006","()","Closes this socket. This agent reference is no longer able to query the agent. ",2],["close","Net::SSH::Authentication::Pageant::Socket","classes\/Net\/SSH\/Authentication\/Pageant\/Socket.html#M000040","()","Conceptually close the socket. This doesn't really do anthing significant, but merely complies with the",2],["close","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000112","()","Requests that the channel be closed. If the channel is already closing, this does nothing, nor does it",2],["close","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000132","()","Closes the session gracefully, blocking until all channels have successfully closed, and then closes",2],["close","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000381","()","Cleans up (see PacketStream#cleanup) and closes the underlying socket. ",2],["closed?","Net::SSH::Authentication::Pageant::Socket","classes\/Net\/SSH\/Authentication\/Pageant\/Socket.html#M000041","()","Conceptually asks if the socket is closed. As with #close, this doesn't really do anything significant,",2],["closed?","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000131","()","Returns true if the underlying transport has been closed. Note that this can be a little misleading,",2],["closed?","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000380","()","Returns true if the underlying socket has been closed. ",2],["closing?","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000111","()","Returns true if the channel is currently closing, but not actually closed. A channel is closing when,",2],["command","FileOperations","classes\/FileOperations.html#M000524","(*args)","",2],["compress","Net::SSH::Transport::State","classes\/Net\/SSH\/Transport\/State.html#M000394","(data)","Compresses the data. If no compression is in effect, this will just return the data unmodified, otherwise",2],["compression?","Net::SSH::Transport::State","classes\/Net\/SSH\/Transport\/State.html#M000393","()","Returns true if data compression\/decompression is enabled. This will return true if :standard compression",2],["compressor","Net::SSH::Transport::State","classes\/Net\/SSH\/Transport\/State.html#M000386","()","The compressor object to use when compressing data. This takes into account the desired compression level.",2],["config","HookScriptAPI","classes\/HookScriptAPI.html#M000531","(key)","Alias for #get_config",2],["config","ToplevelInstaller","classes\/ToplevelInstaller.html#M000554","(key)","",2],["config?","ConfigTable::MetaConfigEnvironment","classes\/ConfigTable\/MetaConfigEnvironment.html#M000497","(name)","",2],["config_dir_bin","Installer","classes\/Installer.html#M000631","(rel)","Alias for #noop",2],["config_dir_conf","Installer","classes\/Installer.html#M000635","(rel)","Alias for #noop",2],["config_dir_data","Installer","classes\/Installer.html#M000634","(rel)","Alias for #noop",2],["config_dir_ext","Installer","classes\/Installer.html#M000633","(rel)","",2],["config_dir_lib","Installer","classes\/Installer.html#M000632","(rel)","Alias for #noop",2],["config_dir_man","Installer","classes\/Installer.html#M000636","(rel)","Alias for #noop",2],["config_names","ConfigTable::MetaConfigEnvironment","classes\/ConfigTable\/MetaConfigEnvironment.html#M000496","()","",2],["config_type","ConfigTable::BoolItem","classes\/ConfigTable\/BoolItem.html#M000474","()","",2],["config_type","ConfigTable::ExecItem","classes\/ConfigTable\/ExecItem.html#M000487","()","",2],["config_type","ConfigTable::PackageSelectionItem","classes\/ConfigTable\/PackageSelectionItem.html#M000493","()","",2],["config_type","ConfigTable::PathItem","classes\/ConfigTable\/PathItem.html#M000480","()","",2],["config_type","ConfigTable::ProgramItem","classes\/ConfigTable\/ProgramItem.html#M000482","()","",2],["config_type","ConfigTable::SelectItem","classes\/ConfigTable\/SelectItem.html#M000484","()","",2],["configuration_for","Net::SSH","classes\/Net\/SSH.html#M000419","(host, use_ssh_config=true)","Returns a hash of the configuration options for the given host, as read from the SSH configuration file(s).",2],["configure_client","MockTransport","classes\/MockTransport.html#M000734","(options)","",2],["configure_client","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000402","(options={})","Configure's the packet stream's client state with the given set of options. This is typically used to",2],["configure_server","MockTransport","classes\/MockTransport.html#M000735","(options)","",2],["configure_server","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000404","(options={})","Configure's the packet stream's server state with the given set of options. This is typically used to",2],["connect","Net::SSH::Authentication::Agent","classes\/Net\/SSH\/Authentication\/Agent.html#M000000","(logger=nil)","Instantiates a new agent object, connects to a running SSH agent, negotiates the agent protocol version,",2],["connect!","Net::SSH::Authentication::Agent","classes\/Net\/SSH\/Authentication\/Agent.html#M000002","()","Connect to the agent process using the socket factory and socket name given by the attribute writers.",2],["connection","Net::SSH::Test","classes\/Net\/SSH\/Test.html#M000288","(options={})","Returns the connection session (Net::SSH::Connection::Session) for use in these tests. It is a fully",2],["consume!","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000056","(n=position)","Consumes n bytes from the buffer, where n is the current position unless otherwise specified. This is",2],["curr_objdir","HookScriptAPI","classes\/HookScriptAPI.html#M000534","()","",2],["curr_srcdir","HookScriptAPI","classes\/HookScriptAPI.html#M000533","()","srcdir\/objdir (works only in the package directory) ",2],["debug","Net::SSH::Loggable","classes\/Net\/SSH\/Loggable.html#M000196","()","Displays the result of yielding if the log level is Logger::DEBUG or greater. ",2],["declare_packages","ConfigTable::MetaConfigEnvironment","classes\/ConfigTable\/MetaConfigEnvironment.html#M000507","(list)","For only multipackage ",2],["decompress","Net::SSH::Transport::State","classes\/Net\/SSH\/Transport\/State.html#M000395","(data)","Deompresses the data. If no compression is in effect, this will just return the data unmodified, otherwise",2],["decompressor","Net::SSH::Transport::State","classes\/Net\/SSH\/Transport\/State.html#M000387","()","The decompressor object to use when decompressing data. ",2],["decrypt","Net::SSH::Transport::IdentityCipher","classes\/Net\/SSH\/Transport\/IdentityCipher.html#M000330","()","Does nothing. Returns self. ",2],["default_files","Net::SSH::Config","classes\/Net\/SSH\/Config.html#M000095","()","Returns an array of locations of OpenSSH configuration files to parse by default. ",2],["diff?","FileOperations","classes\/FileOperations.html#M000522","(new_content, path)","",2],["digest","Net::SSH::Transport::HMAC::Abstract","classes\/Net\/SSH\/Transport\/HMAC\/Abstract.html#M000322","(data)","Compute the HMAC digest for the given data string. ",2],["digest","Net::SSH::Transport::HMAC::None","classes\/Net\/SSH\/Transport\/HMAC\/None.html#M000324","(data)","",2],["digest_class","Net::SSH::Transport::HMAC::Abstract","classes\/Net\/SSH\/Transport\/HMAC\/Abstract.html#M000319","()","",2],["digest_class","Net::SSH::Transport::HMAC::Abstract","classes\/Net\/SSH\/Transport\/HMAC\/Abstract.html#M000315","(*v)","",2],["dir?","File","classes\/File.html#M000422","(path)","for corrupted Windows' stat(2) ",2],["directories_of","FileOperations","classes\/FileOperations.html#M000529","(dir)","",2],["distclean_dir_bin","Installer","classes\/Installer.html#M000703","(rel)","Alias for #noop",2],["distclean_dir_conf","Installer","classes\/Installer.html#M000707","(rel)","Alias for #noop",2],["distclean_dir_data","Installer","classes\/Installer.html#M000706","(rel)","Alias for #noop",2],["distclean_dir_ext","Installer","classes\/Installer.html#M000705","(rel)","",2],["distclean_dir_lib","Installer","classes\/Installer.html#M000704","(rel)","Alias for #noop",2],["distclean_dir_man","Installer","classes\/Installer.html#M000708","(rel)","Alias for #noop",2],["dive_into","Installer","classes\/Installer.html#M000712","(rel)","",2],["dllext","ConfigTable","classes\/ConfigTable.html#M000462","()","",2],["do_close","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000146","()","Invokes the #on_close callback when the server closes a channel. The channel is the only argument. ",2],["do_eof","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000145","()","Invokes the #on_eof callback when the server indicates that no further data is forthcoming. The callback",2],["do_extended_data","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000144","(type, data)","Invokes the #on_extended_data callback when the server sends extended data to the channel. This will",2],["do_failure","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000147","()","Invokes the next pending request callback with +false+ as the second argument. ",2],["do_open_failed","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000138","(reason_code, description)","Invoked when the server failed to open the channel. If an #on_open_failed callback was specified, it",2],["do_success","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000149","()","Invokes the next pending request callback with +true+ as the second argument. ",2],["each","ConfigTable","classes\/ConfigTable.html#M000429","(&block)","",2],["each_identity","Net::SSH::Authentication::KeyManager","classes\/Net\/SSH\/Authentication\/KeyManager.html#M000014","()","Iterates over all available identities (public keys) known to this manager. As it finds one, it will",2],["each_selected_installers","ToplevelInstallerMulti","classes\/ToplevelInstallerMulti.html#M000610","()","lib ",2],["empty?","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000052","()","Returns +true+ if the buffer contains no data (e.g., it is of zero length). ",2],["encrypt","Net::SSH::Transport::IdentityCipher","classes\/Net\/SSH\/Transport\/IdentityCipher.html#M000329","()","Does nothing. Returns self. ",2],["enqueue","Net::SSH::BufferedIo","classes\/Net\/SSH\/BufferedIo.html#M000082","(data)","Enqueues data in the output buffer, to be written when #send_pending is called. Note that the data is",2],["enqueue_message","MockTransport","classes\/MockTransport.html#M000727","(message)","",2],["enqueue_message","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000401","(message)","Enqueues the given message, such that it will be sent at the earliest opportunity. This does not block,",2],["enqueue_packet","Connection::TestSession::MockSocket","classes\/Connection\/TestSession\/MockSocket.html#M000895","(message)","so that we can easily test the contents that were enqueued, without worrying about all the packet stream",2],["enqueue_packet","Net::SSH::Transport::PacketStream","classes\/Net\/SSH\/Transport\/PacketStream.html#M000370","(payload)","Enqueues a packet to be sent, but does not immediately send the packet. The given payload is pre-processed",2],["env","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000106","(variable_name, variable_value, &block)","Syntactic sugar for setting an environment variable in the remote process' environment. Note that for",2],["eof!","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000114","()","Tells the remote end of the channel that no more data is forthcoming from this end of the channel. The",2],["eof?","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000054","()","Returns true if the pointer is at the end of the buffer. Subsequent reads will return nil, in this case.",2],["eof?","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000113","()","Returns true if the local end of the channel has declared that no more data is forthcoming (see #eof!).",2],["error","Net::SSH::Loggable","classes\/Net\/SSH\/Loggable.html#M000200","()","Displays the result of yielding if the log level is Logger:ERROR or greater. ",2],["evaluate","ConfigTable::ExecItem","classes\/ConfigTable\/ExecItem.html#M000490","(val, table)","",2],["exchange_keys","Net::SSH::Test::Kex","classes\/Net\/SSH\/Test\/Kex.html#M000257","()","Exchange keys with the server. This returns a hash of constant values, and does not actually exchange",2],["exchange_keys","Net::SSH::Transport::Kex::DiffieHellmanGroup1SHA1","classes\/Net\/SSH\/Transport\/Kex\/DiffieHellmanGroup1SHA1.html#M000341","()","Perform the key-exchange for the given session, with the given data. This method will return a hash consisting",2],["exec","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000104","(command, &block)","Syntactic sugar for executing a command. Sends a channel request asking that the given command be invoked.",2],["exec","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000153","(command, &block)","A convenience method for executing a command and interacting with it. If no block is given, all output",2],["exec!","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000154","(command, &block)","Same as #exec, except this will block until the command finishes. Also, if a block is not given, this",2],["exec_clean","Installer","classes\/Installer.html#M000692","()","TASK clean ",2],["exec_clean","ToplevelInstaller","classes\/ToplevelInstaller.html#M000585","()","",2],["exec_clean","ToplevelInstallerMulti","classes\/ToplevelInstallerMulti.html#M000608","()","",2],["exec_config","Installer","classes\/Installer.html#M000630","()","TASK config ",2],["exec_config","ToplevelInstaller","classes\/ToplevelInstaller.html#M000580","()","Task Handlers ",2],["exec_config","ToplevelInstallerMulti","classes\/ToplevelInstallerMulti.html#M000603","()","Task Handlers ",2],["exec_distclean","Installer","classes\/Installer.html#M000702","()","TASK distclean ",2],["exec_distclean","ToplevelInstaller","classes\/ToplevelInstaller.html#M000590","()","",2],["exec_distclean","ToplevelInstallerMulti","classes\/ToplevelInstallerMulti.html#M000609","()","",2],["exec_install","Installer","classes\/Installer.html#M000666","()","TASK install ",2],["exec_install","ToplevelInstaller","classes\/ToplevelInstaller.html#M000582","()","",2],["exec_install","ToplevelInstallerMulti","classes\/ToplevelInstallerMulti.html#M000605","()","",2],["exec_setup","Installer","classes\/Installer.html#M000638","()","TASK setup ",2],["exec_setup","ToplevelInstaller","classes\/ToplevelInstaller.html#M000581","()","",2],["exec_setup","ToplevelInstallerMulti","classes\/ToplevelInstallerMulti.html#M000604","()","",2],["exec_show","ToplevelInstaller","classes\/ToplevelInstaller.html#M000584","()","",2],["exec_task_traverse","Installer","classes\/Installer.html#M000709","(task)","Traversing ",2],["exec_test","Installer","classes\/Installer.html#M000691","()","",2],["exec_test","ToplevelInstaller","classes\/ToplevelInstaller.html#M000583","()","",2],["exec_test","ToplevelInstallerMulti","classes\/ToplevelInstallerMulti.html#M000606","()","",2],["existfiles","Installer","classes\/Installer.html#M000682","()","",2],["expect","Authentication::TestAgent::MockSocket","classes\/Authentication\/TestAgent\/MockSocket.html#M000643","(&block)","",2],["expect","Connection::TestChannel::MockConnection","classes\/Connection\/TestChannel\/MockConnection.html#M000809","(&block)","",2],["expect","MockTransport","classes\/MockTransport.html#M000731","(&block)","",2],["expect!","MockTransport","classes\/MockTransport.html#M000732","()","",2],["expect_message","Net::SSH::Authentication::Session","classes\/Net\/SSH\/Authentication\/Session.html#M000057","(type)","Blocks until a packet is received, and returns it if it is of the given type. If it is not, an exception",2],["extconf","Installer","classes\/Installer.html#M000637","()","",2],["extdir?","FileOperations","classes\/FileOperations.html#M000527","(dir)","",2],["extended","Net::SSH::Transport::PacketStream","classes\/Net\/SSH\/Transport\/PacketStream.html#M000362","(object)","",2],["extract_selection","ToplevelInstallerMulti","classes\/ToplevelInstallerMulti.html#M000598","(list)","",2],["fatal","Net::SSH::Loggable","classes\/Net\/SSH\/Loggable.html#M000201","()","Displays the result of yielding if the log level is Logger::FATAL or greater. ",2],["files_of","FileOperations","classes\/FileOperations.html#M000528","(dir)","",2],["fill","Net::SSH::BufferedIo","classes\/Net\/SSH\/BufferedIo.html#M000070","(n=8192)","Tries to read up to +n+ bytes of data from the remote end, and appends the data to the input buffer.",2],["final","Net::SSH::Transport::IdentityCipher","classes\/Net\/SSH\/Transport\/IdentityCipher.html#M000332","()","Returns the empty string. ",2],["final_cipher","Net::SSH::Transport::State","classes\/Net\/SSH\/Transport\/State.html#M000384","()","",2],["fingerprint","Net::SSH::HostKeyMismatch","classes\/Net\/SSH\/HostKeyMismatch.html#M000166","()","Returns the fingerprint of the key for the host, which either was not found or did not match. ",2],["fingerprint","OpenSSL::PKey::PKey","classes\/OpenSSL\/PKey\/PKey.html#M000349","()","",2],["finish","Net::SSH::Authentication::KeyManager","classes\/Net\/SSH\/Authentication\/KeyManager.html#M000013","()","This is used as a hint to the KeyManager indicating that the agent connection is no longer needed. Any",2],["fixup","ConfigTable","classes\/ConfigTable.html#M000454","()","",2],["for","Net::SSH::Config","classes\/Net\/SSH\/Config.html#M000096","(host, files=default_files)","Loads the configuration data for the given +host+ from all of the given +files+ (defaulting to the list",2],["force_remove_file","FileOperations","classes\/FileOperations.html#M000517","(path)","",2],["forward","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000158","()","Returns a reference to the Net::SSH::Service::Forward service, which can be used for forwarding ports",2],["from","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000043","(*args)","This is a convenience method for creating and populating a new buffer from a single command. The arguments",2],["get","Net::SSH::KeyFactory","classes\/Net\/SSH\/KeyFactory.html#M000175","(name)","Fetch an OpenSSL key instance by its SSH name. It will be a new, empty key of the given type. ",2],["get","Net::SSH::Transport::CipherFactory","classes\/Net\/SSH\/Transport\/CipherFactory.html#M000295","(name, options={})","Retrieves a new instance of the named algorithm. The new instance will be initialized using an iv and",2],["get","Net::SSH::Transport::HMAC","classes\/Net\/SSH\/Transport\/HMAC.html#M000325","(name, key=\"\")","Retrieves a new hmac instance of the given SSH type (+name+). If +key+ is given, the new instance will",2],["get_config","HookScriptAPI","classes\/HookScriptAPI.html#M000530","(key)","",2],["get_lengths","Net::SSH::Transport::CipherFactory","classes\/Net\/SSH\/Transport\/CipherFactory.html#M000296","(name)","Returns a two-element array containing the [ key-length, block-size ] for the named cipher algorithm.",2],["getbyte","String","classes\/String.html#M000216","(index)","",2],["getpeername","Net::SSH::Test::Socket","classes\/Net\/SSH\/Test\/Socket.html#M000276","()","Returns a sockaddr struct for the port and host that were used when the socket was instantiated. ",2],["gets","Net::SSH::Test::Script","classes\/Net\/SSH\/Test\/Script.html#M000274","(type, *args)","A convenience method for adding an arbitrary remote packet to the events list. ",2],["gets_channel_close","Net::SSH::Test::Script","classes\/Net\/SSH\/Test\/Script.html#M000285","(channel)","Scripts the reception of a channel close packet from the remote host by the given Net::SSH::Test::Channel",2],["gets_channel_data","Net::SSH::Test::Script","classes\/Net\/SSH\/Test\/Script.html#M000282","(channel, data)","Scripts the reception of a channel data packet from the remote host by the given Net::SSH::Test::Channel",2],["gets_channel_eof","Net::SSH::Test::Script","classes\/Net\/SSH\/Test\/Script.html#M000284","(channel)","Scripts the reception of a channel EOF packet from the remote host by the given Net::SSH::Test::Channel",2],["gets_channel_request","Net::SSH::Test::Script","classes\/Net\/SSH\/Test\/Script.html#M000283","(channel, request, reply, data)","Scripts the reception of a channel request packet from the remote host by the given Net::SSH::Test::Channel",2],["gets_close","Net::SSH::Test::Channel","classes\/Net\/SSH\/Test\/Channel.html#M000242","()","Scripts the reception of a \"channel close\" packet from the remote end. channel.gets_close ",2],["gets_data","Net::SSH::Test::Channel","classes\/Net\/SSH\/Test\/Channel.html#M000239","(data)","Scripts the reception of a channel data packet from the remote end. channel.gets_data \"bar\" ",2],["gets_eof","Net::SSH::Test::Channel","classes\/Net\/SSH\/Test\/Channel.html#M000241","()","Scripts the reception of an EOF packet from the remote end. channel.gets_eof ",2],["gets_exit_status","Net::SSH::Test::Channel","classes\/Net\/SSH\/Test\/Channel.html#M000240","(status=0)","Scripts the reception of an \"exit-status\" channel request packet. channel.gets_exit_status(127) ",2],["glob_reject","Installer","classes\/Installer.html#M000689","(pats, ents)","",2],["glob_select","Installer","classes\/Installer.html#M000688","(pat, ents)","",2],["globs2re","Installer","classes\/Installer.html#M000690","(pats)","",2],["help_opt","ConfigTable::BoolItem","classes\/ConfigTable\/BoolItem.html#M000475","()","",2],["help_opt","ConfigTable::Item","classes\/ConfigTable\/Item.html#M000465","()","",2],["hint","MockTransport","classes\/MockTransport.html#M000736","(name, value=true)","",2],["hint","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000405","(which, value=true)","Sets a new hint for the packet stream, which the packet stream may use to change its behavior. (See PacketStream#hints).",2],["hookfiles","Installer","classes\/Installer.html#M000683","()","",2],["host","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000129","()","Returns the name of the host that was given to the transport layer to connect to. ",2],["host","Net::SSH::HostKeyMismatch","classes\/Net\/SSH\/HostKeyMismatch.html#M000167","()","Returns the host name for the remote host, as reported by the socket. ",2],["host_as_string","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000377","()","Returns the host (and possibly IP address) in a format compatible with SSH known-host files. ",2],["hostfiles","Net::SSH::KnownHosts","classes\/Net\/SSH\/KnownHosts.html#M000191","(options, which=:all)","Looks in the given +options+ hash for the :user_known_hosts_file and :global_known_hosts_file keys, and",2],["identities","Net::SSH::Authentication::Agent","classes\/Net\/SSH\/Authentication\/Agent.html#M000005","()","Return an array of all identities (public keys) known to the agent. Each key returned is augmented with",2],["idle!","Net::SSH::Test::Extensions::PacketStream","classes\/Net\/SSH\/Test\/Extensions\/PacketStream.html#M000247","()","Called when another packet should be inspected from the current script. If the next packet is a remote",2],["if_needs_rekey?","Net::SSH::Transport::PacketStream","classes\/Net\/SSH\/Transport\/PacketStream.html#M000372","()","If the IO object requires a rekey operation (as indicated by either its client or server state objects,",2],["if_supported?","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M000993","(name)","",2],["increment","Net::SSH::Transport::State","classes\/Net\/SSH\/Transport\/State.html#M000385","(packet_length)","Increments the counters. The sequence number is incremented (and remapped so it always fits in a 32-bit",2],["info","Net::SSH::Loggable","classes\/Net\/SSH\/Loggable.html#M000197","()","Displays the result of yielding if the log level is Logger::INFO or greater. ",2],["init_installers","ToplevelInstaller","classes\/ToplevelInstaller.html#M000559","()","",2],["init_installers","ToplevelInstallerMulti","classes\/ToplevelInstallerMulti.html#M000594","()","",2],["initialize_ssh","Net::SSH::Transport::PacketStream","classes\/Net\/SSH\/Transport\/PacketStream.html#M000373","()","Called when this module is used to extend an object. It initializes the states and generally prepares",2],["initialized?","Net::SSH::Transport::Algorithms","classes\/Net\/SSH\/Transport\/Algorithms.html#M000304","()","Returns true if the algorithms have been negotiated at all. ",2],["inject_remote_delay!","Net::SSH::Test::Channel","classes\/Net\/SSH\/Test\/Channel.html#M000231","()","Because adjacent calls to #gets_data will sometimes cause the data packets to be concatenated (causing",2],["inspect","Installer","classes\/Installer.html#M000619","()","",2],["inspect","ToplevelInstaller","classes\/ToplevelInstaller.html#M000555","()","",2],["install","FileOperations","classes\/FileOperations.html#M000521","(from, dest, mode, prefix = nil)","",2],["install_dir_bin","Installer","classes\/Installer.html#M000668","(rel)","",2],["install_dir_conf","Installer","classes\/Installer.html#M000672","(rel)","",2],["install_dir_data","Installer","classes\/Installer.html#M000671","(rel)","",2],["install_dir_ext","Installer","classes\/Installer.html#M000670","(rel)","",2],["install_dir_lib","Installer","classes\/Installer.html#M000669","(rel)","",2],["install_dir_man","Installer","classes\/Installer.html#M000673","(rel)","",2],["install_files","Installer","classes\/Installer.html#M000674","(list, dest, mode)","",2],["instantiate!","Net::SSH::Test::Packet","classes\/Net\/SSH\/Test\/Packet.html#M000264","()","Instantiates the packets data elements. When the packet was first defined, some elements may not have",2],["invoke","ToplevelInstaller","classes\/ToplevelInstaller.html#M000556","()","",2],["invoke","ToplevelInstaller","classes\/ToplevelInstaller.html#M000546","()","",2],["ip","Net::SSH::HostKeyMismatch","classes\/Net\/SSH\/HostKeyMismatch.html#M000169","()","Returns the IP address of the remote host, as reported by the socket. ",2],["iv=","Net::SSH::Transport::IdentityCipher","classes\/Net\/SSH\/Transport\/IdentityCipher.html#M000334","(v)","Does nothing. Returns nil. ",2],["iv_len","Net::SSH::Transport::IdentityCipher","classes\/Net\/SSH\/Transport\/IdentityCipher.html#M000328","()","Returns an arbitrary integer. ",2],["key","Net::SSH::HostKeyMismatch","classes\/Net\/SSH\/HostKeyMismatch.html#M000170","()","Returns the key itself, as reported by the remote host. ",2],["key=","Net::SSH::Transport::HMAC::Abstract","classes\/Net\/SSH\/Transport\/HMAC\/Abstract.html#M000321","(value)","Sets the key to the given value, truncating it so that it is the correct length. ",2],["key?","ConfigTable","classes\/ConfigTable.html#M000430","(name)","",2],["key_length","Net::SSH::Transport::HMAC","classes\/Net\/SSH\/Transport\/HMAC.html#M000326","(name)","Retrieves the key length for the hmac of the given SSH type (+name+). ",2],["key_length","Net::SSH::Transport::HMAC::Abstract","classes\/Net\/SSH\/Transport\/HMAC\/Abstract.html#M000316","()","",2],["key_length","Net::SSH::Transport::HMAC::Abstract","classes\/Net\/SSH\/Transport\/HMAC\/Abstract.html#M000311","(*v)","",2],["keys_for","Net::SSH::KnownHosts","classes\/Net\/SSH\/KnownHosts.html#M000195","(host)","Returns an array of all keys that are known to be associatd with the given host. The +host+ parameter",2],["length","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000047","()","Returns the length of the buffer's content. ",2],["libfiles","Installer","classes\/Installer.html#M000676","()","",2],["listen_to","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000156","(io, &callback)","Adds an IO object for the event loop to listen to. If a callback is given, it will be invoked when the",2],["load","Installer::Shebang","classes\/Installer\/Shebang.html#M000662","(path)","",2],["load","Net::SSH::Config","classes\/Net\/SSH\/Config.html#M000097","(file, host, settings={})","Load the OpenSSH configuration settings in the given +file+ for the given +host+. If +settings+ is given,",2],["load_data_private_key","Net::SSH::KeyFactory","classes\/Net\/SSH\/KeyFactory.html#M000177","(data, passphrase=nil, filename=\"\")","Loads a private key. It will correctly determine whether the file describes an RSA or DSA key, and will",2],["load_data_public_key","Net::SSH::KeyFactory","classes\/Net\/SSH\/KeyFactory.html#M000181","(data, filename=\"\")","Loads a public key. It will correctly determine whether the file describes an RSA or DSA key, and will",2],["load_multipackage_entries","ConfigTable","classes\/ConfigTable.html#M000448","()","",2],["load_private_key","Net::SSH::KeyFactory","classes\/Net\/SSH\/KeyFactory.html#M000176","(filename, passphrase=nil)","Loads a private key from a file. It will correctly determine whether the file describes an RSA or DSA",2],["load_public_key","Net::SSH::KeyFactory","classes\/Net\/SSH\/KeyFactory.html#M000179","(filename)","Loads a public key from a file. It will correctly determine whether the file describes an RSA or DSA",2],["load_rbconfig","ToplevelInstaller","classes\/ToplevelInstaller.html#M000552","()","",2],["load_savefile","ConfigTable","classes\/ConfigTable.html#M000436","()","",2],["load_script","ConfigTable","classes\/ConfigTable.html#M000434","(path, inst = nil)","",2],["load_standard_entries","ConfigTable","classes\/ConfigTable.html#M000438","()","",2],["local","Net::SSH::Service::Forward","classes\/Net\/SSH\/Service\/Forward.html#M000221","(*args)","Starts listening for connections on the local host, and forwards them to the specified remote host\/port",2],["local?","Net::SSH::Test::LocalPacket","classes\/Net\/SSH\/Test\/LocalPacket.html#M000259","()","Returns +true+; this is a local packet. ",2],["local?","Net::SSH::Test::Packet","classes\/Net\/SSH\/Test\/Packet.html#M000263","()","The default for +local?+ is false. Subclasses should override as necessary. ",2],["local_id","Net::SSH::Test::Channel","classes\/Net\/SSH\/Test\/Channel.html#M000225","()","Returns the local (client-assigned) id for this channel, or a Proc object that will return the local-id",2],["lookup","ConfigTable","classes\/ConfigTable.html#M000431","(name)","",2],["loop","Connection::TestChannel::MockConnection","classes\/Connection\/TestChannel\/MockConnection.html#M000814","(&block)","",2],["loop","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000136","(wait=nil, &block)","The main event loop. Calls #process until #process returns false. If a block is given, it is passed to",2],["loop_forever","Connection::TestChannel::MockConnection","classes\/Connection\/TestChannel\/MockConnection.html#M000815","(&block)","Alias for #loop",2],["loop_forever","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000137","(wait=nil, &block)","Alias for #loop",2],["lwarn","Net::SSH::Loggable","classes\/Net\/SSH\/Loggable.html#M000199","()","Displays the result of yielding if the log level is Logger::WARN or greater. (Called lwarn to avoid shadowing",2],["mac_length","Net::SSH::Transport::HMAC::Abstract","classes\/Net\/SSH\/Transport\/HMAC\/Abstract.html#M000317","()","",2],["mac_length","Net::SSH::Transport::HMAC::Abstract","classes\/Net\/SSH\/Transport\/HMAC\/Abstract.html#M000312","(*v)","",2],["make","FileOperations","classes\/FileOperations.html#M000526","(task = nil)","",2],["mapdir","Installer","classes\/Installer.html#M000679","(ents)","",2],["method_missing","Net::SSH::Connection::Session::NilChannel","classes\/Net\/SSH\/Connection\/Session\/NilChannel.html#M000124","(sym, *args)","",2],["mkdir_p","FileOperations","classes\/FileOperations.html#M000508","(dirname, prefix = nil)","",2],["move_file","FileOperations","classes\/FileOperations.html#M000515","(src, dest)","",2],["multipackage?","ToplevelInstaller","classes\/ToplevelInstaller.html#M000547","()","",2],["name","Net::SSH::Transport::IdentityCipher","classes\/Net\/SSH\/Transport\/IdentityCipher.html#M000333","()","The name of this cipher, which is \"identity\". ",2],["names","ConfigTable","classes\/ConfigTable.html#M000428","()","",2],["needs_rekey?","Net::SSH::Transport::State","classes\/Net\/SSH\/Transport\/State.html#M000403","()","Returns true if the number of packets processed exceeds the maximum number of packets, or if the number",2],["negotiate!","Net::SSH::Authentication::Agent","classes\/Net\/SSH\/Authentication\/Agent.html#M000003","()","Attempts to negotiate the SSH agent protocol version. Raises an error if the version could not be negotiated",2],["new","Authentication::TestAgent::MockSocket","classes\/Authentication\/TestAgent\/MockSocket.html#M000642","()","",2],["new","ConfigTable","classes\/ConfigTable.html#M000423","(rbconfig)","",2],["new","ConfigTable::ExecItem","classes\/ConfigTable\/ExecItem.html#M000486","(name, selection, desc, &block)","",2],["new","ConfigTable::Item","classes\/ConfigTable\/Item.html#M000464","(name, template, default, desc)","",2],["new","ConfigTable::MetaConfigEnvironment","classes\/ConfigTable\/MetaConfigEnvironment.html#M000495","(config, installer)","",2],["new","ConfigTable::PackageSelectionItem","classes\/ConfigTable\/PackageSelectionItem.html#M000491","(name, template, default, help_default, desc)","",2],["new","ConfigTable::SelectItem","classes\/ConfigTable\/SelectItem.html#M000483","(name, selection, default, desc)","",2],["new","Connection::TestChannel::MockConnection","classes\/Connection\/TestChannel\/MockConnection.html#M000808","(options={})","",2],["new","Installer","classes\/Installer.html#M000615","(config, srcroot, objroot)","",2],["new","Installer::Shebang","classes\/Installer\/Shebang.html#M000664","(cmd, args = [])","",2],["new","MockTransport","classes\/MockTransport.html#M000725","(options={})","",2],["new","MockTransport::BlockVerifier","classes\/MockTransport\/BlockVerifier.html#M000723","(block)","",2],["new","Net::SSH::Authentication::Agent","classes\/Net\/SSH\/Authentication\/Agent.html#M000001","(logger=nil)","Creates a new Agent object, using the optional logger instance to report status. ",2],["new","Net::SSH::Authentication::KeyManager","classes\/Net\/SSH\/Authentication\/KeyManager.html#M000004","(logger, options={})","Create a new KeyManager. By default, the manager will use the ssh-agent (if it is running). ",2],["new","Net::SSH::Authentication::Methods::Abstract","classes\/Net\/SSH\/Authentication\/Methods\/Abstract.html#M000022","(session, options={})","Instantiates a new authentication method. ",2],["new","Net::SSH::Authentication::Pageant::Socket","classes\/Net\/SSH\/Authentication\/Pageant\/Socket.html#M000037","()","Create a new instance that communicates with the running pageant  instance. If no such instance is running,",2],["new","Net::SSH::Authentication::Session","classes\/Net\/SSH\/Authentication\/Session.html#M000044","(transport, options={})","Instantiates a new Authentication::Session object over the given transport layer abstraction. ",2],["new","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000046","(content=\"\")","Creates a new buffer, initialized to the given content. The position is initialized to the beginning",2],["new","Net::SSH::ChannelOpenFailed","classes\/Net\/SSH\/ChannelOpenFailed.html#M000161","(code, reason)","",2],["new","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000101","(connection, type, local_id, &on_confirm_open)","Instantiates a new channel on the given connection, of the given type, and with the given id. If a block",2],["new","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000125","(transport, options={})","Create a new connection service instance atop the given transport layer. Initializes the listeners to",2],["new","Net::SSH::Connection::Session::NilChannel","classes\/Net\/SSH\/Connection\/Session\/NilChannel.html#M000123","(session)","",2],["new","Net::SSH::KnownHosts","classes\/Net\/SSH\/KnownHosts.html#M000194","(source)","Instantiate a new KnownHosts instance that will search the given known-hosts file. The path is expanded",2],["new","Net::SSH::Packet","classes\/Net\/SSH\/Packet.html#M000208","(payload)","Create a new packet from the given payload. This will automatically parse the packet if it is one that",2],["new","Net::SSH::Proxy::HTTP","classes\/Net\/SSH\/Proxy\/HTTP.html#M000211","(proxy_host, proxy_port=80, options={})","Create a new socket factory that tunnels via the given host and port. The +options+ parameter is a hash",2],["new","Net::SSH::Proxy::SOCKS4","classes\/Net\/SSH\/Proxy\/SOCKS4.html#M000214","(proxy_host, proxy_port=1080, options={})","Create a new proxy connection to the given proxy host and port. Optionally, a :user key may be given",2],["new","Net::SSH::Proxy::SOCKS5","classes\/Net\/SSH\/Proxy\/SOCKS5.html#M000217","(proxy_host, proxy_port=1080, options={})","Create a new proxy connection to the given proxy host and port. Optionally, :user and :password options",2],["new","Net::SSH::Service::Forward","classes\/Net\/SSH\/Service\/Forward.html#M000220","(session)","Instantiates a new Forward service instance atop the given connection service session. This will register",2],["new","Net::SSH::Test::Channel","classes\/Net\/SSH\/Test\/Channel.html#M000224","(script)","Creates a new Test::Channel instance on top of the given +script+ (which must be a Net::SSH::Test::Script",2],["new","Net::SSH::Test::Kex","classes\/Net\/SSH\/Test\/Kex.html#M000256","(algorithms, connection, data)","Creates a new instance of the testing key-exchange algorithm with the given arguments. ",2],["new","Net::SSH::Test::LocalPacket","classes\/Net\/SSH\/Test\/LocalPacket.html#M000258","(type, *args, &block)","Extend the default Net::SSH::Test::Packet constructor to also accept an optional block, which is used",2],["new","Net::SSH::Test::Packet","classes\/Net\/SSH\/Test\/Packet.html#M000261","(type, *args)","Ceate a new packet of the given +type+, and with +args+ being a list of data elements in the order expected",2],["new","Net::SSH::Test::Script","classes\/Net\/SSH\/Test\/Script.html#M000269","()","Create a new, empty script. ",2],["new","Net::SSH::Test::Socket","classes\/Net\/SSH\/Test\/Socket.html#M000271","()","Create a new test socket. This will also instantiate a new Net::SSH::Test::Script and seed it with the",2],["new","Net::SSH::Transport::Algorithms","classes\/Net\/SSH\/Transport\/Algorithms.html#M000297","(session, options={})","Instantiates a new Algorithms object, and prepares the hash of preferred algorithms based on the options",2],["new","Net::SSH::Transport::HMAC::Abstract","classes\/Net\/SSH\/Transport\/HMAC\/Abstract.html#M000320","(key=nil)","",2],["new","Net::SSH::Transport::Kex::DiffieHellmanGroup1SHA1","classes\/Net\/SSH\/Transport\/Kex\/DiffieHellmanGroup1SHA1.html#M000340","(algorithms, connection, data)","Create a new instance of the DiffieHellmanGroup1SHA1 algorithm. The data is a Hash of symbols representing",2],["new","Net::SSH::Transport::ServerVersion","classes\/Net\/SSH\/Transport\/ServerVersion.html#M000365","(socket, logger)","Instantiates a new ServerVersion and immediately (and synchronously) negotiates the SSH protocol in effect,",2],["new","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000376","(host, options={})","Instantiates a new transport layer abstraction. This will block until the initial key exchange completes,",2],["new","Net::SSH::Transport::State","classes\/Net\/SSH\/Transport\/State.html#M000375","(socket, role)","Creates a new state object, belonging to the given socket. Initializes the algorithms to \"none\". ",2],["new","Net::SSH::Version","classes\/Net\/SSH\/Version.html#M000414","(major, minor, tiny)","Create a new Version object with the given components. ",2],["new","ToplevelInstaller","classes\/ToplevelInstaller.html#M000553","(ardir_root, config)","",2],["new","ToplevelInstallerMulti","classes\/ToplevelInstallerMulti.html#M000591","(ardir_root, config)","",2],["new_shebang","Installer","classes\/Installer.html#M000655","(old)","",2],["next","Net::SSH::Test::Script","classes\/Net\/SSH\/Test\/Script.html#M000290","(mode=:shift)","By default, removes the next event in the list and returns it. However, this can also be used to non-destructively",2],["next_message","MockTransport","classes\/MockTransport.html#M000729","()","",2],["next_message","Net::SSH::Authentication::Session","classes\/Net\/SSH\/Authentication\/Session.html#M000050","()","Blocks until a packet is received. It silently handles USERAUTH_BANNER packets, and will raise an error",2],["next_message","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000391","()","Blocks until a new packet is available to be read, and returns that packet. See #poll_message. ",2],["next_packet","Net::SSH::Transport::PacketStream","classes\/Net\/SSH\/Transport\/PacketStream.html#M000367","(mode=:nonblock)","Returns the next full packet. If the mode parameter is :nonblock (the default), then this will return",2],["no_harm?","ConfigTable","classes\/ConfigTable.html#M000425","()","",2],["no_harm?","Installer","classes\/Installer.html#M000625","()","module FileOperations requires this ",2],["no_harm?","ToplevelInstallerMulti","classes\/ToplevelInstallerMulti.html#M000614","()","module FileOperations requires this ",2],["noop","Installer","classes\/Installer.html#M000620","(rel)","",2],["objdir_root","Installer","classes\/Installer.html#M000622","()","",2],["objdir_root","ToplevelInstaller","classes\/ToplevelInstaller.html#M000561","()","",2],["on_close","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000119","(&block)","Registers a callback to be invoked when the server acknowledges that a channel is closed. This is invoked",2],["on_data","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000116","(&block)","Registers a callback to be invoked when data packets are received by the channel. The callback is called",2],["on_eof","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000120","(&block)","Registers a callback to be invoked when the server indicates that no more data will be sent to the channel",2],["on_extended_data","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000117","(&block)","Registers a callback to be invoked when extended data packets are received by the channel. The callback",2],["on_global_request","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000160","(type, &block)","Registers a handler to be invoked when the server sends a global request of the given type. The callback",2],["on_open_channel","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000159","(type, &block)","Registers a handler to be invoked when the server wants to open a channel on the client. The callback",2],["on_open_failed","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000121","(&block)","Registers a callback to be invoked when the server was unable to open the requested channel. The channel",2],["on_process","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000118","(&block)","Registers a callback to be invoked for each pass of the event loop for this channel. There are no guarantees",2],["on_request","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000122","(type, &block)","Registers a callback to be invoked when a channel request of the given type is received. The callback",2],["open","Net::SSH::Authentication::Pageant::Socket","classes\/Net\/SSH\/Authentication\/Pageant\/Socket.html#M000035","(location=nil)","The factory method for creating a new Socket instance. The location parameter is ignored, and is only",2],["open","Net::SSH::Proxy::HTTP","classes\/Net\/SSH\/Proxy\/HTTP.html#M000212","(host, port)","Return a new socket connected to the given host and port via the proxy that was requested when the socket",2],["open","Net::SSH::Proxy::SOCKS4","classes\/Net\/SSH\/Proxy\/SOCKS4.html#M000215","(host, port)","Return a new socket connected to the given host and port via the proxy that was requested when the socket",2],["open","Net::SSH::Proxy::SOCKS5","classes\/Net\/SSH\/Proxy\/SOCKS5.html#M000218","(host, port)","Return a new socket connected to the given host and port via the proxy that was requested when the socket",2],["open","Net::SSH::Test::Socket","classes\/Net\/SSH\/Test\/Socket.html#M000275","(host, port)","Allows the socket to also mimic a socket factory, simply returning +self+. ",2],["open_atomic_writer","Installer","classes\/Installer.html#M000656","(path, &block)","",2],["open_channel","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000152","(type=\"session\", *extra, &on_confirm)","Requests that a new channel be opened. By default, the channel will be of type \"session\", but if you",2],["opens_channel","Net::SSH::Test::Script","classes\/Net\/SSH\/Test\/Script.html#M000270","(confirm=true)","Scripts the opening of a channel by adding a local packet sending the channel open request, and if +confirm+",2],["packages","ConfigTable::MetaConfigEnvironment","classes\/ConfigTable\/MetaConfigEnvironment.html#M000506","()","For only multipackage ",2],["packages=","ToplevelInstallerMulti","classes\/ToplevelInstallerMulti.html#M000593","(list)","",2],["parse","Installer::Shebang","classes\/Installer\/Shebang.html#M000663","(line)","",2],["parse_opt","ConfigTable","classes\/ConfigTable.html#M000459","(opt)","",2],["parsearg_clean","ToplevelInstaller","classes\/ToplevelInstaller.html#M000571","()","Alias for #parsearg_no_options",2],["parsearg_config","ToplevelInstaller","classes\/ToplevelInstaller.html#M000573","()","",2],["parsearg_distclean","ToplevelInstaller","classes\/ToplevelInstaller.html#M000572","()","Alias for #parsearg_no_options",2],["parsearg_global","ToplevelInstaller","classes\/ToplevelInstaller.html#M000563","()","Option Parsing ",2],["parsearg_install","ToplevelInstaller","classes\/ToplevelInstaller.html#M000577","()","",2],["parsearg_no_options","ToplevelInstaller","classes\/ToplevelInstaller.html#M000567","()","",2],["parsearg_setup","ToplevelInstaller","classes\/ToplevelInstaller.html#M000569","()","Alias for #parsearg_no_options",2],["parsearg_show","ToplevelInstaller","classes\/ToplevelInstaller.html#M000568","()","Alias for #parsearg_no_options",2],["parsearg_test","ToplevelInstaller","classes\/ToplevelInstaller.html#M000570","()","Alias for #parsearg_no_options",2],["path_config?","ConfigTable::MetaConfigEnvironment","classes\/ConfigTable\/MetaConfigEnvironment.html#M000499","(name)","",2],["peer","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000390","()","Returns a hash of information about the peer (remote) side of the socket, including :ip, :port, :host,",2],["peer_ip","Net::SSH::Transport::PacketStream","classes\/Net\/SSH\/Transport\/PacketStream.html#M000364","()","The IP address of the peer (remote) end of the socket, as reported by the socket. ",2],["pending?","Net::SSH::Transport::Algorithms","classes\/Net\/SSH\/Transport\/Algorithms.html#M000302","()","Returns +true+ if a key-exchange is pending. This will be true from the moment either the client or server",2],["pending_write?","Net::SSH::BufferedIo","classes\/Net\/SSH\/BufferedIo.html#M000083","()","Returns +true+ if there is data waiting in the output buffer, and +false+ otherwise. ",2],["poll_message","MockTransport","classes\/MockTransport.html#M000728","()","",2],["poll_message","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000392","(mode=:nonblock, consume_queue=true)","Tries to read the next packet from the socket. If mode is :nonblock (the default), this will not block",2],["poll_next_packet","Net::SSH::Transport::PacketStream","classes\/Net\/SSH\/Transport\/PacketStream.html#M000374","()","Tries to read the next packet. If there is insufficient data to read an entire packet, this returns immediately,",2],["port","Net::SSH::HostKeyMismatch","classes\/Net\/SSH\/HostKeyMismatch.html#M000168","()","Returns the port number for the remote host, as reported by the socket. ",2],["postprocess","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000148","(readers, writers)","This is called internally as part of #process. It loops over the given arrays of reader IO's and writer",2],["preprocess","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000142","()","This is called internally as part of #process. It dispatches any available incoming packets, and then",2],["print_usage","ToplevelInstaller","classes\/ToplevelInstaller.html#M000579","(out)","",2],["print_usage","ToplevelInstallerMulti","classes\/ToplevelInstallerMulti.html#M000599","(f)","",2],["process","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000115","()","If an #on_process handler has been set up, this will cause it to be invoked (passing the channel itself",2],["process","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000141","(wait=nil, &block)","The core of the event loop. It processes a single iteration of the event loop. If a block is given, it",2],["process","Net::SSH::Test::LocalPacket","classes\/Net\/SSH\/Test\/LocalPacket.html#M000260","(packet)","Called by Net::SSH::Test::Extensions::PacketStream#test_enqueue_packet to mimic remote processing of",2],["process","Net::SSH::Test::RemotePacket","classes\/Net\/SSH\/Test\/RemotePacket.html#M000266","(packet)","The #process method should only be called on Net::SSH::Test::LocalPacket packets; if it is attempted",2],["process","Net::SSH::Test::Script","classes\/Net\/SSH\/Test\/Script.html#M000291","(packet)","Compare the given packet against the next event in the list. If there is no next event, an exception",2],["prompt","Net::SSH::PromptMethods::Clear","classes\/Net\/SSH\/PromptMethods\/Clear.html#M000206","(prompt, echo=true)","Displays the prompt to $stdout and pulls the response from $stdin. Text is always echoed in the clear,",2],["prompt","Net::SSH::PromptMethods::Highline","classes\/Net\/SSH\/PromptMethods\/Highline.html#M000203","(prompt, echo=true)","Uses Highline#ask to present a prompt and accept input. If +echo+ is +false+, the characters entered",2],["prompt","Net::SSH::PromptMethods::Termios","classes\/Net\/SSH\/PromptMethods\/Termios.html#M000204","(prompt, echo=true)","Displays the prompt to $stdout. If +echo+ is false, the Termios library will be used to disable keystroke",2],["push","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000399","(packet)","Adds the given packet to the packet queue. If the queue is non-empty, #poll_message will return packets",2],["read","Authentication::TestAgent::MockSocket","classes\/Authentication\/TestAgent\/MockSocket.html#M000650","(length)","",2],["read","File","classes\/File.html#M000420","(fname)","",2],["read","Net::SSH::Authentication::Pageant::Socket","classes\/Net\/SSH\/Authentication\/Pageant\/Socket.html#M000042","(n = nil)","Reads +n+ bytes from the cached result of the last query. If +n+ is +nil+, returns all remaining data",2],["read","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000063","(count=nil)","Reads and returns the next +count+ bytes from the buffer, starting from the read position. If +count+",2],["read!","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000064","(count=nil)","Reads (as #read) and returns the given number of bytes from the buffer, and then consumes (as #consume!)",2],["read_available","Net::SSH::BufferedIo","classes\/Net\/SSH\/BufferedIo.html#M000076","(length=nil)","Read up to +length+ bytes from the input buffer. If +length+ is nil, all available data is read from",2],["read_bignum","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000072","()","Read a bignum (OpenSSL::BN) from the buffer, in SSH2 format. It is essentially just a string, which is",2],["read_bool","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000071","()","Read a single byte and convert it into a boolean, using 'C' rules (i.e., zero is false, non-zero is true).",2],["read_buffer","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000075","()","Reads the next string from the buffer, and returns a new Buffer object that wraps it. ",2],["read_byte","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000067","()","Read and return the next byte in the buffer. Returns nil if called at the end of the buffer. ",2],["read_int64","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000065","()","Return the next 8 bytes as a 64-bit integer (in network byte order). Returns nil if there are less than",2],["read_key","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000073","()","Read a key from the buffer. The key will start with a string describing its type. The remainder of the",2],["read_keyblob","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000074","(type)","Read a keyblob of the given type from the buffer, and return it as a key. Only RSA and DSA keys are supported.",2],["read_long","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000066","()","Return the next four bytes as a long integer (in network byte order). Returns nil if there are less than",2],["read_string","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000068","()","Read and return an SSH2-encoded string. The string starts with a long integer that describes the number",2],["read_to","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000061","(pattern)","Reads all data up to and including the given pattern, which may be a String, Fixnum, or Regexp and is",2],["recv","Net::SSH::Test::Socket","classes\/Net\/SSH\/Test\/Socket.html#M000277","(n)","Alias to #read, but never returns nil (returns an empty string instead). ",2],["register","Net::SSH::Packet","classes\/Net\/SSH\/Packet.html#M000207","(type, *pairs)","Register a new packet type that should be recognized and auto-parsed by Net::SSH::Packet. Note that any",2],["rekey!","Net::SSH::Transport::Algorithms","classes\/Net\/SSH\/Transport\/Algorithms.html#M000299","()","Request a rekey operation. This will return immediately, and does not actually perform the rekey operation.",2],["rekey!","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000388","()","Requests a rekey operation, and blocks until the operation completes. If a rekey is already pending,",2],["rekey_as_needed","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000389","()","Returns immediately if a rekey is already in process. Otherwise, if a rekey is needed (as indicated by",2],["relpath","Installer","classes\/Installer.html#M000623","()","",2],["relpath","ToplevelInstaller","classes\/ToplevelInstaller.html#M000562","()","",2],["remainder_as_buffer","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000060","()","Returns all text from the current pointer to the end of the buffer as a new Net::SSH::Buffer object.",2],["remember_host!","Net::SSH::HostKeyMismatch","classes\/Net\/SSH\/HostKeyMismatch.html#M000171","()","Tell Net::SSH to record this host and key in the known hosts file, so that subsequent connections will",2],["remote","Net::SSH::Service::Forward","classes\/Net\/SSH\/Service\/Forward.html#M000226","(port, host, remote_port, remote_host=\"127.0.0.1\")","Requests that all connections on the given remote-port be forwarded via the local host to the given port\/host.",2],["remote?","Net::SSH::Test::Packet","classes\/Net\/SSH\/Test\/Packet.html#M000262","()","The default for +remote?+ is false. Subclasses should override as necessary. ",2],["remote?","Net::SSH::Test::RemotePacket","classes\/Net\/SSH\/Test\/RemotePacket.html#M000265","()","Returns +true+; this is a remote packet. ",2],["remote_id","Net::SSH::Test::Channel","classes\/Net\/SSH\/Test\/Channel.html#M000228","()","Returns the remote (server-assigned) id for this channel, or a Proc object that will return the remote-id",2],["remote_to","Net::SSH::Service::Forward","classes\/Net\/SSH\/Service\/Forward.html#M000227","(port, host, remote_port, remote_host=\"127.0.0.1\")","Alias for #remote",2],["remove","ConfigTable","classes\/ConfigTable.html#M000433","(name)","",2],["remove_config","ConfigTable::MetaConfigEnvironment","classes\/ConfigTable\/MetaConfigEnvironment.html#M000505","(name)","",2],["remove_file","FileOperations","classes\/FileOperations.html#M000518","(path)","",2],["remove_tree","FileOperations","classes\/FileOperations.html#M000513","(path)","",2],["remove_tree0","FileOperations","classes\/FileOperations.html#M000514","(path)","",2],["request_pty","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000107","(opts={}, &block)","Requests that a pseudo-tty (or \"pty\") be made available for this channel. This is useful when you want",2],["reset","Net::SSH::Transport::IdentityCipher","classes\/Net\/SSH\/Transport\/IdentityCipher.html#M000335","()","Does nothing. Returns self. ",2],["reset!","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000053","()","Resets the pointer to the start of the buffer. Subsequent reads will begin at position 0. ",2],["reset!","Net::SSH::Transport::State","classes\/Net\/SSH\/Transport\/State.html#M000396","()","Resets the counters on the state object, but leaves the sequence_number unchanged. It also sets defaults",2],["resolve","ConfigTable::ExecItem","classes\/ConfigTable\/ExecItem.html#M000489","(table)","",2],["resolve","ConfigTable::Item","classes\/ConfigTable\/Item.html#M000471","(table)","",2],["return","Authentication::TestAgent::MockSocket","classes\/Authentication\/TestAgent\/MockSocket.html#M000644","(type, *args)","",2],["return","MockTransport","classes\/MockTransport.html#M000730","(type, *args)","",2],["rm_f","FileOperations","classes\/FileOperations.html#M000509","(path)","",2],["rm_rf","FileOperations","classes\/FileOperations.html#M000512","(path)","",2],["ruby","FileOperations","classes\/FileOperations.html#M000525","(*args)","",2],["rubyextentions","Installer","classes\/Installer.html#M000677","(dir)","",2],["run_hook","Installer","classes\/Installer.html#M000716","(id)","",2],["run_hook","ToplevelInstallerMulti","classes\/ToplevelInstallerMulti.html#M000612","(id)","",2],["run_metaconfigs","ToplevelInstaller","classes\/ToplevelInstaller.html#M000557","()","",2],["run_metaconfigs","ToplevelInstallerMulti","classes\/ToplevelInstallerMulti.html#M000592","()","",2],["save","ConfigTable","classes\/ConfigTable.html#M000437","()","",2],["savefile","ConfigTable","classes\/ConfigTable.html#M000435","()","",2],["search_for","Net::SSH::KnownHosts","classes\/Net\/SSH\/KnownHosts.html#M000189","(host, options={})","Searches all known host files (see KnownHosts.hostfiles) for all keys of the given host. Returns an array",2],["search_in","Net::SSH::KnownHosts","classes\/Net\/SSH\/KnownHosts.html#M000190","(files, host)","Search for all known keys for the given host, in every file given in the +files+ array. Returns the list",2],["select_for_read?","Net::SSH::Test::Extensions::BufferedIo","classes\/Net\/SSH\/Test\/Extensions\/BufferedIo.html#M000245","()","Returns +true+ if the position in the stream is less than the total length of the stream. ",2],["select_for_test","Net::SSH::Test::Extensions::IO::ClassMethods","classes\/Net\/SSH\/Test\/Extensions\/IO\/ClassMethods.html#M000255","(readers=nil, writers=nil, errors=nil, wait=nil)","The testing version of ::IO.select. Assumes that all readers, writers, and errors arrays are either nil,",2],["send","Authentication::TestAgent::MockSocket","classes\/Authentication\/TestAgent\/MockSocket.html#M000645","(data, flags)","",2],["send","Net::SSH::Authentication::Pageant::Socket","classes\/Net\/SSH\/Authentication\/Pageant\/Socket.html#M000038","(data, *args)","Forwards the data to #send_query, ignoring any arguments after the first. Returns 0. ",2],["send_channel_request","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000126","(request_name, *data, &callback)","Sends a new channel request with the given name. The extra +data+ parameter must either be empty, or",2],["send_data","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000108","(data)","Sends data to the channel's remote endpoint. This usually has the effect of sending the given string",2],["send_data_for_test","Net::SSH::Test::Extensions::Channel","classes\/Net\/SSH\/Test\/Extensions\/Channel.html#M000252","(data)","The testing version of Net::SSH::Connection::Channel#send_data. Calls the original implementation, and",2],["send_global_request","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000151","(type, *extra, &callback)","Send a global request of the given type. The +extra+ parameters must be even in number, and conform to",2],["send_message","Connection::TestChannel::MockConnection","classes\/Connection\/TestChannel\/MockConnection.html#M000810","(msg)","",2],["send_message","MockTransport","classes\/MockTransport.html#M000726","(message)","",2],["send_message","Net::SSH::Authentication::Methods::Abstract","classes\/Net\/SSH\/Authentication\/Methods\/Abstract.html#M000028","(msg)","Sends a message via the underlying transport layer abstraction. This will block until the message is",2],["send_message","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000155","(message)","Enqueues a message to be sent to the server as soon as the socket is available for writing. Most programs",2],["send_message","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000400","(message)","Sends the given message via the packet stream, blocking until the entire message has been sent. ",2],["send_packet","Net::SSH::Transport::PacketStream","classes\/Net\/SSH\/Transport\/PacketStream.html#M000368","(payload)","Enqueues a packet to be sent, and blocks until the entire packet is sent. ",2],["send_pending","Net::SSH::BufferedIo","classes\/Net\/SSH\/BufferedIo.html#M000084","()","Sends as much of the pending output as possible. Returns +true+ if any data was sent, and +false+ otherwise.",2],["send_query","Net::SSH::Authentication::Pageant::Socket","classes\/Net\/SSH\/Authentication\/Pageant\/Socket.html#M000039","(query)","Packages the given query string and sends it to the pageant process via the Windows messaging subsystem.",2],["sends","Net::SSH::Test::Script","classes\/Net\/SSH\/Test\/Script.html#M000273","(type, *args, &block)","A convenience method for adding an arbitrary local packet to the events list. ",2],["sends_channel_close","Net::SSH::Test::Script","classes\/Net\/SSH\/Test\/Script.html#M000281","(channel)","Scripts the sending of a channel close packet from the given Net::SSH::Test::Channel +channel+. This",2],["sends_channel_data","Net::SSH::Test::Script","classes\/Net\/SSH\/Test\/Script.html#M000279","(channel, data)","Scripts the sending of a channel data packet. +channel+ must be a Net::SSH::Test::Channel object, and",2],["sends_channel_eof","Net::SSH::Test::Script","classes\/Net\/SSH\/Test\/Script.html#M000280","(channel)","Scripts the sending of a channel EOF packet from the given Net::SSH::Test::Channel +channel+. This will",2],["sends_channel_request","Net::SSH::Test::Script","classes\/Net\/SSH\/Test\/Script.html#M000278","(channel, request, reply, data, success=true)","Scripts the sending of a new channel request packet to the remote host. +channel+ should be an instance",2],["sends_close","Net::SSH::Test::Channel","classes\/Net\/SSH\/Test\/Channel.html#M000238","()","Scripts the sending of a \"channel close\" packet across the channel. channel.sends_close ",2],["sends_data","Net::SSH::Test::Channel","classes\/Net\/SSH\/Test\/Channel.html#M000234","(data)","Scripts the sending of a data packet across the channel. channel.sends_data \"foo\" ",2],["sends_eof","Net::SSH::Test::Channel","classes\/Net\/SSH\/Test\/Channel.html#M000235","()","Scripts the sending of an EOF packet across the channel. channel.sends_eof ",2],["sends_exec","Net::SSH::Test::Channel","classes\/Net\/SSH\/Test\/Channel.html#M000232","(command, reply=true, success=true)","Scripts the sending of an \"exec\" channel request packet to the mock  server. If +reply+ is true, then",2],["sends_subsystem","Net::SSH::Test::Channel","classes\/Net\/SSH\/Test\/Channel.html#M000233","(subsystem, reply=true, success=true)","Scripts the sending of a \"subsystem\" channel request packet to the mock server. See #sends_exec for a",2],["service_request","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000383","(service)","Returns a new service_request packet for the given service name, ready for sending to the server. ",2],["session_id","Net::SSH::Authentication::Methods::Abstract","classes\/Net\/SSH\/Authentication\/Methods\/Abstract.html#M000027","()","Returns the session-id, as generated during the first key exchange of an SSH connection. ",2],["set","ConfigTable::Item","classes\/ConfigTable\/Item.html#M000472","(val)","",2],["set","Net::SSH::Transport::State","classes\/Net\/SSH\/Transport\/State.html#M000378","(values)","A convenience method for quickly setting multiple values in a single command. ",2],["set_config","HookScriptAPI","classes\/HookScriptAPI.html#M000532","(key, val)","obsolete: use metaconfig to change configuration ",2],["set_config_default","ConfigTable::MetaConfigEnvironment","classes\/ConfigTable\/MetaConfigEnvironment.html#M000504","(name, default)","",2],["setup","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000586","()","",2],["setup","Transport::Kex::TestDiffieHellmanGroup1SHA1","classes\/Transport\/Kex\/TestDiffieHellmanGroup1SHA1.html#M000952","()","",2],["setup","Transport::TestState","classes\/Transport\/TestState.html#M001140","()","",2],["setup_dir_bin","Installer","classes\/Installer.html#M000639","(rel)","",2],["setup_dir_conf","Installer","classes\/Installer.html#M000647","(rel)","Alias for #noop",2],["setup_dir_data","Installer","classes\/Installer.html#M000646","(rel)","Alias for #noop",2],["setup_dir_ext","Installer","classes\/Installer.html#M000641","(rel)","",2],["setup_dir_lib","Installer","classes\/Installer.html#M000640","(rel)","Alias for #noop",2],["setup_dir_man","Installer","classes\/Installer.html#M000648","(rel)","Alias for #noop",2],["setup_rb_error","Object","classes\/Object.html#M000721","(msg)","",2],["shutdown!","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000133","()","Performs a \"hard\" shutdown of the connection. In general, this should never be done, but it might be",2],["shutdown!","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000382","()","Performs a \"hard\" shutdown of the connection. In general, this should never be done, but it might be",2],["sign","Net::SSH::Authentication::Agent","classes\/Net\/SSH\/Authentication\/Agent.html#M000007","(key, data)","Using the agent and the given public key, sign the given data. The signature is returned in SSH2 format.",2],["sign","Net::SSH::Authentication::KeyManager","classes\/Net\/SSH\/Authentication\/KeyManager.html#M000018","(identity, data)","Sign the given data, using the corresponding private key of the given identity. If the identity was originally",2],["socket","Net::SSH::Test","classes\/Net\/SSH\/Test.html#M000287","(options={})","Returns the test socket instance to use for these tests (see Net::SSH::Test::Socket). ",2],["srcdir_root","Installer","classes\/Installer.html#M000621","()","Hook Script API base methods ",2],["srcdir_root","ToplevelInstaller","classes\/ToplevelInstaller.html#M000560","()","Hook Script API bases ",2],["srcdirectories","HookScriptAPI","classes\/HookScriptAPI.html#M000544","(path = '.')","",2],["srcdirectory?","HookScriptAPI","classes\/HookScriptAPI.html#M000540","(path)","",2],["srcentries","HookScriptAPI","classes\/HookScriptAPI.html#M000542","(path = '.')","",2],["srcexist?","HookScriptAPI","classes\/HookScriptAPI.html#M000539","(path)","",2],["srcfile","HookScriptAPI","classes\/HookScriptAPI.html#M000538","(path)","",2],["srcfile?","HookScriptAPI","classes\/HookScriptAPI.html#M000541","(path)","",2],["srcfiles","HookScriptAPI","classes\/HookScriptAPI.html#M000543","(path = '.')","",2],["ssh_do_sign","OpenSSL::PKey::DSA","classes\/OpenSSL\/PKey\/DSA.html#M000361","(data)","Signs the given data. ",2],["ssh_do_sign","OpenSSL::PKey::RSA","classes\/OpenSSL\/PKey\/RSA.html#M000355","(data)","Returns the signature for the given data. ",2],["ssh_do_verify","OpenSSL::PKey::DSA","classes\/OpenSSL\/PKey\/DSA.html#M000360","(sig, data)","Verifies the given signature matches the given data. ",2],["ssh_do_verify","OpenSSL::PKey::RSA","classes\/OpenSSL\/PKey\/RSA.html#M000354","(sig, data)","Verifies the given signature matches the given data. ",2],["ssh_type","OpenSSL::PKey::DSA","classes\/OpenSSL\/PKey\/DSA.html#M000356","()","Returns \"ssh-dss\", which is the description of this key type used by the SSH2 protocol. ",2],["ssh_type","OpenSSL::PKey::RSA","classes\/OpenSSL\/PKey\/RSA.html#M000352","()","Returns \"ssh-rsa\", which is the description of this key type used by the SSH2 protocol. ",2],["start","Net::SSH","classes\/Net\/SSH.html#M000418","(host, user, options={}, &block)","The standard means of starting a new SSH connection. When used with a block, the connection will be closed",2],["stop_listening_to","Net::SSH::Connection::Session","classes\/Net\/SSH\/Connection\/Session.html#M000157","(io)","Removes the given io object from the listeners collection, so that the event loop will no longer monitor",2],["story","Net::SSH::Test","classes\/Net\/SSH\/Test.html#M000286","()","If a block is given, yields the script for the test socket (#socket). Otherwise, simply returns the socket's",2],["subsystem","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000105","(subsystem, &block)","Syntactic sugar for requesting that a subsystem be started. Subsystems are a way for other protocols",2],["supported?","Net::SSH::Transport::CipherFactory","classes\/Net\/SSH\/Transport\/CipherFactory.html#M000293","(name)","Returns true if the underlying OpenSSL library supports the given cipher, and false otherwise. ",2],["targetfiles","Installer","classes\/Installer.html#M000678","()","",2],["teardown","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000587","()","",2],["teardown","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000737","()","",2],["teardown","Transport::TestState","classes\/Transport\/TestState.html#M001141","()","",2],["test!","Connection::TestChannel::MockConnection","classes\/Connection\/TestChannel\/MockConnection.html#M000816","()","",2],["test_1_99_server_version_should_be_acceptible","Transport::TestServerVersion","classes\/Transport\/TestServerVersion.html#M001061","()","",2],["test_2_0_server_version_should_be_acceptible","Transport::TestServerVersion","classes\/Transport\/TestServerVersion.html#M001062","()","",2],["test_3des_cbc_for_decryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001026","()","",2],["test_3des_cbc_for_encryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001025","()","",2],["test_active_should_be_false_when_channel_is_not_in_channel_list","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000797","()","",2],["test_active_should_be_true_when_channel_appears_in_channel_list","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000796","()","",2],["test_add_ensures_list_is_unique","Authentication::TestKeyManager","classes\/Authentication\/TestKeyManager.html#M000659","()","",2],["test_aes128_cbc_for_decryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001028","()","",2],["test_aes128_cbc_for_encryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001027","()","",2],["test_aes192_cbc_for_decryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001030","()","",2],["test_aes192_cbc_for_encryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001029","()","",2],["test_aes256_cbc_for_decryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001034","()","",2],["test_aes256_cbc_for_encryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001033","()","",2],["test_allow_when_not_pending_should_be_true_for_all_packets","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M001023","()","",2],["test_allow_when_pending_should_be_true_only_for_packets_valid_during_key_exchange","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M001024","()","",2],["test_allowed_packets","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M000982","()","",2],["test_append_should_append_argument_without_changing_position_and_should_return_self","TestBuffer","classes\/TestBuffer.html#M000849","()","",2],["test_assume_agent_is_available_by_default","Authentication::TestKeyManager","classes\/Authentication\/TestKeyManager.html#M000658","()","",2],["test_authenticate_should_be_false_if_given_password_is_not_accepted","Authentication::Methods::TestKeyboardInteractive","classes\/Authentication\/Methods\/TestKeyboardInteractive.html#M000511","()","",2],["test_authenticate_should_be_false_when_server_does_not_support_this_method","Authentication::Methods::TestKeyboardInteractive","classes\/Authentication\/Methods\/TestKeyboardInteractive.html#M000510","()","",2],["test_authenticate_should_be_true_if_given_password_is_accepted","Authentication::Methods::TestKeyboardInteractive","classes\/Authentication\/Methods\/TestKeyboardInteractive.html#M000516","()","",2],["test_authenticate_should_duplicate_password_as_needed_to_fill_request","Authentication::Methods::TestKeyboardInteractive","classes\/Authentication\/Methods\/TestKeyboardInteractive.html#M000519","()","",2],["test_authenticate_should_prompt_for_input_when_password_is_not_given","Authentication::Methods::TestKeyboardInteractive","classes\/Authentication\/Methods\/TestKeyboardInteractive.html#M000520","()","",2],["test_authenticate_should_raise_error_if_service_request_fails","Authentication::TestSession","classes\/Authentication\/TestSession.html#M000694","()","",2],["test_authenticate_should_return_false_if_all_auth_methods_fail","Authentication::TestSession","classes\/Authentication\/TestSession.html#M000695","()","",2],["test_authenticate_should_return_false_if_no_keys_can_authenticate","Authentication::Methods::TestHostbased","classes\/Authentication\/Methods\/TestHostbased.html#M000457","()","",2],["test_authenticate_should_return_false_if_no_keys_can_authenticate","Authentication::Methods::TestPublickey","classes\/Authentication\/Methods\/TestPublickey.html#M000550","()","",2],["test_authenticate_should_return_false_if_password_change_request_is_received","Authentication::Methods::TestPassword","classes\/Authentication\/Methods\/TestPassword.html#M000537","()","",2],["test_authenticate_should_return_false_if_signature_exchange_fails","Authentication::Methods::TestPublickey","classes\/Authentication\/Methods\/TestPublickey.html#M000551","()","",2],["test_authenticate_should_return_false_when_key_manager_has_no_keys","Authentication::Methods::TestHostbased","classes\/Authentication\/Methods\/TestHostbased.html#M000456","()","",2],["test_authenticate_should_return_false_when_key_manager_has_no_keys","Authentication::Methods::TestPublickey","classes\/Authentication\/Methods\/TestPublickey.html#M000549","()","",2],["test_authenticate_should_return_false_when_no_key_manager_has_been_set","Authentication::Methods::TestHostbased","classes\/Authentication\/Methods\/TestHostbased.html#M000455","()","",2],["test_authenticate_should_return_false_when_no_key_manager_has_been_set","Authentication::Methods::TestPublickey","classes\/Authentication\/Methods\/TestPublickey.html#M000548","()","",2],["test_authenticate_should_return_true_if_any_key_can_authenticate","Authentication::Methods::TestHostbased","classes\/Authentication\/Methods\/TestHostbased.html#M000458","()","",2],["test_authenticate_should_return_true_if_any_key_can_authenticate","Authentication::Methods::TestPublickey","classes\/Authentication\/Methods\/TestPublickey.html#M000558","()","",2],["test_authenticate_when_password_is_acceptible_should_return_true","Authentication::Methods::TestPassword","classes\/Authentication\/Methods\/TestPassword.html#M000536","()","",2],["test_authenticate_when_password_is_unacceptible_should_return_false","Authentication::Methods::TestPassword","classes\/Authentication\/Methods\/TestPassword.html#M000535","()","",2],["test_available_for_read?","Net::SSH::Test::Extensions::PacketStream","classes\/Net\/SSH\/Test\/Extensions\/PacketStream.html#M000248","()","The testing version of Net::SSH::Transport::PacketStream#available_for_read?. Returns true if there is",2],["test_available_for_read_should_return_nontrue_when_select_fails","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001083","()","",2],["test_available_for_read_should_return_nontrue_when_self_is_not_ready","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001084","()","",2],["test_available_for_read_should_return_true_when_self_is_ready","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001085","()","",2],["test_available_should_return_length_after_position_to_end_of_string","TestBuffer","classes\/TestBuffer.html#M000844","()","",2],["test_block_size_should_be_8","Transport::TestIdentityCipher","classes\/Transport\/TestIdentityCipher.html#M001052","()","",2],["test_blowfish_cbc_for_decryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001014","()","",2],["test_blowfish_cbc_for_encryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001013","()","",2],["test_cast128_cbc_for_decryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001021","()","",2],["test_cast128_cbc_for_encryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001020","()","",2],["test_channel_close_packet_should_be_routed_to_corresponding_channel_and_channel_should_be_closed_and_removed","Connection::TestSession","classes\/Connection\/TestSession.html#M000846","()","",2],["test_channel_data_packet_should_be_routed_to_corresponding_channel","Connection::TestSession","classes\/Connection\/TestSession.html#M000834","()","",2],["test_channel_eof_packet_should_be_routed_to_corresponding_channel","Connection::TestSession","classes\/Connection\/TestSession.html#M000840","()","",2],["test_channel_extended_data_packet_should_be_routed_to_corresponding_channel","Connection::TestSession","classes\/Connection\/TestSession.html#M000839","()","",2],["test_channel_failure_packet_should_be_routed_to_corresponding_channel","Connection::TestSession","classes\/Connection\/TestSession.html#M000842","()","",2],["test_channel_open_confirmation_packet_should_be_routed_to_corresponding_channel","Connection::TestSession","classes\/Connection\/TestSession.html#M000823","()","",2],["test_channel_open_failure_should_remove_channel_and_tell_channel_that_open_failed","Connection::TestSession","classes\/Connection\/TestSession.html#M000822","()","",2],["test_channel_open_packet_with_corresponding_handler_should_result_in_channel_open_confirmation_when_handler_succeeds","Connection::TestSession","classes\/Connection\/TestSession.html#M000821","()","",2],["test_channel_open_packet_with_corresponding_handler_should_result_in_channel_open_failure_when_handler_returns_an_error","Connection::TestSession","classes\/Connection\/TestSession.html#M000820","()","",2],["test_channel_open_packet_without_corresponding_channel_open_handler_should_result_in_channel_open_failure","Connection::TestSession","classes\/Connection\/TestSession.html#M000819","()","",2],["test_channel_properties","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000739","()","",2],["test_channel_request_for_nonexistant_channel_should_be_ignored","Connection::TestSession","classes\/Connection\/TestSession.html#M000832","()","",2],["test_channel_request_packet_should_be_routed_to_corresponding_channel","Connection::TestSession","classes\/Connection\/TestSession.html#M000833","()","",2],["test_channel_success_packet_should_be_routed_to_corresponding_channel","Connection::TestSession","classes\/Connection\/TestSession.html#M000841","()","",2],["test_channel_window_adjust_packet_should_be_routed_to_corresponding_channel","Connection::TestSession","classes\/Connection\/TestSession.html#M000824","()","",2],["test_cleanup_should_delegate_cleanup_to_client_and_server_states","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001086","()","",2],["test_clear_bang_should_reset_buffer_contents_and_counters","TestBuffer","classes\/TestBuffer.html#M000845","()","",2],["test_client_name_when_getnameinfo_and_gethostbyname_all_fail","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001077","()","",2],["test_client_name_when_getnameinfo_fails_but_gethostbyname_works","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001071","()","",2],["test_client_name_when_getnameinfo_fails_first_and_then_works","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001069","()","",2],["test_client_name_when_getnameinfo_works","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001068","()","",2],["test_close_before_channel_has_been_confirmed_should_do_nothing","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000746","()","",2],["test_close_should_cleanup_and_close_socket","Transport::TestSession","classes\/Transport\/TestSession.html#M001088","()","",2],["test_close_should_close_socket","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000616","()","",2],["test_close_should_set_closing_and_send_message","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000747","()","",2],["test_close_while_closing_should_do_nothing","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000748","()","",2],["test_compress_when_compression_is_delayed_and_auth_hint_is_set_should_return_compressed_text","Transport::TestState","classes\/Transport\/TestState.html#M001159","()","",2],["test_compress_when_compression_is_delayed_and_no_auth_hint_is_set_should_return_text","Transport::TestState","classes\/Transport\/TestState.html#M001155","()","",2],["test_compress_when_compression_is_enabled_should_return_compressed_text","Transport::TestState","classes\/Transport\/TestState.html#M001157","()","",2],["test_compress_when_no_compression_is_active_returns_text","Transport::TestState","classes\/Transport\/TestState.html#M001153","()","",2],["test_compressor_defaults_to_default_zlib_compression","Transport::TestState","classes\/Transport\/TestState.html#M001151","()","",2],["test_compressor_uses_compression_level_when_given","Transport::TestState","classes\/Transport\/TestState.html#M001152","()","",2],["test_configure_client_should_pass_options_to_socket_client_state","Transport::TestSession","classes\/Transport\/TestSession.html#M001131","()","",2],["test_configure_server_should_pass_options_to_socket_server_state","Transport::TestSession","classes\/Transport\/TestSession.html#M001132","()","",2],["test_connect_should_raise_error_if_connection_could_not_be_established","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000589","()","",2],["test_connect_should_use_agent_factory_to_determine_connection_type","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000588","()","",2],["test_constructor_defaults","Transport::TestSession","classes\/Transport\/TestSession.html#M001072","()","",2],["test_constructor_should_build_default_list_of_preferred_algorithms","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M000983","()","",2],["test_constructor_should_honor_options","Authentication::Methods::TestAbstract","classes\/Authentication\/Methods\/TestAbstract.html#M000445","()","",2],["test_constructor_should_initialize_all_values","Transport::TestState","classes\/Transport\/TestState.html#M001142","()","",2],["test_constructor_should_initialize_buffer_to_empty_by_default","TestBuffer","classes\/TestBuffer.html#M000825","()","",2],["test_constructor_should_set_client_and_server_prefs_identically","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M000984","()","",2],["test_constructor_should_set_defaults","Authentication::Methods::TestAbstract","classes\/Authentication\/Methods\/TestAbstract.html#M000444","()","",2],["test_constructor_should_set_defaults","Authentication::TestSession","classes\/Authentication\/TestSession.html#M000693","()","",2],["test_constructor_should_set_defaults","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000738","()","",2],["test_constructor_should_set_defaults","Connection::TestSession","classes\/Connection\/TestSession.html#M000765","()","",2],["test_constructor_with_general_preferred_compression_should_put_none_last","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M001006","()","",2],["test_constructor_with_known_hosts_reporting_known_host_key_should_use_that_host_key_type","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M000986","()","",2],["test_constructor_with_multiple_preferred_compression_should_put_all_preferred_compression_first","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M001005","()","",2],["test_constructor_with_multiple_preferred_encryption_should_put_all_preferred_encryption_first","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M000991","()","",2],["test_constructor_with_multiple_preferred_hmac_should_put_all_preferred_hmac_first","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M000996","()","",2],["test_constructor_with_preferred_compression_should_put_preferred_compression_first","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M001004","()","",2],["test_constructor_with_preferred_encryption_should_put_preferred_encryption_first","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M000990","()","",2],["test_constructor_with_preferred_hmac_should_put_preferred_hmac_first","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M000995","()","",2],["test_constructor_with_preferred_host_key_type_should_put_preferred_host_key_type_first","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M000985","()","",2],["test_constructor_with_preferred_kex_should_put_preferred_kex_first","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M000988","()","",2],["test_constructor_with_string_should_initialize_buffer_to_the_string","TestBuffer","classes\/TestBuffer.html#M000826","()","",2],["test_constructor_with_unrecognized_compression_should_raise_exception","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M001007","()","",2],["test_constructor_with_unrecognized_encryption_should_raise_exception","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M000992","()","",2],["test_constructor_with_unrecognized_hmac_should_raise_exception","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M000997","()","",2],["test_constructor_with_unrecognized_host_key_type_should_raise_exception","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M000987","()","",2],["test_constructor_with_unrecognized_kex_should_raise_exception","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M000989","()","",2],["test_consume_with_argument_should_resize_buffer_starting_at_n","TestBuffer","classes\/TestBuffer.html#M000838","()","",2],["test_consume_without_argument_should_resize_buffer_to_start_at_position","TestBuffer","classes\/TestBuffer.html#M000837","()","",2],["test_decompress_when_compression_is_delayed_and_auth_hint_is_set_should_return_decompressed_text","Transport::TestState","classes\/Transport\/TestState.html#M001160","()","",2],["test_decompress_when_compression_is_delayed_and_no_auth_hint_is_set_should_return_text","Transport::TestState","classes\/Transport\/TestState.html#M001156","()","",2],["test_decompress_when_compression_is_enabled_should_return_decompressed_text","Transport::TestState","classes\/Transport\/TestState.html#M001158","()","",2],["test_decompress_when_no_compression_is_active_returns_text","Transport::TestState","classes\/Transport\/TestState.html#M001154","()","",2],["test_decrypt_should_return_self","Transport::TestIdentityCipher","classes\/Transport\/TestIdentityCipher.html#M001054","()","",2],["test_do_data_should_update_local_window_size","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000786","()","",2],["test_do_data_when_local_window_size_drops_below_threshold_should_trigger_WINDOW_ADJUST_message","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000790","()","",2],["test_do_extended_data_should_update_local_window_size","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000789","()","",2],["test_do_failure_should_grab_next_pending_request_and_call_it","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000794","()","",2],["test_do_open_confirmation_should_call_open_confirmation_callback","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000778","()","",2],["test_do_open_confirmation_should_set_remote_parameters","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000777","()","",2],["test_do_open_confirmation_with_non_session_channel_should_not_invoke_agent_forwarding_even_if_agent_forwarding_requested","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000782","()","",2],["test_do_open_confirmation_with_session_channel_should_invoke_agent_forwarding_if_agent_forwarding_requested","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000781","()","",2],["test_do_request_for_handled_request_should_invoke_callback_and_do_nothing_if_fails_and_not_wants_reply","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000764","()","",2],["test_do_request_for_handled_request_should_invoke_callback_and_do_nothing_if_returns_true_and_not_wants_reply","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000763","()","",2],["test_do_request_for_handled_request_should_invoke_callback_and_send_CHANNEL_FAILURE_if_returns_false_and_wants_reply","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000769","()","",2],["test_do_request_for_handled_request_should_invoke_callback_and_send_CHANNEL_SUCCESS_if_returns_true_and_wants_reply","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000768","()","",2],["test_do_request_for_unhandled_request_should_do_nothing_if_not_wants_reply","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000761","()","",2],["test_do_request_for_unhandled_request_should_send_CHANNEL_FAILURE_if_wants_reply","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000762","()","",2],["test_do_success_should_grab_next_pending_request_and_call_it","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000795","()","",2],["test_do_window_adjust_should_adjust_remote_window_size_by_the_given_amount","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000783","()","",2],["test_each_identity_should_load_from_key_files","Authentication::TestKeyManager","classes\/Authentication\/TestKeyManager.html#M000661","()","",2],["test_encrypt_should_return_self","Transport::TestIdentityCipher","classes\/Transport\/TestIdentityCipher.html#M001053","()","",2],["test_enqueue_message_should_delegate_to_socket","Transport::TestSession","classes\/Transport\/TestSession.html#M001130","()","",2],["test_enqueue_packet","Net::SSH::Test::Extensions::PacketStream","classes\/Net\/SSH\/Test\/Extensions\/PacketStream.html#M000249","(payload)","The testing version of Net::SSH::Transport::PacketStream#enqueued_packet. Simply calls Net::SSH::Test::Script#process",2],["test_enqueue_pending_output_should_have_no_effect_if_channel_has_not_been_confirmed","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000751","()","",2],["test_enqueue_pending_output_should_have_no_effect_if_there_is_no_output","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000752","()","",2],["test_enqueue_pending_output_should_not_enqueue_more_than_max_packet_length_at_once","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000754","()","",2],["test_enqueue_pending_output_should_not_enqueue_more_than_max_window_size","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000755","()","",2],["test_enqueue_pending_output_should_not_enqueue_more_than_output_length","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000753","()","",2],["test_enqueue_short_packet_should_ensure_packet_is_at_least_16_bytes_long","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001116","()","",2],["test_enqueue_should_not_write_to_underlying_io","TestBufferedIo","classes\/TestBufferedIo.html#M000904","()","",2],["test_eof_bang_should_not_send_eof_if_eof_was_already_declared","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000803","()","",2],["test_eof_bang_should_send_eof_to_server","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000802","()","",2],["test_eof_q_should_return_true_if_eof_declared","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000804","()","",2],["test_exchange_keys_should_pass_expected_parameters_to_host_key_verifier","Transport::Kex::TestDiffieHellmanGroup1SHA1","classes\/Transport\/Kex\/TestDiffieHellmanGroup1SHA1.html#M000958","()","",2],["test_exchange_keys_should_return_expected_results_when_successful","Transport::Kex::TestDiffieHellmanGroup1SHA1","classes\/Transport\/Kex\/TestDiffieHellmanGroup1SHA1.html#M000953","()","",2],["test_exchange_keys_when_server_signature_could_not_be_verified_should_raise_exception","Transport::Kex::TestDiffieHellmanGroup1SHA1","classes\/Transport\/Kex\/TestDiffieHellmanGroup1SHA1.html#M000957","()","",2],["test_exchange_keys_with_host_key_type_mismatch_should_raise_exception","Transport::Kex::TestDiffieHellmanGroup1SHA1","classes\/Transport\/Kex\/TestDiffieHellmanGroup1SHA1.html#M000956","()","",2],["test_exchange_keys_with_signature_key_type_mismatch_should_raise_exception","Transport::Kex::TestDiffieHellmanGroup1SHA1","classes\/Transport\/Kex\/TestDiffieHellmanGroup1SHA1.html#M000955","()","",2],["test_exchange_keys_with_unverifiable_host_should_raise_exception","Transport::Kex::TestDiffieHellmanGroup1SHA1","classes\/Transport\/Kex\/TestDiffieHellmanGroup1SHA1.html#M000954","()","",2],["test_exchange_with_fewer_than_maximum_bits_uses_need_bits","Transport::Kex::TestDiffieHellmanGroupExchangeSHA1","classes\/Transport\/Kex\/TestDiffieHellmanGroupExchangeSHA1.html#M000966","()","",2],["test_exchange_with_fewer_than_minimum_bits_uses_minimum_bits","Transport::Kex::TestDiffieHellmanGroupExchangeSHA1","classes\/Transport\/Kex\/TestDiffieHellmanGroupExchangeSHA1.html#M000965","()","",2],["test_exchange_with_more_than_maximum_bits_uses_maximum_bits","Transport::Kex::TestDiffieHellmanGroupExchangeSHA1","classes\/Transport\/Kex\/TestDiffieHellmanGroupExchangeSHA1.html#M000967","()","",2],["test_exchange_with_zlib_at_openssh_dot_com_compression_enabled_sets_compression_to_delayed","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M001032","()","",2],["test_exchange_with_zlib_compression_enabled_sets_compression_to_standard","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M001031","()","",2],["test_exec_bang_should_block_until_command_finishes","Connection::TestSession","classes\/Connection\/TestSession.html#M000881","()","",2],["test_exec_bang_without_block_should_return_data_as_string","Connection::TestSession","classes\/Connection\/TestSession.html#M000886","()","",2],["test_exec_should_be_syntactic_sugar_for_a_channel_request","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000740","()","",2],["test_exec_should_open_channel_and_configure_default_callbacks","Connection::TestSession","classes\/Connection\/TestSession.html#M000877","()","",2],["test_exec_without_block_should_use_print_to_display_result","Connection::TestSession","classes\/Connection\/TestSession.html#M000880","()","",2],["test_expect_message_should_raise_exception_if_next_packet_is_not_expected_type","Authentication::TestSession","classes\/Authentication\/TestSession.html#M000717","()","",2],["test_expect_message_should_return_packet_if_next_packet_is_expected_type","Authentication::TestSession","classes\/Authentication\/TestSession.html#M000718","()","",2],["test_expected_digest","Transport::HMAC::TestMD5","classes\/Transport\/HMAC\/TestMD5.html#M000933","()","",2],["test_expected_digest","Transport::HMAC::TestMD5_96","classes\/Transport\/HMAC\/TestMD5_96.html#M000937","()","",2],["test_expected_digest","Transport::HMAC::TestNone","classes\/Transport\/HMAC\/TestNone.html#M000947","()","",2],["test_expected_digest","Transport::HMAC::TestSHA1","classes\/Transport\/HMAC\/TestSHA1.html#M000942","()","",2],["test_expected_digest","Transport::HMAC::TestSHA1_96","classes\/Transport\/HMAC\/TestSHA1_96.html#M000950","()","",2],["test_expected_digest_class","Transport::HMAC::TestMD5","classes\/Transport\/HMAC\/TestMD5.html#M000930","()","",2],["test_expected_digest_class","Transport::HMAC::TestNone","classes\/Transport\/HMAC\/TestNone.html#M000944","()","",2],["test_expected_digest_class","Transport::HMAC::TestSHA1","classes\/Transport\/HMAC\/TestSHA1.html#M000939","()","",2],["test_expected_key_length","Transport::HMAC::TestMD5","classes\/Transport\/HMAC\/TestMD5.html#M000931","()","",2],["test_expected_key_length","Transport::HMAC::TestNone","classes\/Transport\/HMAC\/TestNone.html#M000945","()","",2],["test_expected_key_length","Transport::HMAC::TestSHA1","classes\/Transport\/HMAC\/TestSHA1.html#M000940","()","",2],["test_expected_mac_length","Transport::HMAC::TestMD5","classes\/Transport\/HMAC\/TestMD5.html#M000932","()","",2],["test_expected_mac_length","Transport::HMAC::TestMD5_96","classes\/Transport\/HMAC\/TestMD5_96.html#M000936","()","",2],["test_expected_mac_length","Transport::HMAC::TestNone","classes\/Transport\/HMAC\/TestNone.html#M000946","()","",2],["test_expected_mac_length","Transport::HMAC::TestSHA1","classes\/Transport\/HMAC\/TestSHA1.html#M000941","()","",2],["test_expected_mac_length","Transport::HMAC::TestSHA1_96","classes\/Transport\/HMAC\/TestSHA1_96.html#M000949","()","",2],["test_fill_should_pull_from_underlying_io","TestBufferedIo","classes\/TestBufferedIo.html#M000903","()","",2],["test_final_should_return_empty_string","Transport::TestIdentityCipher","classes\/Transport\/TestIdentityCipher.html#M001056","()","",2],["test_for_should_load_all_files_and_translate_to_net_ssh_options","TestConfig","classes\/TestConfig.html#M000918","()","",2],["test_forward_should_create_and_cache_instance_of_forward_service","Connection::TestSession","classes\/Connection\/TestSession.html#M000767","()","",2],["test_from_should_build_new_buffer_from_definition","TestBuffer","classes\/TestBuffer.html#M000828","()","",2],["test_from_should_require_an_even_number_of_arguments","TestBuffer","classes\/TestBuffer.html#M000827","()","",2],["test_from_with_array_argument_should_write_multiple_of_the_given_type","TestBuffer","classes\/TestBuffer.html#M000829","()","",2],["test_get_with_unrecognized_hmac_raises_argument_error","Transport::TestHMAC","classes\/Transport\/TestHMAC.html#M001048","()","",2],["test_global_request_handler_returning_false_should_trigger_failure_auto_reply","Connection::TestSession","classes\/Connection\/TestSession.html#M000805","()","",2],["test_global_request_handler_returning_other_value_should_raise_error","Connection::TestSession","classes\/Connection\/TestSession.html#M000811","()","",2],["test_global_request_handler_returning_sent_should_not_trigger_auto_reply","Connection::TestSession","classes\/Connection\/TestSession.html#M000806","()","",2],["test_global_request_handler_returning_true_should_trigger_success_auto_reply","Connection::TestSession","classes\/Connection\/TestSession.html#M000801","()","",2],["test_global_request_handler_should_not_trigger_auto_reply_if_no_reply_is_wanted","Connection::TestSession","classes\/Connection\/TestSession.html#M000800","()","",2],["test_global_request_packets_should_be_auto_replied_to_even_if_no_handler_exists","Connection::TestSession","classes\/Connection\/TestSession.html#M000799","()","",2],["test_global_request_packets_should_be_silently_handled_if_no_handler_exists_for_them","Connection::TestSession","classes\/Connection\/TestSession.html#M000793","()","",2],["test_header_lines_should_be_accumulated","Transport::TestServerVersion","classes\/Transport\/TestServerVersion.html#M001065","()","",2],["test_hint_should_set_hint_on_socket","Transport::TestSession","classes\/Transport\/TestSession.html#M001133","()","",2],["test_host_as_string_should_return_host_and_ip_when_port_is_default","Transport::TestSession","classes\/Transport\/TestSession.html#M001080","()","",2],["test_host_as_string_should_return_host_and_ip_with_port_when_port_is_not_default","Transport::TestSession","classes\/Transport\/TestSession.html#M001081","()","",2],["test_host_as_string_should_return_only_host_and_port_when_host_is_ip_and_port_is_not_default","Transport::TestSession","classes\/Transport\/TestSession.html#M001087","()","",2],["test_host_as_string_should_return_only_host_when_host_is_ip","Transport::TestSession","classes\/Transport\/TestSession.html#M001082","()","",2],["test_idea_cbc_for_decryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001017","()","",2],["test_idea_cbc_for_encryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001015","()","",2],["test_identities_should_augment_identities_with_comment_field","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000611","()","",2],["test_identities_should_fail_if_SSH2_AGENT_FAILURE_recieved","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000601","()","",2],["test_identities_should_fail_if_SSH_AGENT_FAILURE_recieved","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000600","()","",2],["test_identities_should_fail_if_SSH_COM_AGENT2_FAILURE_recieved","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000602","()","",2],["test_identities_should_fail_if_response_is_not_SSH2_AGENT_IDENTITIES_ANSWER","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000607","()","",2],["test_identities_should_load_from_agent","Authentication::TestKeyManager","classes\/Authentication\/TestKeyManager.html#M000667","()","",2],["test_if_needs_rekey_should_not_yield_if_neither_client_nor_server_states_need_rekey","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001092","()","",2],["test_if_needs_rekey_should_yield_and_cleanup_if_both_need_rekey","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001098","()","",2],["test_if_needs_rekey_should_yield_and_cleanup_if_client_needs_rekey","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001093","()","",2],["test_if_needs_rekey_should_yield_and_cleanup_if_server_needs_rekey","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001094","()","",2],["test_increment_should_increment_counters","Transport::TestState","classes\/Transport\/TestState.html#M001145","()","",2],["test_initial_state_should_be_neither_pending_nor_initialized","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M001008","()","",2],["test_key_exchange_when_initiated_by_client","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M001010","()","",2],["test_key_exchange_when_initiated_by_server","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M001009","()","",2],["test_key_exchange_when_server_does_not_support_any_preferred_kex_should_raise_error","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M001022","()","",2],["test_key_exchange_when_server_does_not_support_preferred_kex_should_fallback_to_secondary","Transport::TestAlgorithms","classes\/Transport\/TestAlgorithms.html#M001016","()","",2],["test_key_files_and_known_identities_are_empty_by_default","Authentication::TestKeyManager","classes\/Authentication\/TestKeyManager.html#M000657","()","",2],["test_key_length_with_unrecognized_hmac_raises_argument_error","Transport::TestHMAC","classes\/Transport\/TestHMAC.html#M001049","()","",2],["test_key_should_be_truncated_to_required_length","Transport::HMAC::TestMD5","classes\/Transport\/HMAC\/TestMD5.html#M000934","()","",2],["test_lengths_for_3des_cbc","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001002","()","",2],["test_lengths_for_aes128_cbc","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001011","()","",2],["test_lengths_for_aes192_cbc","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001003","()","",2],["test_lengths_for_aes256_cbc","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001012","()","",2],["test_lengths_for_blowfish_cbc","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M000998","()","",2],["test_lengths_for_cast128_cbc","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001001","()","",2],["test_lengths_for_idea_cbc","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M000999","()","",2],["test_lengths_for_none","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M000994","()","",2],["test_lengths_for_rijndael_cbc","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001000","()","",2],["test_listen_to_should_add_argument_to_listeners_list_if_block_is_given","Connection::TestSession","classes\/Connection\/TestSession.html#M000771","()","",2],["test_listen_to_without_callback_should_add_argument_as_listener","Connection::TestSession","classes\/Connection\/TestSession.html#M000770","()","",2],["test_load_encrypted_private_DSA_key_should_prompt_for_password_and_return_key","TestKeyFactory","classes\/TestKeyFactory.html#M000919","()","",2],["test_load_encrypted_private_DSA_key_with_password_should_not_prompt_and_return_key","TestKeyFactory","classes\/TestKeyFactory.html#M000920","()","",2],["test_load_encrypted_private_RSA_key_should_prompt_for_password_and_return_key","TestKeyFactory","classes\/TestKeyFactory.html#M000916","()","",2],["test_load_encrypted_private_RSA_key_with_password_should_not_prompt_and_return_key","TestKeyFactory","classes\/TestKeyFactory.html#M000917","()","",2],["test_load_encrypted_private_key_should_give_three_tries_for_the_password_and_then_raise_exception","TestKeyFactory","classes\/TestKeyFactory.html#M000923","()","",2],["test_load_for_non_existant_file_should_return_empty_hash","TestConfig","classes\/TestConfig.html#M000910","()","",2],["test_load_public_rsa_key_should_return_key","TestKeyFactory","classes\/TestKeyFactory.html#M000924","()","",2],["test_load_should_expand_path","TestConfig","classes\/TestConfig.html#M000911","()","",2],["test_load_should_parse_equal_sign_delimiters","TestConfig","classes\/TestConfig.html#M000921","()","",2],["test_load_unencrypted_private_DSA_key_should_return_key","TestKeyFactory","classes\/TestKeyFactory.html#M000915","()","",2],["test_load_unencrypted_private_RSA_key_should_return_key","TestKeyFactory","classes\/TestKeyFactory.html#M000914","()","",2],["test_load_with_exact_host_match_should_load_that_section","TestConfig","classes\/TestConfig.html#M000912","()","",2],["test_load_with_wild_card_matches_should_load_all_matches_with_first_match_taking_precedence","TestConfig","classes\/TestConfig.html#M000913","()","",2],["test_loop_should_call_process_until_process_returns_false","Connection::TestSession","classes\/Connection\/TestSession.html#M000872","()","",2],["test_multiple_pending_dispatches_should_be_dispatched_together","Connection::TestSession","classes\/Connection\/TestSession.html#M000847","()","",2],["test_name_should_be_identity","Transport::TestIdentityCipher","classes\/Transport\/TestIdentityCipher.html#M001057","()","",2],["test_needs_rekey_should_be_true_if_blocks_exceeds_max_blocks","Transport::TestState","classes\/Transport\/TestState.html#M001162","()","",2],["test_needs_rekey_should_be_true_if_packets_exceeds_max_packets","Transport::TestState","classes\/Transport\/TestState.html#M001161","()","",2],["test_negotiate_should_be_successful_with_expected_response","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000597","()","",2],["test_negotiate_should_raise_error_if_response_was_unexpected","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000596","()","",2],["test_negotiate_should_raise_error_if_ssh2_agent_response_recieved","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000595","()","",2],["test_next_message_should_block_until_next_message_is_available","Transport::TestSession","classes\/Transport\/TestSession.html#M001105","()","",2],["test_next_message_should_raise_error_on_unrecognized_packet_types","Authentication::TestSession","classes\/Authentication\/TestSession.html#M000715","()","",2],["test_next_message_should_silently_handle_USERAUTH_BANNER_packets","Authentication::TestSession","classes\/Authentication\/TestSession.html#M000710","()","",2],["test_next_message_should_understand_USERAUTH_FAILURE","Authentication::TestSession","classes\/Authentication\/TestSession.html#M000713","()","",2],["test_next_message_should_understand_USERAUTH_SUCCESS","Authentication::TestSession","classes\/Authentication\/TestSession.html#M000714","()","",2],["test_next_packet_fails_with_invalid_argument","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001114","()","",2],["test_next_packet_should_block_when_requested_until_entire_packet_is_available","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001109","()","",2],["test_next_packet_should_eventually_return_packet_when_non_blocking_and_partial_read","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001104","()","",2],["test_next_packet_should_not_block_by_default","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001099","()","",2],["test_next_packet_should_return_nil_when_non_blocking_and_not_ready","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001100","()","",2],["test_next_packet_should_return_nil_when_non_blocking_and_partial_read","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001102","()","",2],["test_next_packet_should_return_packet_when_non_blocking_and_full_read","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001103","()","",2],["test_next_packet_when_blocking_should_fail_when_fill_could_not_read_any_data","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001110","()","",2],["test_none_for_decryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001036","()","",2],["test_none_for_encryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001035","()","",2],["test_on_close_with_block_should_set_callback","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000759","()","",2],["test_on_data_with_block_should_set_callback","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000756","()","",2],["test_on_eof_with_block_should_set_callback","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000760","()","",2],["test_on_extended_data_with_block_should_set_callback","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000757","()","",2],["test_on_open_channel_should_register_block_with_given_channel_type","Connection::TestSession","classes\/Connection\/TestSession.html#M000766","()","",2],["test_on_process_with_block_should_set_callback","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000758","()","",2],["test_open_channel_defaults_should_use_session_channel","Connection::TestSession","classes\/Connection\/TestSession.html#M000776","()","",2],["test_open_channel_with_extras_should_append_extras_to_packet","Connection::TestSession","classes\/Connection\/TestSession.html#M000780","()","",2],["test_open_channel_with_type_should_use_type","Connection::TestSession","classes\/Connection\/TestSession.html#M000779","()","",2],["test_paranoid_false_uses_null_verifier","Transport::TestSession","classes\/Transport\/TestSession.html#M001075","()","",2],["test_paranoid_true_uses_lenient_verifier","Transport::TestSession","classes\/Transport\/TestSession.html#M001073","()","",2],["test_paranoid_value_responding_to_verify_should_pass_muster","Transport::TestSession","classes\/Transport\/TestSession.html#M001079","()","",2],["test_paranoid_very_uses_strict_verifier","Transport::TestSession","classes\/Transport\/TestSession.html#M001074","()","",2],["test_peer_ip_should_query_socket_for_info_about_peer","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001078","()","",2],["test_peer_should_return_hash_of_info_about_peer","Transport::TestSession","classes\/Transport\/TestSession.html#M001101","()","",2],["test_poll_message_should_default_to_non_blocking","Transport::TestSession","classes\/Transport\/TestSession.html#M001107","()","",2],["test_poll_message_should_enqueue_packets_when_algorithm_disallows_packet","Transport::TestSession","classes\/Transport\/TestSession.html#M001120","()","",2],["test_poll_message_should_not_read_from_queue_when_consume_queue_is_false","Transport::TestSession","classes\/Transport\/TestSession.html#M001123","()","",2],["test_poll_message_should_not_read_from_queue_when_next_in_queue_is_not_allowed","Transport::TestSession","classes\/Transport\/TestSession.html#M001122","()","",2],["test_poll_message_should_query_next_packet_using_the_given_blocking_parameter","Transport::TestSession","classes\/Transport\/TestSession.html#M001106","()","",2],["test_poll_message_should_read_from_queue_when_next_in_queue_is_allowed_and_consume_queue_is_true","Transport::TestSession","classes\/Transport\/TestSession.html#M001121","()","",2],["test_poll_message_should_return_other_packets","Transport::TestSession","classes\/Transport\/TestSession.html#M001119","()","",2],["test_poll_message_should_silently_handle_debug_packets_with_always_display","Transport::TestSession","classes\/Transport\/TestSession.html#M001113","()","",2],["test_poll_message_should_silently_handle_debug_packets_without_always_display","Transport::TestSession","classes\/Transport\/TestSession.html#M001117","()","",2],["test_poll_message_should_silently_handle_disconnect_packets","Transport::TestSession","classes\/Transport\/TestSession.html#M001108","()","",2],["test_poll_message_should_silently_handle_ignore_packets","Transport::TestSession","classes\/Transport\/TestSession.html#M001111","()","",2],["test_poll_message_should_silently_handle_kexinit_packets","Transport::TestSession","classes\/Transport\/TestSession.html#M001118","()","",2],["test_poll_message_should_silently_handle_unimplemented_packets","Transport::TestSession","classes\/Transport\/TestSession.html#M001112","()","",2],["test_poll_next_packet","Net::SSH::Test::Extensions::PacketStream","classes\/Net\/SSH\/Test\/Extensions\/PacketStream.html#M000250","()","The testing version of Net::SSH::Transport::PacketStream#poll_next_packet. Reads the next available packet",2],["test_process_should_call_rekey_as_needed","Connection::TestSession","classes\/Connection\/TestSession.html#M000871","()","",2],["test_process_should_exit_after_processing_if_block_is_true_then_false","Connection::TestSession","classes\/Connection\/TestSession.html#M000791","()","",2],["test_process_should_exit_immediately_if_block_is_false","Connection::TestSession","classes\/Connection\/TestSession.html#M000788","()","",2],["test_process_should_not_process_channels_that_are_closing","Connection::TestSession","classes\/Connection\/TestSession.html#M000792","()","",2],["test_process_when_process_callback_is_not_set_should_just_enqueue_data","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000749","()","",2],["test_process_when_process_callback_is_set_should_yield_self_before_enqueuing_data","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000750","()","",2],["test_push_should_enqueue_packet","Transport::TestSession","classes\/Transport\/TestSession.html#M001128","()","",2],["test_read_at_eof_should_return_empty_string","TestBuffer","classes\/TestBuffer.html#M000836","()","",2],["test_read_bang_should_read_and_consume_and_return_read_portion","TestBuffer","classes\/TestBuffer.html#M000843","()","",2],["test_read_bignum_should_read_openssl_formatted_bignum","TestBuffer","classes\/TestBuffer.html#M000866","()","",2],["test_read_bignum_should_return_nil_if_length_cannot_be_read","TestBuffer","classes\/TestBuffer.html#M000867","()","",2],["test_read_bool_should_return_false_if_zero_byte_is_read","TestBuffer","classes\/TestBuffer.html#M000864","()","",2],["test_read_bool_should_return_nil_at_eof","TestBuffer","classes\/TestBuffer.html#M000865","()","",2],["test_read_bool_should_return_true_if_non_zero_byte_is_read","TestBuffer","classes\/TestBuffer.html#M000863","()","",2],["test_read_buffer_should_read_a_string_and_return_it_wrapped_in_a_buffer","TestBuffer","classes\/TestBuffer.html#M000875","()","",2],["test_read_byte_should_return_nil_at_eof","TestBuffer","classes\/TestBuffer.html#M000858","()","",2],["test_read_byte_should_return_single_byte_integer","TestBuffer","classes\/TestBuffer.html#M000857","()","",2],["test_read_int64_should_return_8_byte_integer","TestBuffer","classes\/TestBuffer.html#M000851","()","",2],["test_read_int64_should_return_nil_on_partial_read","TestBuffer","classes\/TestBuffer.html#M000854","()","",2],["test_read_key_blob_should_read_dsa_keys","TestBuffer","classes\/TestBuffer.html#M000868","()","",2],["test_read_key_blob_should_read_rsa_keys","TestBuffer","classes\/TestBuffer.html#M000869","()","",2],["test_read_key_should_read_dsa_key_type_and_keyblob","TestBuffer","classes\/TestBuffer.html#M000873","()","",2],["test_read_key_should_read_rsa_key_type_and_keyblob","TestBuffer","classes\/TestBuffer.html#M000874","()","",2],["test_read_long_should_return_4_byte_integer","TestBuffer","classes\/TestBuffer.html#M000855","()","",2],["test_read_long_should_return_nil_on_partial_read","TestBuffer","classes\/TestBuffer.html#M000856","()","",2],["test_read_string_should_read_length_and_data_from_buffer","TestBuffer","classes\/TestBuffer.html#M000859","()","",2],["test_read_string_should_return_nil_if_4_byte_length_cannot_be_read","TestBuffer","classes\/TestBuffer.html#M000860","()","",2],["test_read_to_should_grok_fixnum_patterns","TestBuffer","classes\/TestBuffer.html#M000882","()","",2],["test_read_to_should_grok_regex_patterns","TestBuffer","classes\/TestBuffer.html#M000879","()","",2],["test_read_to_should_grok_string_patterns","TestBuffer","classes\/TestBuffer.html#M000878","()","",2],["test_read_to_should_return_nil_if_pattern_does_not_exist_in_buffer","TestBuffer","classes\/TestBuffer.html#M000876","()","",2],["test_read_with_argument_that_is_less_than_length_should_read_that_many_bytes","TestBuffer","classes\/TestBuffer.html#M000831","()","",2],["test_read_with_argument_that_is_more_than_length_should_read_no_more_than_length","TestBuffer","classes\/TestBuffer.html#M000835","()","",2],["test_read_without_argument_should_read_to_end","TestBuffer","classes\/TestBuffer.html#M000830","()","",2],["test_ready_readers_should_be_filled","Connection::TestSession","classes\/Connection\/TestSession.html#M000853","()","",2],["test_ready_readers_that_are_registered_with_a_block_should_call_block_instead_of_fill","Connection::TestSession","classes\/Connection\/TestSession.html#M000862","()","",2],["test_ready_readers_that_cant_be_filled_should_be_removed","Connection::TestSession","classes\/Connection\/TestSession.html#M000861","()","",2],["test_ready_writers_should_call_send_pending","Connection::TestSession","classes\/Connection\/TestSession.html#M000870","()","",2],["test_rekey_as_needed_when_kex_is_pending_should_do_nothing","Transport::TestSession","classes\/Transport\/TestSession.html#M001095","()","",2],["test_rekey_as_needed_when_no_kex_is_pending_and_no_rekey_is_needed_should_do_nothing","Transport::TestSession","classes\/Transport\/TestSession.html#M001096","()","",2],["test_rekey_as_needed_when_no_kex_is_pending_and_rekey_is_needed_should_initiate_rekey_and_block","Transport::TestSession","classes\/Transport\/TestSession.html#M001097","()","",2],["test_rekey_when_kex_is_pending_should_do_nothing","Transport::TestSession","classes\/Transport\/TestSession.html#M001090","()","",2],["test_rekey_when_no_kex_is_pending_should_initiate_rekey_and_block_until_it_completes","Transport::TestSession","classes\/Transport\/TestSession.html#M001091","()","",2],["test_remainder_as_buffer_should_return_a_new_buffer_filled_with_the_text_after_the_current_position","TestBuffer","classes\/TestBuffer.html#M000850","()","",2],["test_request_failure_packets_should_invoke_next_pending_request_with_false","Connection::TestSession","classes\/Connection\/TestSession.html#M000813","()","",2],["test_request_pty_with_invalid_option_should_raise_error","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000742","()","",2],["test_request_pty_with_options_should_honor_options","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000744","()","",2],["test_request_pty_without_options_should_use_defaults","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000743","()","",2],["test_request_success_packets_should_invoke_next_pending_request_with_true","Connection::TestSession","classes\/Connection\/TestSession.html#M000812","()","",2],["test_reset_bang_should_reset_position_to_0","TestBuffer","classes\/TestBuffer.html#M000883","()","",2],["test_reset_should_reset_counters_and_fix_defaults_for_maximums","Transport::TestState","classes\/Transport\/TestState.html#M001146","()","",2],["test_rijndael_cbc_for_decryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001019","()","",2],["test_rijndael_cbc_for_encryption","Transport::TestCipherFactory","classes\/Transport\/TestCipherFactory.html#M001018","()","",2],["test_send_channel_request_with_callback_should_want_reply","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000774","()","",2],["test_send_channel_request_without_callback_should_not_want_reply","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000773","()","",2],["test_send_data_should_append_to_channels_output_buffer","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000745","()","",2],["test_send_data_should_raise_exception_if_eof_declared","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000807","()","",2],["test_send_global_request_with_callback_should_expect_reply","Connection::TestSession","classes\/Connection\/TestSession.html#M000785","()","",2],["test_send_global_request_with_extras_should_append_extras_to_packet","Connection::TestSession","classes\/Connection\/TestSession.html#M000787","()","",2],["test_send_global_request_without_callback_should_not_expect_reply","Connection::TestSession","classes\/Connection\/TestSession.html#M000784","()","",2],["test_send_message_should_delegate_to_socket","Transport::TestSession","classes\/Transport\/TestSession.html#M001129","()","",2],["test_send_message_should_delegate_to_transport","Authentication::Methods::TestAbstract","classes\/Authentication\/Methods\/TestAbstract.html#M000447","()","",2],["test_send_message_should_enqueue_message_at_transport_layer","Connection::TestSession","classes\/Connection\/TestSession.html#M000775","()","",2],["test_send_packet_should_enqueue_and_send_data_immediately","Transport::TestPacketStream","classes\/Transport\/TestPacketStream.html#M001115","()","",2],["test_send_pending_should_not_fail_when_no_writes_are_pending","TestBufferedIo","classes\/TestBufferedIo.html#M000905","()","",2],["test_send_pending_with_pending_writes_should_write_to_underlying_io","TestBufferedIo","classes\/TestBufferedIo.html#M000906","()","",2],["test_server_disconnect_should_raise_exception","Transport::TestServerVersion","classes\/Transport\/TestServerVersion.html#M001066","()","",2],["test_service_request_should_return_buffer","Transport::TestSession","classes\/Transport\/TestSession.html#M001089","()","",2],["test_session_id_should_query_session_id_from_key_exchange","Authentication::Methods::TestAbstract","classes\/Authentication\/Methods\/TestAbstract.html#M000446","()","",2],["test_set_should_set_variables_and_reset_counters","Transport::TestState","classes\/Transport\/TestState.html#M001147","()","",2],["test_set_with_max_blocks_should_respect_max_blocks_setting","Transport::TestState","classes\/Transport\/TestState.html#M001149","()","",2],["test_set_with_max_packets_should_respect_max_packets_setting","Transport::TestState","classes\/Transport\/TestState.html#M001148","()","",2],["test_set_with_rekey_limit_should_include_rekey_limit_in_computation_of_max_blocks","Transport::TestState","classes\/Transport\/TestState.html#M001150","()","",2],["test_sign_should_fail_if_response_is_SSH2_AGENT_FAILURE","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000618","()","",2],["test_sign_should_fail_if_response_is_SSH_AGENT_FAILURE","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000617","()","",2],["test_sign_should_fail_if_response_is_SSH_COM_AGENT2_FAILURE","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000627","()","",2],["test_sign_should_fail_if_response_is_not_SSH2_AGENT_SIGN_RESPONSE","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000628","()","",2],["test_sign_should_return_signed_data_from_agent","Authentication::TestAgent","classes\/Authentication\/TestAgent.html#M000629","()","",2],["test_sign_with_agent_originated_key_should_request_signature_from_agent","Authentication::TestKeyManager","classes\/Authentication\/TestKeyManager.html#M000675","()","",2],["test_sign_with_file_originated_key_should_load_private_key_and_sign_with_it","Authentication::TestKeyManager","classes\/Authentication\/TestKeyManager.html#M000680","()","",2],["test_stop_listening_to_should_remove_argument_from_listeners","Connection::TestSession","classes\/Connection\/TestSession.html#M000772","()","",2],["test_subsystem_should_be_syntactic_sugar_for_a_channel_request","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000741","()","",2],["test_that_p_and_g_are_provided_by_the_server","Transport::Kex::TestDiffieHellmanGroupExchangeSHA1","classes\/Transport\/Kex\/TestDiffieHellmanGroupExchangeSHA1.html#M000968","()","",2],["test_trailing_whitespace_should_be_preserved","Transport::TestServerVersion","classes\/Transport\/TestServerVersion.html#M001063","()","",2],["test_translate_should_correctly_translate_from_openssh_to_net_ssh_names","TestConfig","classes\/TestConfig.html#M000922","()","",2],["test_unacceptible_server_version_should_raise_exception","Transport::TestServerVersion","classes\/Transport\/TestServerVersion.html#M001064","()","",2],["test_unknown_paranoid_value_raises_exception_if_value_does_not_respond_to_verify","Transport::TestSession","classes\/Transport\/TestSession.html#M001076","()","",2],["test_update_should_return_argument","Transport::TestIdentityCipher","classes\/Transport\/TestIdentityCipher.html#M001055","()","",2],["test_use_agent_should_be_set_to_false_if_agent_could_not_be_found","Authentication::TestKeyManager","classes\/Authentication\/TestKeyManager.html#M000660","()","",2],["test_userauth_request_should_build_well_formed_userauth_packet","Authentication::Methods::TestAbstract","classes\/Authentication\/Methods\/TestAbstract.html#M000449","()","",2],["test_userauth_request_should_translate_extra_booleans_onto_end","Authentication::Methods::TestAbstract","classes\/Authentication\/Methods\/TestAbstract.html#M000450","()","",2],["test_userauth_request_should_translate_extra_strings_onto_end","Authentication::Methods::TestAbstract","classes\/Authentication\/Methods\/TestAbstract.html#M000451","()","",2],["test_wait_for_pending_sends_should_write_multiple_times_if_first_write_was_partial","TestBufferedIo","classes\/TestBufferedIo.html#M000908","()","",2],["test_wait_for_pending_sends_should_write_only_once_if_all_can_be_written_at_once","TestBufferedIo","classes\/TestBufferedIo.html#M000907","()","",2],["test_wait_should_block_while_channel_is_active?","Connection::TestChannel","classes\/Connection\/TestChannel.html#M000798","()","",2],["test_wait_should_enqueue_packets","Transport::TestSession","classes\/Transport\/TestSession.html#M001127","()","",2],["test_wait_should_not_consume_queue_on_reads","Transport::TestSession","classes\/Transport\/TestSession.html#M001125","()","",2],["test_wait_with_block_should_return_immediately_if_block_returns_truth","Transport::TestSession","classes\/Transport\/TestSession.html#M001124","()","",2],["test_wait_without_block_should_return_after_first_read","Transport::TestSession","classes\/Transport\/TestSession.html#M001126","()","",2],["test_write_bignum_should_write_arguments_as_ssh_formatted_bignum_values_to_end_of_buffer","TestBuffer","classes\/TestBuffer.html#M000891","()","",2],["test_write_bool_should_write_arguments_as_1_byte_boolean_values_to_end_of_buffer","TestBuffer","classes\/TestBuffer.html#M000890","()","",2],["test_write_byte_should_write_arguments_as_1_byte_integers_to_end_of_buffer","TestBuffer","classes\/TestBuffer.html#M000889","()","",2],["test_write_dss_key_should_write_argument_to_end_of_buffer","TestBuffer","classes\/TestBuffer.html#M000892","()","",2],["test_write_int64_should_write_arguments_as_8_byte_integers_to_end_of_buffer","TestBuffer","classes\/TestBuffer.html#M000885","()","",2],["test_write_long_should_write_arguments_as_4_byte_integers_to_end_of_buffer","TestBuffer","classes\/TestBuffer.html#M000888","()","",2],["test_write_rsa_key_should_write_argument_to_end_of_buffer","TestBuffer","classes\/TestBuffer.html#M000893","()","",2],["test_write_should_write_arguments_directly_to_end_buffer","TestBuffer","classes\/TestBuffer.html#M000884","()","",2],["test_writers_with_pending_writes_should_be_considered_for_select","Connection::TestSession","classes\/Connection\/TestSession.html#M000852","()","",2],["test_writers_without_pending_writes_should_not_be_considered_for_select","Connection::TestSession","classes\/Connection\/TestSession.html#M000848","()","",2],["to_blob","OpenSSL::PKey::DSA","classes\/OpenSSL\/PKey\/DSA.html#M000357","()","Converts the key to a blob, according to the SSH2 protocol. ",2],["to_blob","OpenSSL::PKey::RSA","classes\/OpenSSL\/PKey\/RSA.html#M000353","()","Converts the key to a blob, according to the SSH2 protocol. ",2],["to_i","Net::SSH::Version","classes\/Net\/SSH\/Version.html#M000417","()","Converts this version to a canonical integer that may be compared against other version objects. ",2],["to_s","Installer::Shebang","classes\/Installer\/Shebang.html#M000665","()","",2],["to_s","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000049","()","Returns a copy of the buffer's content. ",2],["to_s","Net::SSH::Test::RemotePacket","classes\/Net\/SSH\/Test\/RemotePacket.html#M000267","()","Returns this remote packet as a string, suitable for parsing by  Net::SSH::Transport::PacketStream and",2],["to_s","Net::SSH::Version","classes\/Net\/SSH\/Version.html#M000416","()","Converts this version object to a string, where each of the three version components are joined by the",2],["to_ssh","OpenSSL::BN","classes\/OpenSSL\/BN.html#M000347","()","Converts a BN object to a string. The format used is that which is required by the SSH2 protocol. ",2],["translate","Net::SSH::Config","classes\/Net\/SSH\/Config.html#M000098","(settings)","Given a hash of OpenSSH configuration options, converts them into a hash of Net::SSH options. Unrecognized",2],["transport","Net::SSH::Test","classes\/Net\/SSH\/Test.html#M000289","(options={})","Returns the transport session (Net::SSH::Transport::Session) for use in these tests. It is a fully functional",2],["traverse","Installer","classes\/Installer.html#M000711","(task, rel, mid)","",2],["types","Net::SSH::Test::Packet","classes\/Net\/SSH\/Test\/Packet.html#M000268","()","Returns an array of symbols describing the data elements for packets of the same type as this packet.",2],["update","Net::SSH::Transport::IdentityCipher","classes\/Net\/SSH\/Transport\/IdentityCipher.html#M000331","(text)","Passes its single argument through unchanged. ",2],["update_cipher","Net::SSH::Transport::State","classes\/Net\/SSH\/Transport\/State.html#M000379","(data)","",2],["update_shebang_line","Installer","classes\/Installer.html#M000649","(path)","",2],["use_agent=","Net::SSH::Authentication::KeyManager","classes\/Net\/SSH\/Authentication\/KeyManager.html#M000020","(use_agent)","Toggles whether the ssh-agent will be used or not. If true, an attempt will be made to use the ssh-agent.",2],["use_agent?","Net::SSH::Authentication::KeyManager","classes\/Net\/SSH\/Authentication\/KeyManager.html#M000019","()","Identifies whether the ssh-agent will be used or not. ",2],["userauth_request","Net::SSH::Authentication::Methods::Abstract","classes\/Net\/SSH\/Authentication\/Methods\/Abstract.html#M000029","(username, next_service, auth_method, *others)","Creates a new USERAUTH_REQUEST packet. The extra arguments on the end must be either boolean values or",2],["valid?","OpenSSL::PKey::DH","classes\/OpenSSL\/PKey\/DH.html#M000350","()","Determines whether the pub_key for this key is valid. (This algorithm lifted more-or-less directly from",2],["valid_task?","ToplevelInstaller","classes\/ToplevelInstaller.html#M000565","(t)","",2],["valid_task_re","ToplevelInstaller","classes\/ToplevelInstaller.html#M000566","()","",2],["value","ConfigTable::Item","classes\/ConfigTable\/Item.html#M000470","()","",2],["value?","ConfigTable::ExecItem","classes\/ConfigTable\/ExecItem.html#M000488","()","",2],["value?","ConfigTable::Item","classes\/ConfigTable\/Item.html#M000469","()","",2],["value_config?","ConfigTable","classes\/ConfigTable.html#M000463","(name)","",2],["value_config?","ConfigTable::MetaConfigEnvironment","classes\/ConfigTable\/MetaConfigEnvironment.html#M000500","(name)","",2],["verbose?","ConfigTable","classes\/ConfigTable.html#M000424","()","",2],["verbose?","Installer","classes\/Installer.html#M000624","()","module FileOperations requires this ",2],["verbose?","ToplevelInstallerMulti","classes\/ToplevelInstallerMulti.html#M000613","()","module FileOperations requires this ",2],["verbose_off","Installer","classes\/Installer.html#M000626","()","",2],["verifier","MockTransport","classes\/MockTransport.html#M000733","(&block)","",2],["verify","MockTransport::BlockVerifier","classes\/MockTransport\/BlockVerifier.html#M000724","(data)","",2],["verify","Net::SSH::Verifiers::Lenient","classes\/Net\/SSH\/Verifiers\/Lenient.html#M000409","(arguments)","Tries to determine if the connection is being tunnelled, and if so, returns true. Otherwise, performs",2],["verify","Net::SSH::Verifiers::Null","classes\/Net\/SSH\/Verifiers\/Null.html#M000408","(arguments)","Returns true. ",2],["verify","Net::SSH::Verifiers::Strict","classes\/Net\/SSH\/Verifiers\/Strict.html#M000411","(arguments)","",2],["wait","Net::SSH::Connection::Channel","classes\/Net\/SSH\/Connection\/Channel.html#M000110","()","Runs the SSH event loop until the channel is no longer active. This is handy for blocking while you wait",2],["wait","Net::SSH::Transport::Session","classes\/Net\/SSH\/Transport\/Session.html#M000397","()","Waits (blocks) until the given block returns true. If no block is given, this just waits long enough",2],["wait_for_pending_sends","Net::SSH::BufferedIo","classes\/Net\/SSH\/BufferedIo.html#M000085","()","Calls #send_pending repeatedly, if necessary, blocking until the output buffer is empty. ",2],["write","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000078","(*data)","Writes the given data literally into the string. Does not alter the read position. Returns the buffer",2],["write","Net::SSH::Test::Socket","classes\/Net\/SSH\/Test\/Socket.html#M000272","(data)","This doesn't actually do anything, since we don't really care what gets written. ",2],["write_bignum","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000089","(*n)","Writes each argument to the buffer as a bignum (SSH2-style). No checking is done to ensure that the arguments",2],["write_bool","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000088","(*b)","Writes each argument to the buffer as a (C-style) boolean, with 1 meaning true, and 0 meaning false.",2],["write_byte","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000081","(*n)","Writes each argument to the buffer as a byte. Does not alter the read position. Returns the buffer object.",2],["write_int64","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000079","(*n)","Writes each argument to the buffer as a network-byte-order-encoded 64-bit integer (8 bytes). Does not",2],["write_key","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000090","(*key)","Writes the given arguments to the buffer as SSH2-encoded keys. Does not alter the read position. Returns",2],["write_long","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000080","(*n)","Writes each argument to the buffer as a network-byte-order-encoded long (4-byte) integer. Does not alter",2],["write_string","Net::SSH::Buffer","classes\/Net\/SSH\/Buffer.html#M000087","(*text)","Writes each argument to the buffer as an SSH2-encoded string. Each string is prefixed by its length,",2],["CHANGELOG.rdoc","files\/CHANGELOG_rdoc.html","files\/CHANGELOG_rdoc.html","","=== (unreleased)  * Use unbuffered reads when negotiating the protocol version [Steven Hazel]   === 2.0.12",3],["Manifest","files\/Manifest.html","files\/Manifest.html","","CHANGELOG.rdoc lib\/net\/ssh\/authentication\/agent.rb lib\/net\/ssh\/authentication\/constants.rb lib\/net\/ssh\/authentication\/key_manager.rb",3],["README.rdoc","files\/README_rdoc.html","files\/README_rdoc.html","","= Net::SSH  * http:\/\/net-ssh.rubyforge.org\/ssh  == DESCRIPTION:  Net::SSH is a pure-Ruby implementation",3],["Rakefile","files\/Rakefile.html","files\/Rakefile.html","","require '.\/lib\/net\/ssh\/version'  begin   require 'echoe' rescue LoadError   abort \"You'll need to have",3],["THANKS.rdoc","files\/THANKS_rdoc.html","files\/THANKS_rdoc.html","","Net::SSH was originally written by Jamis Buck <jamis@37signals.com>. In addition, the following individuals",3],["ssh.rb","files\/lib\/net\/ssh_rb.html","files\/lib\/net\/ssh_rb.html","","Make sure HOME is set, regardless of OS, so that File.expand_path works as expected with tilde characters.",3],["agent.rb","files\/lib\/net\/ssh\/authentication\/agent_rb.html","files\/lib\/net\/ssh\/authentication\/agent_rb.html","","",3],["constants.rb","files\/lib\/net\/ssh\/authentication\/constants_rb.html","files\/lib\/net\/ssh\/authentication\/constants_rb.html","","",3],["key_manager.rb","files\/lib\/net\/ssh\/authentication\/key_manager_rb.html","files\/lib\/net\/ssh\/authentication\/key_manager_rb.html","","",3],["abstract.rb","files\/lib\/net\/ssh\/authentication\/methods\/abstract_rb.html","files\/lib\/net\/ssh\/authentication\/methods\/abstract_rb.html","","",3],["hostbased.rb","files\/lib\/net\/ssh\/authentication\/methods\/hostbased_rb.html","files\/lib\/net\/ssh\/authentication\/methods\/hostbased_rb.html","","",3],["keyboard_interactive.rb","files\/lib\/net\/ssh\/authentication\/methods\/keyboard_interactive_rb.html","files\/lib\/net\/ssh\/authentication\/methods\/keyboard_interactive_rb.html","","",3],["password.rb","files\/lib\/net\/ssh\/authentication\/methods\/password_rb.html","files\/lib\/net\/ssh\/authentication\/methods\/password_rb.html","","",3],["publickey.rb","files\/lib\/net\/ssh\/authentication\/methods\/publickey_rb.html","files\/lib\/net\/ssh\/authentication\/methods\/publickey_rb.html","","",3],["pageant.rb","files\/lib\/net\/ssh\/authentication\/pageant_rb.html","files\/lib\/net\/ssh\/authentication\/pageant_rb.html","","",3],["session.rb","files\/lib\/net\/ssh\/authentication\/session_rb.html","files\/lib\/net\/ssh\/authentication\/session_rb.html","","",3],["buffer.rb","files\/lib\/net\/ssh\/buffer_rb.html","files\/lib\/net\/ssh\/buffer_rb.html","","",3],["buffered_io.rb","files\/lib\/net\/ssh\/buffered_io_rb.html","files\/lib\/net\/ssh\/buffered_io_rb.html","","",3],["config.rb","files\/lib\/net\/ssh\/config_rb.html","files\/lib\/net\/ssh\/config_rb.html","","",3],["channel.rb","files\/lib\/net\/ssh\/connection\/channel_rb.html","files\/lib\/net\/ssh\/connection\/channel_rb.html","","",3],["constants.rb","files\/lib\/net\/ssh\/connection\/constants_rb.html","files\/lib\/net\/ssh\/connection\/constants_rb.html","","",3],["session.rb","files\/lib\/net\/ssh\/connection\/session_rb.html","files\/lib\/net\/ssh\/connection\/session_rb.html","","",3],["term.rb","files\/lib\/net\/ssh\/connection\/term_rb.html","files\/lib\/net\/ssh\/connection\/term_rb.html","","",3],["errors.rb","files\/lib\/net\/ssh\/errors_rb.html","files\/lib\/net\/ssh\/errors_rb.html","","",3],["key_factory.rb","files\/lib\/net\/ssh\/key_factory_rb.html","files\/lib\/net\/ssh\/key_factory_rb.html","","",3],["known_hosts.rb","files\/lib\/net\/ssh\/known_hosts_rb.html","files\/lib\/net\/ssh\/known_hosts_rb.html","","",3],["loggable.rb","files\/lib\/net\/ssh\/loggable_rb.html","files\/lib\/net\/ssh\/loggable_rb.html","","",3],["packet.rb","files\/lib\/net\/ssh\/packet_rb.html","files\/lib\/net\/ssh\/packet_rb.html","","",3],["prompt.rb","files\/lib\/net\/ssh\/prompt_rb.html","files\/lib\/net\/ssh\/prompt_rb.html","","",3],["errors.rb","files\/lib\/net\/ssh\/proxy\/errors_rb.html","files\/lib\/net\/ssh\/proxy\/errors_rb.html","","",3],["http.rb","files\/lib\/net\/ssh\/proxy\/http_rb.html","files\/lib\/net\/ssh\/proxy\/http_rb.html","","",3],["socks4.rb","files\/lib\/net\/ssh\/proxy\/socks4_rb.html","files\/lib\/net\/ssh\/proxy\/socks4_rb.html","","",3],["socks5.rb","files\/lib\/net\/ssh\/proxy\/socks5_rb.html","files\/lib\/net\/ssh\/proxy\/socks5_rb.html","","",3],["ruby_compat.rb","files\/lib\/net\/ssh\/ruby_compat_rb.html","files\/lib\/net\/ssh\/ruby_compat_rb.html","","",3],["forward.rb","files\/lib\/net\/ssh\/service\/forward_rb.html","files\/lib\/net\/ssh\/service\/forward_rb.html","","",3],["test.rb","files\/lib\/net\/ssh\/test_rb.html","files\/lib\/net\/ssh\/test_rb.html","","",3],["channel.rb","files\/lib\/net\/ssh\/test\/channel_rb.html","files\/lib\/net\/ssh\/test\/channel_rb.html","","",3],["extensions.rb","files\/lib\/net\/ssh\/test\/extensions_rb.html","files\/lib\/net\/ssh\/test\/extensions_rb.html","","",3],["kex.rb","files\/lib\/net\/ssh\/test\/kex_rb.html","files\/lib\/net\/ssh\/test\/kex_rb.html","","",3],["local_packet.rb","files\/lib\/net\/ssh\/test\/local_packet_rb.html","files\/lib\/net\/ssh\/test\/local_packet_rb.html","","",3],["packet.rb","files\/lib\/net\/ssh\/test\/packet_rb.html","files\/lib\/net\/ssh\/test\/packet_rb.html","","",3],["remote_packet.rb","files\/lib\/net\/ssh\/test\/remote_packet_rb.html","files\/lib\/net\/ssh\/test\/remote_packet_rb.html","","",3],["script.rb","files\/lib\/net\/ssh\/test\/script_rb.html","files\/lib\/net\/ssh\/test\/script_rb.html","","",3],["socket.rb","files\/lib\/net\/ssh\/test\/socket_rb.html","files\/lib\/net\/ssh\/test\/socket_rb.html","","",3],["algorithms.rb","files\/lib\/net\/ssh\/transport\/algorithms_rb.html","files\/lib\/net\/ssh\/transport\/algorithms_rb.html","","",3],["cipher_factory.rb","files\/lib\/net\/ssh\/transport\/cipher_factory_rb.html","files\/lib\/net\/ssh\/transport\/cipher_factory_rb.html","","",3],["constants.rb","files\/lib\/net\/ssh\/transport\/constants_rb.html","files\/lib\/net\/ssh\/transport\/constants_rb.html","","",3],["hmac.rb","files\/lib\/net\/ssh\/transport\/hmac_rb.html","files\/lib\/net\/ssh\/transport\/hmac_rb.html","","",3],["abstract.rb","files\/lib\/net\/ssh\/transport\/hmac\/abstract_rb.html","files\/lib\/net\/ssh\/transport\/hmac\/abstract_rb.html","","",3],["md5.rb","files\/lib\/net\/ssh\/transport\/hmac\/md5_rb.html","files\/lib\/net\/ssh\/transport\/hmac\/md5_rb.html","","",3],["md5_96.rb","files\/lib\/net\/ssh\/transport\/hmac\/md5_96_rb.html","files\/lib\/net\/ssh\/transport\/hmac\/md5_96_rb.html","","",3],["none.rb","files\/lib\/net\/ssh\/transport\/hmac\/none_rb.html","files\/lib\/net\/ssh\/transport\/hmac\/none_rb.html","","",3],["sha1.rb","files\/lib\/net\/ssh\/transport\/hmac\/sha1_rb.html","files\/lib\/net\/ssh\/transport\/hmac\/sha1_rb.html","","",3],["sha1_96.rb","files\/lib\/net\/ssh\/transport\/hmac\/sha1_96_rb.html","files\/lib\/net\/ssh\/transport\/hmac\/sha1_96_rb.html","","",3],["identity_cipher.rb","files\/lib\/net\/ssh\/transport\/identity_cipher_rb.html","files\/lib\/net\/ssh\/transport\/identity_cipher_rb.html","","",3],["kex.rb","files\/lib\/net\/ssh\/transport\/kex_rb.html","files\/lib\/net\/ssh\/transport\/kex_rb.html","","",3],["diffie_hellman_group1_sha1.rb","files\/lib\/net\/ssh\/transport\/kex\/diffie_hellman_group1_sha1_rb.html","files\/lib\/net\/ssh\/transport\/kex\/diffie_hellman_group1_sha1_rb.html","","",3],["diffie_hellman_group_exchange_sha1.rb","files\/lib\/net\/ssh\/transport\/kex\/diffie_hellman_group_exchange_sha1_rb.html","files\/lib\/net\/ssh\/transport\/kex\/diffie_hellman_group_exchange_sha1_rb.html","","",3],["openssl.rb","files\/lib\/net\/ssh\/transport\/openssl_rb.html","files\/lib\/net\/ssh\/transport\/openssl_rb.html","","",3],["packet_stream.rb","files\/lib\/net\/ssh\/transport\/packet_stream_rb.html","files\/lib\/net\/ssh\/transport\/packet_stream_rb.html","","",3],["server_version.rb","files\/lib\/net\/ssh\/transport\/server_version_rb.html","files\/lib\/net\/ssh\/transport\/server_version_rb.html","","",3],["session.rb","files\/lib\/net\/ssh\/transport\/session_rb.html","files\/lib\/net\/ssh\/transport\/session_rb.html","","",3],["state.rb","files\/lib\/net\/ssh\/transport\/state_rb.html","files\/lib\/net\/ssh\/transport\/state_rb.html","","",3],["lenient.rb","files\/lib\/net\/ssh\/verifiers\/lenient_rb.html","files\/lib\/net\/ssh\/verifiers\/lenient_rb.html","","",3],["null.rb","files\/lib\/net\/ssh\/verifiers\/null_rb.html","files\/lib\/net\/ssh\/verifiers\/null_rb.html","","",3],["strict.rb","files\/lib\/net\/ssh\/verifiers\/strict_rb.html","files\/lib\/net\/ssh\/verifiers\/strict_rb.html","","",3],["version.rb","files\/lib\/net\/ssh\/version_rb.html","files\/lib\/net\/ssh\/version_rb.html","","",3],["setup.rb","files\/setup_rb.html","files\/setup_rb.html","","setup.rb Copyright (c) 2000-2005 Minero Aoki This program is free software. You can distribute\/modify",3],["common.rb","files\/test\/authentication\/methods\/common_rb.html","files\/test\/authentication\/methods\/common_rb.html","","",3],["test_abstract.rb","files\/test\/authentication\/methods\/test_abstract_rb.html","files\/test\/authentication\/methods\/test_abstract_rb.html","","",3],["test_hostbased.rb","files\/test\/authentication\/methods\/test_hostbased_rb.html","files\/test\/authentication\/methods\/test_hostbased_rb.html","","",3],["test_keyboard_interactive.rb","files\/test\/authentication\/methods\/test_keyboard_interactive_rb.html","files\/test\/authentication\/methods\/test_keyboard_interactive_rb.html","","",3],["test_password.rb","files\/test\/authentication\/methods\/test_password_rb.html","files\/test\/authentication\/methods\/test_password_rb.html","","",3],["test_publickey.rb","files\/test\/authentication\/methods\/test_publickey_rb.html","files\/test\/authentication\/methods\/test_publickey_rb.html","","",3],["test_agent.rb","files\/test\/authentication\/test_agent_rb.html","files\/test\/authentication\/test_agent_rb.html","","",3],["test_key_manager.rb","files\/test\/authentication\/test_key_manager_rb.html","files\/test\/authentication\/test_key_manager_rb.html","","",3],["test_session.rb","files\/test\/authentication\/test_session_rb.html","files\/test\/authentication\/test_session_rb.html","","",3],["common.rb","files\/test\/common_rb.html","files\/test\/common_rb.html","","",3],["eqsign","files\/test\/configs\/eqsign.html","files\/test\/configs\/eqsign.html","","Host=test.test   Port =1234   Compression yes ",3],["exact_match","files\/test\/configs\/exact_match.html","files\/test\/configs\/exact_match.html","","Host other.host   Compression no   Port 1231  Host test.host   Compression yes   ForwardAgent yes   Port",3],["wild_cards","files\/test\/configs\/wild_cards.html","files\/test\/configs\/wild_cards.html","","Host test.*   Port 1234   Compression no  Host tes?.host   Port 4321   ForwardAgent yes  Host *.hos?",3],["test_channel.rb","files\/test\/connection\/test_channel_rb.html","files\/test\/connection\/test_channel_rb.html","","",3],["test_session.rb","files\/test\/connection\/test_session_rb.html","files\/test\/connection\/test_session_rb.html","","",3],["test_all.rb","files\/test\/test_all_rb.html","files\/test\/test_all_rb.html","","",3],["test_buffer.rb","files\/test\/test_buffer_rb.html","files\/test\/test_buffer_rb.html","","",3],["test_buffered_io.rb","files\/test\/test_buffered_io_rb.html","files\/test\/test_buffered_io_rb.html","","",3],["test_config.rb","files\/test\/test_config_rb.html","files\/test\/test_config_rb.html","","",3],["test_key_factory.rb","files\/test\/test_key_factory_rb.html","files\/test\/test_key_factory_rb.html","","",3],["test_md5.rb","files\/test\/transport\/hmac\/test_md5_rb.html","files\/test\/transport\/hmac\/test_md5_rb.html","","",3],["test_md5_96.rb","files\/test\/transport\/hmac\/test_md5_96_rb.html","files\/test\/transport\/hmac\/test_md5_96_rb.html","","",3],["test_none.rb","files\/test\/transport\/hmac\/test_none_rb.html","files\/test\/transport\/hmac\/test_none_rb.html","","",3],["test_sha1.rb","files\/test\/transport\/hmac\/test_sha1_rb.html","files\/test\/transport\/hmac\/test_sha1_rb.html","","",3],["test_sha1_96.rb","files\/test\/transport\/hmac\/test_sha1_96_rb.html","files\/test\/transport\/hmac\/test_sha1_96_rb.html","","",3],["test_diffie_hellman_group1_sha1.rb","files\/test\/transport\/kex\/test_diffie_hellman_group1_sha1_rb.html","files\/test\/transport\/kex\/test_diffie_hellman_group1_sha1_rb.html","","",3],["test_diffie_hellman_group_exchange_sha1.rb","files\/test\/transport\/kex\/test_diffie_hellman_group_exchange_sha1_rb.html","files\/test\/transport\/kex\/test_diffie_hellman_group_exchange_sha1_rb.html","","",3],["test_algorithms.rb","files\/test\/transport\/test_algorithms_rb.html","files\/test\/transport\/test_algorithms_rb.html","","",3],["test_cipher_factory.rb","files\/test\/transport\/test_cipher_factory_rb.html","files\/test\/transport\/test_cipher_factory_rb.html","","",3],["test_hmac.rb","files\/test\/transport\/test_hmac_rb.html","files\/test\/transport\/test_hmac_rb.html","","",3],["test_identity_cipher.rb","files\/test\/transport\/test_identity_cipher_rb.html","files\/test\/transport\/test_identity_cipher_rb.html","","",3],["test_packet_stream.rb","files\/test\/transport\/test_packet_stream_rb.html","files\/test\/transport\/test_packet_stream_rb.html","","",3],["test_server_version.rb","files\/test\/transport\/test_server_version_rb.html","files\/test\/transport\/test_server_version_rb.html","","",3],["test_session.rb","files\/test\/transport\/test_session_rb.html","files\/test\/transport\/test_session_rb.html","","",3],["test_state.rb","files\/test\/transport\/test_state_rb.html","files\/test\/transport\/test_state_rb.html","","",3]]}}